{
    "Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones": {
        "title": "Ask Experienced Devs Weekly Thread: A weekly thread for inexperienced developers to ask experienced ones",
        "score": 9,
        "url": "https://www.reddit.com/r/ExperiencedDevs/comments/1dn003p/ask_experienced_devs_weekly_thread_a_weekly/",
        "content": "A thread for Developers and IT folks with less experience to ask more experienced souls questions about the industry.\n\n&#x200B;\n\nPlease keep top level comments limited to Inexperienced Devs. Most rules do not apply, but keep it civil. Being a jerk will not be tolerated.\n\n&#x200B;\n\n**Inexperienced Devs should refrain from answering other Inexperienced Devs' questions.**",
        "num_comments": 68,
        "comments": [
            "I am a junior developer with 3 years of experience. What should I learn apart from what I do at work to keep myself in the game with the recent changes in tech (AI etc). Are there any pointers or resources for the same? Thanks!",
            "After enough YOE, do you get to a point where you can read any codebase, any language with ease ?  Or is that something only a few genious devs can do ?",
            "Im on a track to get promoted from a senior software engineer to staff. I know salaries vary from company to company but is there any guideline for range that I should expect whether it be percentage of what I make now or actual number range? Im not big tech so levels.fyi seems more like the big leagues compared to my skills but normal Glassdoor/ziprecruiter seem too low compared to what I make now.",
            "Hi devs. I think myself to be the leetcode monkey that has done few problems and mugged up few system design to secure a job. But I don't feel satisfied with my knowledge. I don't understand how software companies are sustaining, which ones are making more ROI or go about designing some end to end products. I can only think of some CRUD applications. I want to broaden my thinking and knowledge. Only recently I came to know CPQ, ITOM, CRM. My workplace is mundane that deals with legacy java application. I want to know more and hopefully steer my career with full confidence.",
            "What are your thoughts on using tools like Shortcut, Jira, Linear, etc to organize projects?",
            "One thing I do that may or may not work for you is since I've began working as a developer I started a Word Document called \"Work Log Documentation\" and basically every day I make sure that whatever tasks I worked on is documented. This has been very useful for a few occurrences where the team lead or PMs have asked about when I started X project, or what was I working on from date A to B, which of course should be tracked in Jira or other ticketing platform, but sometimes things get missed, so it's nice to have this log separate from any ticketing tool.\n\nAdditionally, when it comes time for performance reviews or updating your CV/Resume you now have a full log of everything you've worked on which is very helpful.",
            "Just ask? If you see a colleague doing a \"useful trick\" ask them how they did it. Also, striving for \"efficiency\" is working on a sand castle and might be counter productive. Memorizing hot keys you will never use for example. If you're doing something which takes a long amount of time or which feels chaotic, try to find out if there's an faster or better way and apply that.",
            "Have you looked into DevOps roles? If you're in a corporate type setting, try talking to some devops guys there and ask them what they do. Seems like you might like some of that.",
            "I dont think its based on YOE or seniority - reading unfamiliar code (especially in an unfamiliar language) is a skill you need to practice. I think its possible to get to ~senior without it, but IME its really helpful towards being productive in a senior+ role.",
            "Yeah, tbh if the code is hard to read it's usually because the devs before did a bad job of writing the code. Devs in general should be able to pick up a new codebase/language and effectively contribute as an IC pretty quick. I think if you're a mid level dev, you can pick up a new language in a new codebase and be an effective team member in about 3 months."
        ]
    },
    "How do you stay motivated/interested? How do you make yourself care?": {
        "title": "How do you stay motivated/interested? How do you make yourself care?",
        "score": 156,
        "url": "https://www.reddit.com/r/ExperiencedDevs/comments/1dqnj5r/how_do_you_stay_motivatedinterested_how_do_you/",
        "content": "When I was a kid I always said I wanted to \"work on computers\" when I grew up (unless I was saying I wanted to be a physicist, but that one didn't happen). I loved computers. I spent all my time on a computer. I loved to pull all-nighters playing around with Linux and figuring out new things. \n\nThen, 7 years ago, I started a career as a software developer. I've hated it ever since. I hate the corporate speak. I hate the internal politics. I hate being constantly aware that my only purpose is being a cog in a machine that exists for the purpose of generating some rich people a disproportionate amount of money compared to the amount they pay the people who do the actual work. \n\nHalfway through my career I moved into consumer-facing IoT. That at least made things more interesting. It was more complex, it was an interesting product, and I work with more skilled, nerdy devs who I find more relatable. But it still hasn't been enough to really keep me interested. It's never been enough to make me care. \n\nAnd yes, I make good money. That keeps me doing my job, but it's not enough to make me care about what I do. And that lack of care just chips away at me every day. I wish I was doing something I cared about.",
        "num_comments": 90,
        "comments": [
            "I stay motivated by thinking about the construction job I had as a student.",
            "Insert Mr Krabbs gif, I like money!",
            "I love tech but corp types consider it a weakness so i show them my money loving mobster side",
            "I personally am motivated by feeling helpful, so if what I'm building makes someone's job easier I can get satisfaction out of that.  I also hate the corporate politics and unconstrained capitalism, but I'm good at compartmentalizing.  If I get along with the people I work with and I'm not having constant frustrations due to road blocks or being unable to produce something that \\*someone\\* appreciates, I'm happy enough.  I wish I had the mindset of \"it's just a paycheck\" but I'm just not wired that way.  I have to feel useful.",
            "Making your hobby your job just makes you hate your hobby.  I can relate, except I've been here a lot longer.  \n\nEvery once in a while You might find something related to programming that you actually *want* to do..  Don't force it. Don't try to recapture the magic -- it's gone for good. Instead, just grind away at your job and use that money to fund new hobbies you enjoy.",
            "I used to be a nurse at a big hospital before I was a dev, there's worse things then boredom.",
            "That's the neat part. You don't.",
            "A good team working on a good product makes things have a lot more meaning and justifies the effort, for me at least. Also my salary keeps increasing like 30-40% per year which helps a lot",
            "What would make you care?",
            "Maybe a very small company or a startup can bring joy back to you, you won't be a cog in a big machine (for a while), politics will be minimal and in theory you can influence your stocks"
        ]
    },
    "How many combined roles are manageable?": {
        "title": "How many combined roles are manageable?",
        "score": 3,
        "url": "https://www.reddit.com/r/ExperiencedDevs/comments/1drb713/how_many_combined_roles_are_manageable/",
        "content": "I hit a peak in workload last week. I was multitasking three meetings at the same time, one meeting in each ear and teams transcription on the 3rd, did this all week. This was a clear indication that I have too much responsibility and too many roles.\n\nI lead 3 different dev teams, one in-house and two offshore. I do both team lead and tech lead. I'm also responsible for enterprise architecture where i do cross functional system design, this is a shared responsibility with a few other enterprise architects. On top of all this I often deal with management whenever there are issues with a project or a product.\n\nI'm not sure whats resonable here, how many different roles are manageable?",
        "num_comments": 4,
        "comments": [
            "More like a clear indication  that you havent learned how to manage expectations",
            "Honestly 2 meetings at a time is a lot. You lose too much during context switching to be fully effective.",
            "One. If you measure objectively, it turns out humans are awful at multitasking and that context switching has an enormous cost.\n\nManagement is the art of setting up everyone so that they have exactly one job and can focus on doing it to the best of their ability.",
            "Exactly one role is manageable IMHO. 0.8 is probably optimal to leave some time for innovation, reflection and have some margin in case something takes longer than expected.\n\nUnless you're enjoying the pressure, I would suggest that you set some boundaries and delegate more. If you're leading three teams there must be some talent in there that could step up to the role of lead.\n\nIf not, you have a bigger problem and need to fix your hiring first ;)\n\nArchitecture should also be a shared responsibility, as an architect it's very acceptable to task the team to come-up with a design and coach them in the right direction.\n\nSure, it might take a good senior longer than you, _the first time_. But see it as an investment in their skills, eventually the whole company will be able to move faster.\n\nI've had great success with communicating to management and stakeholders that a person (or team) can do one thing at a time. Prioritize the projects and get them to accept that everything below the fold is unlikely to happen.\n\nIf they need you to move faster, write an onepager explaining what's slowing down the team (technical debt, team composition, bureaucracy), propose solutions but be honest about the fact that things will take time and effort."
        ]
    },
    "Thoughts on switching from a good team to a potentially bad team": {
        "title": "Thoughts on switching from a good team to a potentially bad team",
        "score": 5,
        "url": "https://www.reddit.com/r/ExperiencedDevs/comments/1dr66rx/thoughts_on_switching_from_a_good_team_to_a/",
        "content": "The answer might seem obvious but hear me out if my fears are warranted.\n\nI've been working at a decent mid-sized product based company for quite some time now. It's been a great journey, and I've received some promotions for the 4 years I've been here. My current work involves the usual development + managing software arch decisions to a certain extent, and I like it here. There's a lot of work, but the expectations are not insane, and we get a decent amount of time to complete it.\n\nWe sometimes work in conjunction with another team. Think of it as making a Pizza, with our team managing the dough and toppings, and the other team baking it.\n\nThe baking team is a very closed off team across my org, and people mostly have no idea what happens inside it. It's difficult to come on the same page with the team any time we have to come up with the size of dough they'd like, and they take an immense amount of time baking it. Requests for new types of pizzas or improvements are somehow ignored, so much so that my team is often the one improving the dough and pre-baking the pizzas to some extent. No improvement in the baking process, etc because the team apparently seems afraid to change anything in their process. Any request for change involves months of deliberation and delays. The product team has essentially stopped asking for change requests from the team.\n\nThis has been the case since even before I joined the org. The other team has a manager that's the most difficult to work with, and that's what I (and a lot of others) assume is the root of the problem. The guy is incredibly pedantic and resistant to any change. The team now apparently has no experienced developer except him, who doesn't actually work on any code himself. The culture has been such that all the senior devs within the team have exited the team and left the company.\n\nIn the reverse, my team has a great culture, where I've rarely seen anyone leaving the company. \n\nThe management now wants my team, specifically me, to move into the team, and take charge of things to \"break the wall\", for the lack of a better phrase. However, the biggest problem I see in the team is the walled garden culture, with the manager mostly calling the shots everywhere. I'm apprehensive about joining the team because I've been a part of toxic teams before, and I do not want to go through that phase again. I've consciously decided to stay away from startups who inevitably have a very bad work culture, and decline to interview with them if they reach out.\n\nMy manager thinks that this will be a great opportunity to learn the pizza baking process pipeline end-to-end, which makes sense, and that is also an opportunity to make the other team work in sync with my current team. He also is open to a temporary switch to understand if I'll like it within the team, and also open to me refusing this request for the move. I've been told that switching to the team will not lead to me reporting to that manager, but I have an inkling that this might not entirely be true or as easy as they say. That's the guy who has been calling the shots for quite some years (if not a decade) now.\n\nI'm not sure if this is relevant, but I was promoted last week, with a less than expected salary raise. I did let them know about my expectations but was denied any change in the provided raise. There was no expectation then to move teams, and then they pull this on me, a couple of days ago. I do not think any of this is related to my performance, as I've been consistently a high performer in my team.\n\nConsequently, I can see the following pros and cons:\n\nPros: \n\n1. New Challenge and learning opportunity\n\n2. If I manage to \"break the wall\", then I will potentially be better recognized and appreciated\n\nCons:\n\n1. Toxic work culture\n\n2. Other team may reject me or my suggestions/improvements that can be done\n\n3. No other team member I can learn more from\n\n4. Terrible managerial support and may get pushed under the bus by the new manager\n\n5. Potentially bad mental health\n\nPeople who have experienced similar situations, would you have any suggestions on how to approach this? My immediate instinct says no, but the potential to make an impact is making me think over it and ask for opinions. To reiterate, my current manager is not asking for a yes, or forcing me there.\n\nHow would you guys approach this? Any advice from your experience helps. \n\nThanks for reading.",
        "num_comments": 19,
        "comments": [
            "Sounds like you'd be a sacrificial lamb :\\. You'd be given just enough power to take the blame but not enough to fix the problem.",
            "This sounds like a terrible plan for you (and management). If they want something fixed they need to put a manager who will have the authority to make it better in place. It would be a different story if they want you to learn the process so they can manage the guy out. It's crazy that whoever manages him isn't seeing and correcting this behavior, and they're just throwing developers in the fire.\n\nI would run from this \"opportunity\".",
            "If the current manager is not on board, he either needs to be fired or this entire thing will not succeed. 100%.",
            "Your assignment here, should you decide to accept it, is to undermine and neutralize a toxic fiefdoms toxic leader, run him out of town, take over, and clean up.\n\nThats just weird. This is business, not some two-bit boom town in the Wild West. If the people who want this guy neutralized want it so badly, why play mind games? Why not just sack him? \n\nThis isnt a rhetorical question, its a real question for your bosses. Ask them what their desired result is to be. Seriously, why not just sack this guy? Why not put a team of two, you and a skillful manager, in charge of making this business change. Part of the deal would be making the toxic guy work for your partner manager. If he doesnt cooperate, deal with the problem managerially.\n\nOr just sack him. Take the temporary hit to the business while your team figures out how to carry on.\n\nTreating this as a purely technical issue rather than a leadership issue? Why? You need to know that going in, or youre just cannon fodder.\n\nMy suggestion is to ask these questions and listen carefully to the answers. Youre not trying to get this guy sacked. You are trying to understand the problem better.",
            "I'm in a somewhat similar situation you're in now. Took a new job with an old boss. Boss hired me to help change the culture and processes because we had a great situation at our last gig. First week I'm there, I realize how awful it is. My new coworkers are gossiping about their coworkers to me. They don't even know me! It was really bad. \n\nI haven't changed a damn thing. I'm just one person. I led a project that went really well, and everyone was super impressed. However, when I suggested we change some of their processes that clearly slowed me down, they lost their shit. One product manager even started canceling our meetings because they felt disrespected. Now I know you don't know me, but trust me when I say I am an extremely agreeable person at work. My coworkers, PMs, and QAs all loved me at every job I've been at. So for this PM to react this way was just the nail in the coffin for me. And if you're curious, my suggestion was to break up the stories into smaller stories. The stories would take us 2-3 weeks to complete, and were difficult to test because they all had 10-15 acceptance criteria bullet points. That's the suggestion that offended them. \n\nI don't know your situation, but if people are toxic, you cannot change them. They want to be shitty. They don't want some positive influence to change them.",
            "Maybe have a discussion with that team first with some expectations, if they're on board and what they see as the challenges in suceeding?\n\nYou'd certainly have to butter up that manager. Take him out for lunch, etc. if you want to make progress\n\nOr make it part of your transition that he moves into another role\n\nI don't mind working on bad teams/code as long as we're in a cycle of continuous improvement",
            "Trust your instinct - if you aren't being given control, and you already expect to be overruled and stonewalled by the current manager of the team in question, then I would seriously advise you to put everything else out of your mind: there is almost no prospect whatsoever of you making the kind of impact you're being asked to make.\n\nI would raise these concerns to your *current* manager first and foremost: if they are expecting results from you that you will be actively prevented from delivering, then there's a very high chance that you will 'fail'. \n\nTaking on a challenge is one thing, but taking on a *challenging organisation* is an entirely different thing, and one which can rapidly drive you crazy.\n\nIt sounds like the business seems to recognise that there is *a* problem with the team in question - but you don't hire a plumber to fix the hole in the roof.",
            ">Maybe have a discussion with that team first with some expectations, if they're on board and what they see as the challenges in suceeding?\n\n>You'd certainly have to butter up that manager. Take him out for lunch, etc. if you want to make progress\n\n\nThe only one making decisions in that team is the manager in concern. I've worked with him, and he's terrible. I and his team been working on a project that he's supposed to be leading since a year, and he has no clue what we have done. He'll say \"we have to work as a team\"/\"you are leading it\" to me in presence of other stakeholders when he wants to push any of their problems under the rug. He's actually pushed me under the bus even without me working under him multiple times.\n\nWorking with terrible code isn't much of a problem, I've seen most code being barely maintainable for most of my career. And I have tackled it, so it's not a problem for me.",
            "Dunno. I probably wouldn't then\n\n\nUnless you have authority over him, I think you're setting yourself up for failure\n\n\nDon't put yourself on fire to keep otherswarm",
            ">It would be a different story if they want you to learn the process so they can manage the guy out.\n\nThat's the thing, they say that they want me to learn the process so it's not dependent on that manager, but not because they want to push the guy out. This, even if it happens, will take quite some time since it's a very complex system. \n\nI can see how I can be a thorn for him if I move into his team. It seems they're trying to solve a managerial issue using developers."
        ]
    },
    "Freelance charging rate": {
        "title": "Freelance charging rate",
        "score": 6,
        "url": "https://www.reddit.com/r/ExperiencedDevs/comments/1dr3ufs/freelance_charging_rate/",
        "content": "Hey, I'm kind of thinking something. So I'm charging my client per hour some 85$. Been developing app for quite some time now. Now...problem is that apps code is quite good, and it's easy to integrate new stuff, or make changes. This causes me to spent like 5 minutes on a ticket instead of typical development time of minimum 1h.\n\nHow do you approach this stuff? Do you charge person 5 minutes of work?\n\nEdit: Thanks everyone, I'll start rounding up.",
        "num_comments": 31,
        "comments": [
            "How to get paid more for higher productivity? Usually companies don't want to pay a higher base hourly rate. So you bypass this by working faster and charging for it as if you worked longer like a less productive dev would. This leaves you more time to do other things with your time.\n\nYou essentially charge for the task not for the time spent.",
            "You need to calculate the total time: starting your dev environment for that customer reading and clearing requirement, development, testing, self review, documenting your work (including time sheet). not directly chargeable but still happening: looking for job, billing, ...\n\nNobody works 5 minute on a ticket if you look at the big picture. That's the reason why many software only allows booking times in 15 minute slots.",
            "Always round (up) to the nearest hour, especially at relatively low rates. If youre uncomfortable with that for something that took you literally 5 minutes (this HAS to be an extreme exception, right?) you could always do 30 mins of code cleanup",
            "You could negotiate a maintenance contract that covers a number of those small tasks for a fixed monthly cost, then charge extra for units of work larger then 1 hour.",
            "Usually your contract language should have a minimum billing clause. Sometimes its 15 minute blocks for emails and phone calls but could round up to an hour for features.",
            "Good plumbers charge flat service fees per the job. In my area, labor for a new toilet is like $300. It takes em 25 minutes to swap them.",
            "Would be great if you agreed this with the client upfront. In most contracts you're paid for an hour of your time.",
            "You are right, I should definitely charge my time. But at this ticket that I solved this morning it literally took me 5 min to run \\`npm run dev\\`, open a ticket, read it, and integrate new field which users can use now, just cause I've previously set up everything so it's easy to integrate. even tho complete pipeline is quite complex in a code.  \nThis happened quite a few times. On one hand, I am happy I can produce to my client more then he would typically pay for, but on the other hand, I am hurting myself for writing good code.",
            "Yea, it tends to be rare, but occasionally it happens. But also, tasks that might take 5h take 1h sometimes, just cause I'm familiar with codebase, and I've coded it, as I like to think, correctly.",
            "And this is where you pretend to work longer. Because it is hard to get a contract with a high base rate even if you are more productive."
        ]
    }
}