{
    "The State of the Subreddit (May 2024)": {
        "title": "The State of the Subreddit (May 2024)",
        "score": 569,
        "url": "https://www.reddit.com/r/programming/comments/1chs4ib/the_state_of_the_subreddit_may_2024/",
        "content": "Hello fellow programs! \n\n**tl;dr** some revisions to the rules to reduce low quality blogspam. The most notable are: banning **listicles** (\"7 cool things I copy-pasted from somebody else!\"), **extreme beginner articles** (\"how to use a for loop\"), and some **limitations on career posts** (they must be related to programming careers). Lastly, I want **feedback** on these changes and the subreddit in general and invite you to **vote** and **use the report button** when you see posts that violate the rules because they'll help us get to it faster.\n\nr/programming's mission is to **be the place with the highest quality programming content, where I can go to read something interesting and learn something new every day**. [Last time we spoke](https://www.reddit.com/r/programming/comments/173viwj/meta_the_future_of_rprogramming/) I introduced the rules that we've been moderating by to accomplish that. Subjectively, quality on the subreddit while not perfect is much improved since then. Since it's still mainly just me moderating it's hard to tell what's objectively bad vs what just annoys me personally, and to do that I've been keeping an eye on a few forms of content to see how they perform (using mostly votes and comment quantity & health).\n\nBased on that the notable changes are:\n\n* \ud83d\udeab **Listicles**. \"7 cool python functions\", \"14 ways to get promoted\". These are usually spammy content farms. If you found 15 amazing open source projects that will blow my mind, post those projects instead.\n* \ud83d\udeab **Extreme beginner content** (\"how to write a for loop\"). This is difficult to identify objectively (how can you tell it from good articles like \"how does kafka work?\" or \"getting started with linear algebra for ML\"?) so there will be some back and forth on calibrating, but there has been a swath of very low quality [\"tutorials\"](https://www.reddit.com/r/programming/comments/1chogwb/first_program_of_java/) if you can even call them that, that I very much doubt anybody is actually learning anything from and they sit at 0 points. Since \"what is a variable?\" is probably not useful to anybody already reading r/programming this is a quick painless way to boost the average quality on the subreddit.\n* \u26a0\ufe0f **Career posts must be related to software engineering careers**. To be honest I'm personally not a fan of career posts on r/programming at all (but shout out to [cscareerquestions](https://www.reddit.com/r/cscareerquestions/)!) but during the last rules revision they were doing pretty well so I know there is an audience for it that I don't want to get in the way of. Since then there has been growth in this category [all across the quality spectrum](https://www.reddit.com/domain/eng-leadership.com/) (with an accompanying rise in product management methodology like \"agile vs waterfall\", also across the quality spectrum). Going forward these posts must be distinctly related to software engineering careers rather than just generic working. This isn't a huge problem yet but I predict that it will be as the percentage of career content is growing.\n\nIn all of these cases the category is more of a tell that the quality is probably low, so exceptions will be made where that's not the case. These are difficult categories to moderate by so I'll **probably make some mistakes** on the boundaries and that's okay, let me know and we'll figure it out.\n\nSome other categories that I'm **keeping an eye on** but not ruling on today are:\n\n* **Corporate blogs** simply describing their product in the guise of \"what is an authorisation framework?\" (I'm [looking at you Auth0](https://www.reddit.com/domain/a0.to/) and [others like it](https://www.reddit.com/r/programming/comments/1cgx739/what_is_ai_infrastructure_software/)). Pretty much anything with a rocket ship emoji in it. Companies use their blogs as marketing, branding, and recruiting tools and that's okay when it's \"writing a good article will make people think of us\" but it doesn't go here if it's just a literal advert. Usually they are titled in a way that I don't spot them until somebody reports it or mentions it in the comments.\n* **Generic AI content** that [isn't](https://www.reddit.com/r/programming/comments/1chll2o/ai_still_hasnt_figured_out_branding_yet_heres_why/) technical in content. \"Does Devin mean that programming is over?\", \"Will AI put farmers out of work?\", \"Is AI art?\". For a few weeks these were the titles of about 20 articles per day, some scoring high and some low. Fashions like this come and go but I'm keeping an eye on it.\n* **Newsletters**: There are a [few people](https://www.reddit.com/r/programming/comments/1cho9ye/big_tech_digest_15_introducing_meta_llama_3_at/) that post every edition of their newsletter to reddit, where that newsletter is really just aggregating content from elsewhere. It's clear that they are trying to grow a monetised audience using reddit, but that's okay if it's providing valuable curation or if the content is good and people like it. So we'll see.\n* **Career posts**. Personally I'd like r/programming to be a deeply technical place but as mentioned there's clearly an audience for career advice. That said, the posts that are scoring the highest in this category are mostly people upvoting to agree with a statement in the title, not something that anybody is learning from. (\"Don't make your engineers context-switch.\" \"Everybody should get private offices.\" \"Micromanaging sucks.\") The ones that one could actually learn from with an instructive lean mostly don't do well; people seem to not really be interested in how to have the best 1:1s with their managers or how you went from Junior to Senior in 18 hours (though [sometimes they are](https://www.reddit.com/domain/highgrowthengineer.com/)). That tells me that there's some subtlety to why these posts are scoring well and I'm keeping an eye on the category. What I don't want is for \"vote up if you want free snacks\" to push out the good stuff or to be a farm for the other 90% of content that's really just personal brand builders.\n\nI'm sure you're as annoyed as I am about these but they're fuzzy lines and difficult to come up with objective criteria around. As always **I'm looking for feedback** on these and if I'm missing any and any other points regarding the subreddit and moderation so let me know what you think.\n\n------\n\n## The rules!\n\nWith all of that, here is the current set of the rules with the above changes included so I can link to them all in one place.\n\n\u2705 means that it's currently allowed, \ud83d\udeab means that it's not currently allowed, \u26a0\ufe0f means that we leave it up if it is already popular but if we catch it young in its life we do try to remove it early.\n\n* \u2705 Actual programming content. They probably have actual code in them. Language or library writeups, papers, technology descriptions. How an allocator works. How my new fancy allocator I just wrote works. How our startup built our Frobnicator. For many years this was the only category of allowed content.\n* \u2705 Academic CS or programming papers\n* \u2705 Programming news. ChatGPT can write code. A big new CVE just dropped. Curl 8.01 released now with Coffee over IP support.\n* \u2705 Programmer career content. How to become a Staff engineer in 30 days. Habits of the best engineering managers. These must be related or specific to programming/software engineering careers in some way\n* \u2705 Articles/news interesting *to* programmers but not about programming. Work from home is bullshit. Return to office is bullshit. There's a Steam sale on programming games. Terry Davis has died. How to SCRUMM. App Store commissions are going up. How to hire a more diverse development team. Interviewing programmers is broken.\n* \u26a0\ufe0f General technology news. Google buys its last competitor. A self driving car hit a pedestrian. Twitter is collapsing. Oculus accidentally showed your grandmother a penis. Github sued when Copilot produces the complete works of Harry Potter in a code comment. Meta cancels work from home. Gnome dropped a feature I like. How to run Stable Diffusion to generate pictures of, uh, cats, yeah it's definitely just for cats. A bitcoin VR metaversed my AI and now my app store is mobile social local.\n* \ud83d\udeab Politics. The Pirate Party is winning in Sweden. Please vote for net neutrality. Big Tech is being sued in Europe for *gestures broadly*. Grace Hopper Conference is now 60% male.\n* \ud83d\udeab Gossip. Richard Stallman switches to Windows. Elon Musk farted. Linus Torvalds was a poopy-head on a mailing list. The People's Rust Foundation is arguing with the Rust Foundation For The People. Terraform has been forked into Terra and Form. Stack Overflow sucks now. Stack Overflow is good actually.\n* \u2705 Demos with code. I wrote a game, here it is on GitHub\n* \ud83d\udeab Demos without code. I wrote a game, come buy it! Please give me feedback on my startup (totally not an ad nosirree). I stayed up all night writing a commercial text editor, here's the pricing page. I made a DALL-E image generator. I made the fifteenth animation of A* this week, here's a GIF.\n* \ud83d\udeab AskReddit type forum questions. What's your favourite programming language? Tabs or spaces? Does anyone else hate it when.\n* \ud83d\udeab Support questions. How do I write a web crawler? How do I get into programming? Where's my missing semicolon? Please do this obvious homework problem for me. Personally I feel very strongly about not allowing these because they'd quickly drown out all of the actual content I come to see, and there are already much more effective places to get them answered anyway. In real life the quality of the ones that we see is also universally very low.\n* \ud83d\udeab Surveys and \ud83d\udeab Job postings and anything else that is looking to extract value from a place a lot of programmers hang out without contributing anything itself.\n* \ud83d\udeab Meta posts. DAE think r/programming sucks? Why did you remove my post? Why did you ban this user that is totes not me I swear I'm just asking questions. Except this meta post. This one is okay because I'm a tyrant that the rules don't apply to (I assume you are saying about me to yourself right now).\n* \ud83d\udeab Images, memes, anything low-effort or low-content. Thankfully we very rarely see any of this so there's not much to remove but like support questions once you have a few of these they tend to totally take over because it's easier to make a meme than to write a paper and also easier to vote on a meme than to read a paper.\n* \u26a0\ufe0f Posts that we'd normally allow but that are obviously, unquestioningly super low quality like blogspam copy-pasted onto a site with a bazillion ads. It has to be pretty bad before we remove it and even then sometimes these are the first post to get traction about a news event so we leave them up if they're the best discussion going on about the news event. There's a lot of grey area here with CVE announcements in particular: there are a lot of spammy security \"blogs\" that syndicate stories like this. Pretty much all listicles are disallowed under this rule. 7 cool python functions. 14 ways to get promoted. If you found 15 amazing open source projects that will blow my mind, post those projects instead.\n* \u26a0\ufe0f Extreme beginner content. What is a variable. What is a `for` loop. Making an HTPT request using curl. Like listicles this is disallowed because of the quality typical to them, but high quality tutorials are still allowed and actively encouraged.\n* \u26a0\ufe0f Posts that are duplicates of other posts or the same news event. We leave up either the first one or the healthiest discussion.\n* \u26a0\ufe0f Posts where the title editorialises too heavily or especially is a lie or conspiracy theory.\n* Comments are only very loosely moderated and it's mostly \ud83d\udeab Bots of any kind (Beep boop you misspelled misspelled!) and \ud83d\udeab Incivility (You idiot, everybody knows that my favourite toy is better than your favourite toy.)\nHowever the number of obvious GPT comment bots is rising and will quickly become untenable for the number of active moderators we have.",
        "num_comments": 134,
        "comments": [
            "Graphite.dev \"articles\" can get in the bin too please, all also under the banner of advertising.\n\n\nAt least most of Auth0's articles are mostly applicable to all OAuth implementations.",
            "I still can't differentiate between this sub and r/coding due to the similar (spammy-ish) posts on both subs. These new rules hopefully can increase the quality of this sub!",
            "Thanks for being transparent about your decision-making, I think these are good changes",
            "I think there should be a rule that posts about articles/papers/etc. older than a few years should indicate the year in the title.",
            "\"To post is human, to lurk divine.\"",
            "These all seem reasonable.  I'd suggest shunting career posts entirely over to a subreddit like /r/cscareerquestions or something similar.",
            "> The People's Rust Foundation is arguing with the Rust Foundation For The People\n\nExcellent",
            "i just want to stop seeing consistent \"how x scaled to y requests with z\" articles",
            "Re: low quality content. r/hardware has a rule against reposts, although they don't seem to enforce it much. If outlet A is covering something originally reported by outlet B, without adding anything original, link to B or not at all. This helps with clearly defining repost blogs and stemming the tide of aggregators.\n\nThe downside here is that you need to rely on user reporting to moderate it.",
            "These are great rules. And thank you for being so on top of modding this subreddit :)"
        ]
    },
    "A virtual DOM in 200 lines of JavaScript": {
        "title": "A virtual DOM in 200 lines of JavaScript",
        "score": 131,
        "url": "https://lazamar.github.io/virtual-dom/",
        "content": "",
        "num_comments": 22,
        "comments": [
            "Ignore the sniping comments from people who haven't bothered to read the article, it's actually really interesting.",
            "Nicely presented.",
            "That was interesting and instructive, thanks.",
            "Really interesting read and very well written!",
            "There are [frameworks that don't use virtual DOMs](https://svelte.dev/blog/virtual-dom-is-pure-overhead).",
            "This is another library for the convenience of efficient development, but does not improve the performance of dom updates on lightweight applications for weak devices with slow internet, why now web developers do not care about performance but only about money?",
            "Another day, another JS framework.",
            "Did you not read the article?\n\n\"The main goal is to illustrate the fundamental technique behind tools like React.\"\n\nIt's the third sentence.",
            "Because \"worse performance\" means literally nothing in the vacuum. As long as users are still using the result, the trade-off between performance and development efficiency was worth it.\n\nE: you guys do realise that you are disagreeing with facts? What matters is ROI, not mythical \"performance\", especially placed in a vacuum.",
            "This isn't a new flavor of the week. \n\nIt's a description of the process of how they made a super bare-bones virtual DOM.\n\nAnd very well written and explained, I might add."
        ]
    },
    "Huawei unveils its own programming language the \"Cangjie\" ": {
        "title": "Huawei unveils its own programming language the \"Cangjie\" ",
        "score": 644,
        "url": "https://gsmchina.com/huawei-unveils-its-own-programming-language-the-cangjie-8687/",
        "content": "",
        "num_comments": 218,
        "comments": [
            "A lot of the English articles on this seem badly machine translated. From what I can gather:\n\n- ~~This language is supposed to be intuitive for Chinese speakers, and program composition corresponds to composition in the Chinese writing system in some sense. This may be what is meant by 'natural language' and 'user defined dsl's'?~~ Edit: syntax actually seems pretty Kotlin-Like https://www.reddit.com/r/programming/s/BxivQo0Sqq\n- The language runtime is supposed to be low-overhead, rust-like. But there are bounds/cast checks, a GC, and green threads\n- With the green threads there is a library of concurrent data structures\n- There is an 'actor dsl' that is somehow related to coding/interacting with ai models",
            "has anyone found any code examples?",
            "I am a beta tester so I can correct one thing in the comments - the code is still written in ASCII, English style. But its major audience is Chinese (at least now).\n\nThe language is heavily influenced by Swift, Kotlin and a little bit Rust (proc macro) and Python, as currently most of the work is towards mobile apps (specifically UI) and AI. It means to be a general purpose application level language, but I personally didn't notice any major breakthrough in other fields like the backend (except it got green thread like goroutine).",
            "Job postings: looking for experienced senior Changjie developer with 4+ years of experience.",
            "From what I can gather it seems this isn\u2019t really meant for an international audience, meant to join [the list of non-English based programming languages.](https://en.m.wikipedia.org/wiki/Non-English-based_programming_languages) If they manage to develop an ecosystem who knows how successful it will be, or not.",
            "> Supported operating devices: Only HUAWEI Mate60 Pro ALN-AL00 model is supported. \n\nBoo",
            "Is it the same story as their \"own OS\" which eventually appeared to be an Android stripped from most of the identifying parts?",
            "Brainiac move: naming your programming language with the same name as an [input method](https://en.wikipedia.org/wiki/Cangjie_input_method).",
            "[This article](https://news.mit.edu/2020/brain-reading-computer-code-1215)\u00a0summarizes results of brain scans done on people who were working on code while being scanned. The conclusion is that \"interpreting code activates a general-purpose brain network, but not language-processing centers.\"\n\nIt seems as though the lazy thinking that \"computer code is just like language\" is probably incorrect.",
            "Very similar to Kotlin\n\nhttps://developer.huawei.com/consumer/cn/doc/openharmony-cangjie/cj-wp-abstract"
        ]
    },
    "Let's write a video game from scratch like it's 1987": {
        "title": "Let's write a video game from scratch like it's 1987",
        "score": 19,
        "url": "https://gaultier.github.io/blog/write_a_video_game_from_scratch_like_1987.html",
        "content": "",
        "num_comments": 1,
        "comments": [
            "Wow. Would like to reproduce in c,cpp, and rust. (And D!)."
        ]
    },
    "Why Swift's type checker is so slow": {
        "title": "Why Swift's type checker is so slow",
        "score": 15,
        "url": "https://danielchasehooper.com/posts/why-swift-is-slow/",
        "content": "",
        "num_comments": 2,
        "comments": [
            "Repost?\n\nhttps://www.reddit.com/r/programming/s/DHZFidGTL7",
            "This guy's face haunts my dreams, it's diminsions are only rivaled by its intensity.\n\nPlease stop reposting this man, my doctorr has affirmed that five hours of sleep a night is not enough"
        ]
    }
}