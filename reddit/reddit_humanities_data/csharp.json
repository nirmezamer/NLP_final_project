{
    "Come discuss your side projects! [June 2024]": {
        "title": "Come discuss your side projects! [June 2024]",
        "score": 12,
        "url": "https://www.reddit.com/r/csharp/comments/1d5ec4e/come_discuss_your_side_projects_june_2024/",
        "content": "Hello everyone! \n\nThis is the monthly thread for sharing and discussing side-projects created by /r/csharp's community. \n\nFeel free to create standalone threads for your side-projects if you so desire. This thread's goal is simply to spark discussion within our community that otherwise would not exist. \n\n# Please do check out newer posts and comment on others' projects.\n\n***\n\n[Previous threads here.](/r/csharp/search?q=title%3A%28\"Come+discuss+your+side+projects!\"+OR+\"Come+share+your+side+projects!\"%29+author%3A%28ItzWarty+OR+AutoModerator%29&restrict_sr=on&sort=new&t=all)",
        "num_comments": 29,
        "comments": [
            "I noticed a few years ago that FileSystemWatcher does not trigger events when running inside a container with an external volume mounted. I checked it again with .net 8.0 and it is still not raising events. So I built my own nuget package. It's very early, but seems to work great for my needs.\n\n[ContainerFileSystemWatcher](https://github.com/EldieTurner/ContainerFileSystemWatcher)\n\nalso working on using it to get IOptionsMonitor to work within containers.",
            "I've been writing a little social media clone project as an ASP.NET web API and learning a TON. I'm probably also doing a ton wrong, but I'm having a lot of fun and gaining a lot of skills by just figuring tons of stuff out.",
            "I shared it a couple of weeks ago in its own thread, but I wanted to teach myself about incremental source generators. I\u2019ve worked a bunch of enterprise jobs where services would be registered with the container using some gnarly reflection code.\n\nI wrote Saucy to solve both problems.\n\nhttps://github.com/aspeckt-112/SaucyRegistrations\n\nThe advantage it has over reflection is that the registration code is readable, references to classes / interfaces are shown by the IDE, and there\u2019s no runtime cost for your end user. Because it\u2019s an incremental generator, the IDE runs it as the codebase changes, meaning the impact on your compile time is minimal.\n\nI don\u2019t care if people don\u2019t really use it, or prefer to register manually. But I saw basically the same code, at multiple jobs, and I wanted to learn more about Roslyn in general. It was worth it!",
            "Kusto-Loco [https://github.com/NeilMacMullen/kusto-loco](https://github.com/NeilMacMullen/kusto-loco) is a set of libraries and applications based around the idea of supporting 'local'  usage of KQL.   You might be familiar with KQL as the query language used by Application Insights or Azure Data Explorer.  Kusto-loco allows you to embed a KQL engine in your own application and run queries against in-memory data rather than having to import it into an ADX cluster.\n\nThere are a number of sample applications showing how it can be hosted in a CLI, WPF or Blazor app as well a light-weight ready-made data explorer if you just want to play around with querying CSV files.\n\nI wrote an introductory article which gives a fuller introduction:  [https://neilmacmullen.github.io/kusto/2024/05/04/kustoloco.html](https://neilmacmullen.github.io/kusto/2024/05/04/kustoloco.html)  \n\nAlso, given that I quite often see posts here from people asking how they can get started in OSS development it's worth mentioning that I would be very happy to to work with contributors; there's a whole range of improvements to  be made ranging in difficulty from \"easy\" (improve documentation) to \"advanced\" (extend the underlying engine).",
            "(Student) Developing Web API for a project with ASP. NET Core  . The project in short is \"Planning our day and completing it to gain streaks\". New to C# and .NET environment (even programming) ...Loving it Hoping to learn more .",
            "Working on two major (at least for me they are major) projects right now.\n\n**Steam Superheater** https://github.com/fgsfds/Steam-Superheater is an app that can download and install patches and fixes for Steam games. I already posted about it on this sub a while ago.\n\n**BuildLauncher** https://github.com/fgsfds/BuildLauncher is a universal launcher and user addons downloader for Build Engine games (Duke Nukem 3D, Blood, Shadow Warrior etc).\n\nBoth projects use ASP.NET for backend and API, Entity Framework for Postgres database, and Avalonia for Desktop UI.",
            "Recently, Spotify's song recommendation algorithm has started working poorly, so I switched to YouTube Music. As a side project, I'm working on a project that will transfer my Spotify playlists to YouTube Music.",
            "Hi, i'm working on a price alert tracker to follow prices in the stock market. The idea is to do an incremental development adding different things with the end goal of learning more in depth different technologies",
            "I've developed a dotnet messaging library to simplify creating reliable event driven architectures.\n\n[check it out](https://github.com/Timmoth/AsyncMonolith) if you're interested or want to collaborate!",
            "ArduinoCloudConnector a library for connecting to the Arduino IoT cloud. This is my first .NET library, and I'd love to get some feedback! Finding some people for contribution or working together on other projects would be great!\n\nCurrently supporting:\n\n* Fetch and display properties of a Thing from the Arduino IoT Cloud.\n* Handle authentication and access token retrieval automatically.\n* Error handling and retry mechanism for robust API communication.\n\nI'm also looking for contributors or people interested in collaborating on other projects. Check it out on GitHub: [ArduinoCloudConnector](https://github.com/soerenlemke/ArduinoCloudConnector)"
        ]
    },
    "C# Job Fair! [June 2024]": {
        "title": "C# Job Fair! [June 2024]",
        "score": 9,
        "url": "https://www.reddit.com/r/csharp/comments/1d5f9t1/c_job_fair_june_2024/",
        "content": "Hello everyone! \n\nThis is a monthly thread for posting jobs, internships, freelancing, or your own qualifications looking for a job! Basically it's a \"Hiring\" and \"For Hire\" thread.\n\nIf you're looking for other hiring resources, check out /r/forhire and the information available on their sidebar.\n\n * **Rule 1 is not enforced in this thread.**\n\n * **Do not any post personally identifying information; don't accidentally dox yourself!**\n\n * **Under no circumstances are there to be solicitations for anything that might fall under Rule 2: no malicious software, piracy-related, or generally harmful development.**",
        "num_comments": 2,
        "comments": [
            "Enumerix is looking for a lead software engineer to develop a suite of tools to interface the hardware and computational imaging tools. \n\nApplicants must be proficient in C#. Pay range between 170k-210k.  \n\nSerial entrepreneur CEO, taken companies exit thru acquisition and IPO (value >$1B).\n\nHere\u2019s the job listing: \nhttps://enumerix.breezy.hr/p/afcfa49305dc-lead-software-engineer-staff-sr-staff-principal\n\nHere\u2019s the preprint for the UltraPCR technology they developed: \nhttps://www.biorxiv.org/content/10.1101/2023.10.09.561546v1",
            "Panoptyc is hiring a full-stack developer. [https://www.linkedin.com/jobs/view/3938837807/?eBP=NON\\_CHARGEABLE\\_CHANNEL&refId=H9NxPQ%2FfGUTypHo0RjHhlA%3D%3D&trackingId=eSFP0A1HiSO8kZJUyk1JvA%3D%3D&trk=flagship3\\_search\\_srp\\_jobsfull-stack](https://www.linkedin.com/jobs/view/3938837807/?eBP=NON_CHARGEABLE_CHANNEL&refId=H9NxPQ%2FfGUTypHo0RjHhlA%3D%3D&trackingId=eSFP0A1HiSO8kZJUyk1JvA%3D%3D&trk=flagship3_search_srp_jobsfull-stack)\n\nPlease take this assessment: [https://coderbyte.com/sl-candidate?promo=panoptyc-4xvg0:c-sharp-developer-5rl5j2qyya&invb=user76zecsmu8](https://coderbyte.com/sl-candidate?promo=panoptyc-4xvg0:c-sharp-developer-5rl5j2qyya&invb=user76zecsmu8)"
        ]
    },
    "Help please I can't fix this": {
        "title": "Help please I can't fix this",
        "score": 0,
        "url": "https://www.reddit.com/r/csharp/comments/1dluksq/help_please_i_cant_fix_this/",
        "content": "https://preview.redd.it/bje7w3zh948d1.png?width=1366&format=png&auto=webp&s=7ad9b7baecf15f271cbb454df65a2a7f176bf277\n\nhttps://preview.redd.it/ne7n2ais948d1.png?width=1366&format=png&auto=webp&s=65e191f5b99bc215ab895a8865ee061c8bffa82d\n\nPlease help me I can't fix it and I don't understand why there is a problem in the first place",
        "num_comments": 11,
        "comments": [
            "You have a block separator statement on line 73 that scopes the \"gru\" variable into a different scope block. Either elevate that variable declaration to a higher scope or put your block terminator on a lower line that is more accurate.",
            "There's a closing bracket on line 73, and as variables are scoped your 'gru' variable on line 72 is not available anymore after that bracket scope is closed.",
            "This variable in different block.",
            "I can't see the all of the code but I assume that  \n  \nstring gru = Console.Readline();  \n\n\nis inside of something? You should introduce string gru at the beginning and use it.",
            "Easier if you show all of the code.\n\nIt looks like gru is declared at the bottom of a block which ends with the \"}\" on line 73. Variables declared in a block are not accessible outside of the block.",
            "https://i.imgur.com/t3CQuVf.png",
            "Is there even an opening bracket for your class? I would suggest you not copy and paste code (even your own) to avoid these types of errors.",
            "Would it be bad practice to put the word \"public\" before declaring the string?",
            "The compiler is telling you exactly whats wrong.. Its out of scope due to the closing brace. You defined the var in the context of the previous block.",
            "Delete line 73"
        ]
    },
    "Struggling with loops?": {
        "title": "Struggling with loops?",
        "score": 0,
        "url": "https://www.reddit.com/r/csharp/comments/1dlujk4/struggling_with_loops/",
        "content": "Trying to learn C# (on Sololearn) and loops of any kind just melt my brain.\n\n  \nMy brain freezes and I have no clue what to do even if I've just done that exercise a lesson or two ago.\n\n  \nAre loops supposed to be a bit more difficult to understand/read for beginners or am I just slow?\n\n  \nI plan on finishing this beginner course this weekend and then start Tim Corey C# Mastercourse and then the C# Player's Guide. Hopefully it'll stick more.\n\n  \nHow have you approached learning C#?",
        "num_comments": 16,
        "comments": [
            "If you are struggling with loops it's not a C# thing, it's a programming thing. I remember having some difficulty with it when I was learning C but it's so natural to me now that I can't even tell exactly what I struggled with.\n\nBut I would say don't bother progressing further down the courses until you get a strong grasp on loops as it's one of the most fundamental building blocks of any programming language really.",
            "As with any subject, you\u2019ll need to find your own way to form an intuitive way of thinking about a concept.\n\nYou\u2019ve done the same already for all the other concepts up to this point.\n\nMy guess is the idea of loops itself aren\u2019t what are causing your problem. \n\nLoops are just a way to repeat something right? That part is pretty straightforward. What is complex is the action being repeated, tracking the iteration (can be thought of like a snapshot of the loop at a given point), and reacting to the state at a given iteration in some cases.\n\nThere are always ways to break down a complex topic, and it\u2019s more learning how to learn than actually learning programming.",
            "There are a few basic building blocks of code. This isn't just a c# thing, it's pretty broad across languages. They are often called \"sequence, selection, and iteration\". google it.\n\nThe first is that statements happen in top-to-bottom order. e.g. if you have\n\n```\nvar x = 30;\nvar y = x + 12;\nConsole.WriteLine(y);\n```\n\nThen the value `42` is what we see, because these lines are executed one at a time in top-to-tottom order.\n\nThe second is selection, `if` statements and related constructs. i.e. do something _conditionally_ instead of doing always.\n\n```\nif (y > 100)\n{\n  Console.WriteLine(\"Large number detected\");\n}\n```\n\nThe third is _iteration_  and that means looping. Repetition. It's there to do the same thing multiple times over.\n\ne.g.\n```\nConsole.WriteLine(\"The numbers are\");\nfor (var i = 1; i <= 100; i++)\n{\n  Console.WriteLine(i);\n}\n```\n\nSo this outputs 100 lines of numbers.\n\nCode just combines these three kinds of steps.\n\nAfter that, I would add \"chunking\" - many constructs such as methods, classes, etc. are there to \"group\" steps into one larger operation.  And then parametrise it so that different values can be fed in.",
            "You are just a bit slow IMO (no insult intended). Didn't experience much issue with them even at the beginning. I agree that progressing without feeling comfortable with core programming concepts like loops is premature. You will just start stacking half-grasped material on top of half-grasped material and will feel lost all the time. Doing more practical exercises should help.",
            "What is it about loops that you are struggling with?",
            "Round and round it goes, where it stops .. is a break condition.\u00a0",
            "Maybe try finding different tutorials, exercises or videos on loops. Perhaps you need to have it explained to you a different way. \n\nTry adding more console outputs to keep track if what's happening in the loop. Or playing it through on paper. Then try to think of a loop and what you want to happen and see if you can put it into code. And then change the scenario and make that happen, too.\n\n\nThey're a basic building block of programming and until you understand what's going on there, there's little sense in moving on to other topics.",
            "For me its recursion and I feel like its an advanced form of loop calls. Only way to get clarity is PRACTICE PRACTICE PRACTICE",
            "So funny when I asked the same questions all I got are insults saying I should study instead of asking stupid questions in this subreddit.\n\n I think the moderators should make it clear what are the rules and policies regarding asking questions.\n\nEdit: Im definitely still hurt with what happen considering I just want learn from you guys knowing you got experience.",
            "Thank you. \n\nWhat you said makes sense. Not understanding the way something works and just trying to guess it is frustrating, especially because this is beginner level stuff.\n\nI will focus more on loops before I go on to learning other things."
        ]
    },
    "Why are all .NET Blazor UI components so ugly? There are so many beautiful for React and Vue, but not for .NET Blazor": {
        "title": "Why are all .NET Blazor UI components so ugly? There are so many beautiful for React and Vue, but not for .NET Blazor",
        "score": 34,
        "url": "https://www.reddit.com/r/csharp/comments/1dl97ws/why_are_all_net_blazor_ui_components_so_ugly/",
        "content": "",
        "num_comments": 95,
        "comments": [
            ".net is mostly used by backend folks, and we can't really tell.",
            "Whats wrong with MudBlazor and Blazorise?",
            "I make all my own components. I guess that's why they're all ugly? lol",
            "Probably unpopular to say here but... front end and back end both require two entirely different mind sets and people. The back end people Ive met throughout many companies and otherwise have barely ever had a good eye for design nor do they truly care about it.\n\nFront end people often are more artistically inclined than back end people and usually put more empathy into their work.\n\nOne could argue that with a proper design made by a UX and UI designer would alleviate this problem. However, in my experience that's not the case. The back end first developers who worked on our front ends usually said \"this is good enough\" when the core functionality works as designed. The front end first developers went the extra mile and added details that cant be found through designs.\n\nBlazor mostly attracts back end first devs while React and Vue attract front end first devs. Which is noticeable in libraries like Mudblazor and alike. Thats not to say the same doesnt happen in React and/or Vue, my anecdotal examples were all in React for example. But I see the same happen currently within my current company where we use Blazor.",
            "Fluent UI looks nice. \n\nhttps://www.fluentui-blazor.net/",
            "Because Microsoft doesn't use Blazor",
            "How about building your own with my framework Ignis (blazor port of headless UI) and Tailwind CSS?\nhttps://ignis.dvolper.dev",
            "Check https://mudblazor.com/\nIt has a lot of good components. You can change the CSS style as you want.",
            "I know this post is about blazor and I\u2019m a c# developer. But for now the best choice for me and that I use it c# as backend and react a fronted (NextJs), best of both world. And this for the same reason as the op claims: there\u2019s not enough component libraries for blazor and I don\u2019t want to spend too much time creating my own components and ALSO I don\u2019t want every single of my projects to look like material Ui through mudblazor ou materialise (sick of it)",
            "Idk about you, but you can make your own components, use CSS to make it look good, unless you only depend on others work, well yeah thats a problem"
        ]
    }
}