{
    "New? READ ME FIRST!": {
        "title": "New? READ ME FIRST!",
        "score": 827,
        "url": "https://www.reddit.com/r/learnprogramming/comments/61oly8/new_read_me_first/",
        "content": "# Welcome to /r/learnprogramming!\n\n## Quick start:\n\n1. New to programming? Not sure how to start learning? See [FAQ - Getting started][faq-start].\n2. Have a question? Our [FAQ][faq] covers many common questions; check that first. Also try searching old posts, either [via google][google] or via reddit's search.\n3. Your question isn't answered in the FAQ? Please read the following:\n\n## Getting debugging help\n\nIf your question is about code, make sure it's **specific** and **provides all information up-front**. Here's a checklist of what to include:\n\n1. A [**concise but descriptive title**][debugging-title].\n2. A [**good description**][debugging-description] of the problem.\n4.  A [**minimal**, **easily runnable**][debugging-posting], and [**well-formatted**][debugging-formatting] program that demonstrates your problem.\n5. The output you expected and what you got instead. If you got an error, include the **full** error message.\n\nDo your best to solve your problem before posting. The quality of the answers will be proportional to the amount of effort you put into your post. Note that title-only posts are automatically removed.\n\nAlso see [our full posting guidelines][debugging] and the [subreddit rules][rules]. After you post a question, **DO NOT** delete it!\n\n## Asking conceptual questions\n\nAsking conceptual questions is ok, but please check [our FAQ][faq] and search older posts first.\n\nIf you plan on asking a question similar to one in the FAQ, explain what exactly the FAQ didn't address and clarify what you're looking for instead. See our full guidelines on [asking conceptual questions][conceptual] for more details.\n\n## Subreddit rules\n\nPlease read [our rules][rules] and [other policies][policies] before posting. If you see somebody breaking a rule, report it! Reports and PMs to the mod team are the quickest ways to bring issues to our attention.\n\n\n  [faq-start]: https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_getting_started\n  [faq]: https://www.reddit.com/r/learnprogramming/wiki/faq\n  [google]: https://www.google.com/#q=site:reddit.com%2Fr%2Flearnprogramming\n  [wiki]: https://www.reddit.com/r/learnprogramming/wiki/index\n  [debugging]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_getting_debugging_help\n  [debugging-title]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_writing_a_good_title\n  [debugging-description]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_writing_a_good_description_of_the_problem\n  [debugging-posting]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_posting_code\n  [debugging-formatting]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_formatting_code\n  [conceptual]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_asking_conceptual_questions\n  [rules]: https://www.reddit.com/r/learnprogramming/about/rules\n  [policies]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_rules",
        "num_comments": 9,
        "comments": [
            "[deleted]",
            "How about if there's input or output, give an example of what you think should be happening VS what is happening.\n\nI suppose that can be part of the error message if applicable. ",
            "[deleted]",
            "I think the main reason I haven't been trying to learn to code is because it seems daunting. How do I get past this?",
            "Can I make good money self educated? ",
            "Shouldn't that always be included?",
            "Good idea; edited.",
            "Unfortunately, post templates aren't a thing on reddit AFAIK :(",
            "It should, but it never is. ",
            "[deleted]"
        ]
    },
    "What have you been working on recently? [June 22, 2024]": {
        "title": "What have you been working on recently? [June 22, 2024]",
        "score": 1,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1dlmwz9/what_have_you_been_working_on_recently_june_22/",
        "content": "What have you been working on recently? Feel free to share updates on projects you're working on, brag about any major milestones you've hit, grouse about a challenge you've ran into recently... Any sort of \"progress report\" is fair game!\n\nA few requests:\n\n1. If possible, include a link to your source code when sharing a project update. That way, others can learn from your work!\n\n2. If you've shared something, try commenting on at least one other update -- ask a question, give feedback, compliment something cool... We encourage discussion!\n\n3. If you don't consider yourself to be a beginner, include about how many years of experience you have.\n\nThis thread will remained stickied over the weekend. [Link to past threads here](https://www.reddit.com/r/learnprogramming/search?q=%22What+have+you+been+working+on+recently%3F%22&sort=new&restrict_sr=on).",
        "num_comments": 0,
        "comments": []
    },
    "Im dumb as shit": {
        "title": "Im dumb as shit",
        "score": 150,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1dlb1x5/im_dumb_as_shit/",
        "content": "Hello I started to learn programming because i wanted a better career and life, I finished the free code camp course for html and css also the w3schools one as well and a youtube tutorial to build a youtube clone with just html and css, but now I started the free code camp course for javascript and I feel like a fucking idiot, i dont know what to do, just to let you guys know I barley graduate highschool so yeah I dont know if this is for me, any of you guys with a similar background to me have this problem and were able to become a succesful software engineer? ",
        "num_comments": 67,
        "comments": [
            "Being dumb is fine, but staying dumb is a problem.",
            "JS is an actual programming language. It deals with logic and handles totally differently than CSS or HTML. But the 3 need each other to work correctly. Think of it like this. HTML is the skeleton, CSS is the clothes, and js is the muscle structure that makes it all work. \n\nYou're not \"dumb as shit\" you're just dealing with something totally new. You will likely have to change the way you think to grasp the concepts it will take to use JavaScript.  You need to understand the DOM , and then learn the basics of JS and this will give you all you need to progress. You don't need to be a genius or learn it all. Just the fundamentals. Loops, variables,  constants, functions, objects, (not necessarily OOP) simple data structures, promises, and a few I probably left out. \n\nProgramming is not for everyone,  man. I started at 14 because my mom's BF gifted me an old ass computer with some programming tools. I never stopped, but fell in love with how it all works. It takes a real desire to learn to understand this stuff.  All you really need is the desire, and the willingness to put in the work.",
            "The two most important ideas I can share with you are:\n\n1. Failure isn't just a risk when learning, it's a crucial part of the process. Embrace it and you'll move so much faster.\n\n2. The best way to be incapable of learning something is to convince yourself that you're incapable of learning it.\n\nIf any of that vibes, my source for #1 is Andrew Huberman and for #2 is Carol Dweck (Growth Mindsets).\n\nArguably the most important trait in any developer is perseverance. You might well get further and decide this isn't something you want to spend your time on, but if you can start cracking the fundamentals of javascript then the real fun begins, so stick with it a bit longer if you can. Best of luck.",
            "Cs50. It\u2019s basically going to break you, but a lot faster than JS courses will. You don\u2019t need to continue to code in C, it will just fuck you up and down until you\u2019re comfortable getting fucked.\n\nYou\u2019ll also understand some basics which are imperative such as what arrays actually are and how memory works.",
            "Short of a genuine disability, I believe the vast majority of people are fully capable of being a successful software engineer.\n\nSomething that often holds people who think they are \"dumb\" back is that they overestimate their struggle and underestimate \"smart\" people's struggles. I got a 34 on my ACT, 4.0 GPA in high school, etc. And despite being naturally smart, programming was hard. No matter who you are, learning anything new is difficult. Programming is especially difficult because it's such a unique skill, so a lot of your previous classes won't really help you to wrap your mind around the initial concepts.\n\nAs someone who saw themselves as smart, I felt confident that I could learn to program if I just put in the work. Someone who views themselves as dumb might give into their struggle, thinking they are just not cut out for it. The issue is mindset, not ability.\n\nEveryone struggles. It is hard at first, but it gets much easier once you start to get a feel for the programming world. It might take you a bit longer to learn than someone who is \"gifted\", but you can make up that time with passion and work ethic.\n\nDon't buy into the programming culture you see on Reddit. People make it seem more scary than it is. I think often want to gatekeep programming to help feed their ego. It's not nearly as crazy as some people want to pretend it is. It's a skill, just keep at it.\n\nBest of luck!",
            "I felt the same. It took awhile to figure out that all programming languages have fundamentals that you can generally apply to all of them such as syntax and semantics, variable and data types, control structures, functions and procedures, data structures, object-oriented programming, etc. \n\nJavaScript is interesting because it interacts with the DOM, which is basically the webpage that has html and css. JavaScript makes those things interact with the user if you want it to. \n\nI highly recommend [Runestone Academy\u2019s Fundamentals of Web Programming](https://runestone.academy/ns/books/published/webfundamentals/index.html). It explains the big picture concepts and gives you exercises to complete. It\u2019s like an interactive textbook. \n\nOnce you learn one language, it makes the others easier. You\u2019re just going through the same pain many of us felt at first. You\u2019re smart enough, just push through. That\u2019s part of the learning process. Failing is a part of learning, but so is overcoming. You got this.",
            "Have you considered Scratch as a starting point?  \nJust try a few tutorials out and get things moving on a screen...then move onto a progamming language that suits your design intentions. \n\nAnd about the whole idiot thing....just lean into it, works for me! Most folk are usually too shy to be the idiot in the room...but if you're comfortable in that zone it can be useful to ask the obvious questions. Most folk are too afraid to look like an idiot for a bit and would rather put up with something that doesn't work!\n\nNah...just be you. Take a problem, break it down into chunks until you can chew through.\n\nGLHF!",
            "this should help u:[Making Badass Developers - Kathy Sierra (Serious Pony) keynote (youtube.com)](https://www.youtube.com/watch?v=FKTxC9pl-WM)",
            "I've been thinking of starting to do my own tutorials for people new to programming. I think, if you learn a new language, the key here is to be in a group of people who are at the same stage as you, so you need to be part of a class or part of a tutorials on YouTube watchers, who are at the same stage and who aren't ashamed to ask questions.\n\nIf you keep comparing yourself with programmers who already know the language, it is hard to find motivation to continue. You have to realise it takes time to learn the language until you become \"natural\" and \"effortless\". It is similar to learning a foreign language. For example, learning French. You can't expect to learn French a few weeks and it to not feel hard anymore. You need to expect to continue to feel awkward for at least a few years, and keep making an effort, and find people at the same stage you can talk to.",
            "We all been here, no one born as programmer. Only way is practice and practice. Year, two, three, etc"
        ]
    },
    "I\u2019m no good at math, is there hope for me and programming?": {
        "title": "I\u2019m no good at math, is there hope for me and programming?",
        "score": 64,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1dlh04p/im_no_good_at_math_is_there_hope_for_me_and/",
        "content": "So I\u2019ve been trying to learn programming for a few years now, and I\u2019m hoping to go back to school for it at 30. I\u2019ve never been good at math, like my brain doesn\u2019t process numbers right I feel, and I fear the amount of math programming might need. Is there hope for me with programming? Does anyone know a good place to start? I\u2019d appreciate it so much y\u2019all. \ud83d\udc96",
        "num_comments": 115,
        "comments": [
            "Rather than math, I think being able to track and organize large groups of items in your head is more important. Imagine you have a ton of items in a warehouse, you need to change labels on those items by groups, and sometimes items get misplaced or groups of items get mislabeled or for some reason the count is wrong. Someone who is able to mentally track everything and organize and re-arrange items will do well in programming imo.",
            "The underlying issue is logic and problem solving. If you don't enjoy those at least, it's probably better to find something else. Numbers are not the issue.",
            "You don't need to be good at math to learn programming. You would need some math if you delve into the more theoretical stuff, or decide to pursue a computer science degree, but for day to day programming you don't need anything more advanced than elementary level math.",
            "If you are consistent you will learn and go further than someone who is talented but lazy, so yes imo",
            "Computer Science degree is in the College of Engineering and requires quite a bit of math.  I hate math, but I survived it in college.\n\nThere are also school of Business Computer Science degrees, sometimes called Information Systems or similar that don't require as much math (at least at the university I attended).\n\nI like to say that I've always hated math and now I force computers to do it for me.",
            "You don't have to be good at math to understand math. Perhaps you've just had bad teachers. One day you'll have a moment where everything just clicks and math makes sense. Just how you challenge yourself to program, you can challenge yourself to do math. \n\nDon't treat numbers as demotivating or feel it's an impossible task. The language seems scary but it's just like learning any other vocab words. Math, of all things, is fairly concrete in how it exists on a basic level. More theoretical, obsure math stuff isn't really going to be present in CS unless you're doing like astrophysics or something.",
            "Sometimes people don\u2019t do well in math classes for reasons other than being bad at math - problems at home, problems with authority, mental health, apathy, etc.  But if you don\u2019t do well in math classes because it\u2019s too hard, then you\u2019re probably gonna experience a similar thing in coding.\n\nLet me ask you this - WHY do you want to learn programming?",
            "You don't need math. If you have a computer, start today. Create a web site or mobile app with a database.",
            "I was great at math and sucked at programming. My friend was pretty bad at math but a beast at programming. Do what you want with this.",
            "Maths is not needed."
        ]
    },
    "Huge thanks to this community!": {
        "title": "Huge thanks to this community!",
        "score": 4,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1dludts/huge_thanks_to_this_community/",
        "content": "I finally landed a job as a Junior Software Engineer. Took me 1.5 years of learning and 6 months of looking for a job(6 months are included in my learning time). Managed to land an internship and got hired after. \n\nI never paid for any course, nor did I went to the bootcamp. I started at freecodecamp with html and css, and then followed this community's advice. Continued on The Odin Project (tho, never finished it). \n\nYou guys are amazing and I wouldn't be able to achieve that without all of you! I'm very grateful to every single one of you!\n\nEveryone who is struggling with finding a job - you will manage, just don't give up (as long as you are confident that you enjoy coding and building things with code). ",
        "num_comments": 1,
        "comments": [
            "Congratulations! This is awesome news, always welcome a success story! Wishing you much success and learning in your new job!"
        ]
    }
}