{
    "New? READ ME FIRST!": {
        "title": "New? READ ME FIRST!",
        "score": 819,
        "url": "https://www.reddit.com/r/learnprogramming/comments/61oly8/new_read_me_first/",
        "content": "# Welcome to /r/learnprogramming!\n\n## Quick start:\n\n1. New to programming? Not sure how to start learning? See [FAQ - Getting started][faq-start].\n2. Have a question? Our [FAQ][faq] covers many common questions; check that first. Also try searching old posts, either [via google][google] or via reddit's search.\n3. Your question isn't answered in the FAQ? Please read the following:\n\n## Getting debugging help\n\nIf your question is about code, make sure it's **specific** and **provides all information up-front**. Here's a checklist of what to include:\n\n1. A [**concise but descriptive title**][debugging-title].\n2. A [**good description**][debugging-description] of the problem.\n4.  A [**minimal**, **easily runnable**][debugging-posting], and [**well-formatted**][debugging-formatting] program that demonstrates your problem.\n5. The output you expected and what you got instead. If you got an error, include the **full** error message.\n\nDo your best to solve your problem before posting. The quality of the answers will be proportional to the amount of effort you put into your post. Note that title-only posts are automatically removed.\n\nAlso see [our full posting guidelines][debugging] and the [subreddit rules][rules]. After you post a question, **DO NOT** delete it!\n\n## Asking conceptual questions\n\nAsking conceptual questions is ok, but please check [our FAQ][faq] and search older posts first.\n\nIf you plan on asking a question similar to one in the FAQ, explain what exactly the FAQ didn't address and clarify what you're looking for instead. See our full guidelines on [asking conceptual questions][conceptual] for more details.\n\n## Subreddit rules\n\nPlease read [our rules][rules] and [other policies][policies] before posting. If you see somebody breaking a rule, report it! Reports and PMs to the mod team are the quickest ways to bring issues to our attention.\n\n\n  [faq-start]: https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_getting_started\n  [faq]: https://www.reddit.com/r/learnprogramming/wiki/faq\n  [google]: https://www.google.com/#q=site:reddit.com%2Fr%2Flearnprogramming\n  [wiki]: https://www.reddit.com/r/learnprogramming/wiki/index\n  [debugging]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_getting_debugging_help\n  [debugging-title]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_writing_a_good_title\n  [debugging-description]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_writing_a_good_description_of_the_problem\n  [debugging-posting]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_posting_code\n  [debugging-formatting]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_formatting_code\n  [conceptual]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_asking_conceptual_questions\n  [rules]: https://www.reddit.com/r/learnprogramming/about/rules\n  [policies]: https://www.reddit.com/r/learnprogramming/wiki/index#wiki_rules",
        "num_comments": 9,
        "comments": [
            "How about if there's input or output, give an example of what you think should be happening VS what is happening.\n\nI suppose that can be part of the error message if applicable. ",
            "I think the main reason I haven't been trying to learn to code is because it seems daunting. How do I get past this?",
            "Can I make good money self educated? ",
            "Shouldn't that always be included?",
            "Unfortunately, post templates aren't a thing on reddit AFAIK :(",
            "It should, but it never is. ",
            "Ooh, I didn't know that was a thing! I'll look into doing that.",
            "[deleted]",
            "[deleted]",
            "Good idea; edited."
        ]
    },
    "What have you been working on recently? [June 29, 2024]": {
        "title": "What have you been working on recently? [June 29, 2024]",
        "score": 0,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1dr2i3f/what_have_you_been_working_on_recently_june_29/",
        "content": "What have you been working on recently? Feel free to share updates on projects you're working on, brag about any major milestones you've hit, grouse about a challenge you've ran into recently... Any sort of \"progress report\" is fair game!\n\nA few requests:\n\n1. If possible, include a link to your source code when sharing a project update. That way, others can learn from your work!\n\n2. If you've shared something, try commenting on at least one other update -- ask a question, give feedback, compliment something cool... We encourage discussion!\n\n3. If you don't consider yourself to be a beginner, include about how many years of experience you have.\n\nThis thread will remained stickied over the weekend. [Link to past threads here](https://www.reddit.com/r/learnprogramming/search?q=%22What+have+you+been+working+on+recently%3F%22&sort=new&restrict_sr=on).",
        "num_comments": 4,
        "comments": [
            "Well, I got my first dev job and have officially been a Junior Software Engineer for over a week!",
            "Good luck in your first role and congratulations!",
            "Thank you! \ud83d\ude01"
        ]
    },
    "Girls Who Code": {
        "title": "Girls Who Code",
        "score": 275,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1dqqkfe/girls_who_code/",
        "content": "My daughter just finished a Girls Who Code program, and my 13yo son was super interested in it. I understand it won't be free for him lol, but can anyone recommend a similar online program for teens? Ideally with live classroom sessions, not self paced? ",
        "num_comments": 92,
        "comments": [
            "You can see if Code Ninjas has a location near you. It\u2019s at your own pace unless you are taking the summer camp, but camp and normal classes have \u201cSenseis\u201c on duty to help out and such. I worked for them and they\u2019re great",
            "plot twist - your son is actually interested in girls not coding",
            "CS50x or CS50p (Harvard certificate opportunity for free!) it builds an awesome foundation.",
            "Thinking ahead a little bit, check with your local school system for both your son and daughter. Many school systems that have vocational training for high school students in things like auto mechanics, HVAC, etc, also have computer programming. My son spent the last two years of high school learning programming and sailed through college studying computer science. This of course may not be available to them yet, but it's worth looking into early, and the teachers in that program may be able to recommend learning resources that are age appropriate for your kids.",
            "Yo, just start with  MIT Scratch.  It gives a core basic understanding of structure and is understandable. Some of those real-life complex scenarios are eventually going to become a basic rule of survival from point zero to writing legitimate code. I would suggest learning Python in Pygame to start. There's not really an easy way to learn, but how to understand is a key component to Scratch.",
            "check out your local library's digital access options - libraries provide a surprising amount of expensive educational tools you've heard of for free (in person events also exist but I assume rn it's bedroomcraftlearning vibe)",
            "Hack Club is an organization for high schoolers you may want to check out. Also look at local Makerspaces and (if they exist) local university programs for kids.",
            "FreeCodeCamp. I learnt from it when I was 15.",
            "Boys usually not need dedicated programs just tools.",
            "Why can't he do it free?"
        ]
    },
    "Past peak programmer (making jobs hard to get) but people will still be recommending tech and flooding the field based on outdated information for years to come.": {
        "title": "Past peak programmer (making jobs hard to get) but people will still be recommending tech and flooding the field based on outdated information for years to come.",
        "score": 74,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1dqyds6/past_peak_programmer_making_jobs_hard_to_get_but/",
        "content": "Just ran across this article:\n\nhttps://www.businessinsider.com/tech-software-developers-job-seekers-high-paying-work-opportunities-2024-6\n\nI'm a programmer of nearly 30 years of experience. I'm pretty sure this article is correct. For the past 30 years I've seen hordes of people flooding into tech. It used to be people would tell their kids to be a doctor or a lawyer. But for nearly my whole life they've been adding tech to that list. There are \"teach yourself programming\" resources everywhere and have been my whole life. \n\nAnd now the field is feeling pretty flooded. I post a job, I get hundreds of applications instantly. More than I could ever read. So most don't get read. I wish there was a way to close applications after X number so we don't waste people's time. Sorry, I can't hire you all. We're also paying lower than I ever thought we would, considering inflation etc. Especially if you consider outsourcing. There are folks out there who will write code for a bowl of rice. And you want to live in San Jose and make a living as a programmer? You had better be the next Steve Wozniak if you want to compete. The competition is amazingly intense. \n\nI think this article is right. We've hit \"peak programmer\". The market is weeding people out from now on as there aren't enough jobs world-wide as there are programmers world-wide and programming isn't likely to be any more lucrative than many other more mundane jobs due to supply and demand. \n\nMy only recommendation is to get really good at some growing programming niche. Maybe become a rust expert. Or embedded systems/microcontrollers. \n\nWe definitely don't need any more PHP/Java/Javascript programmers, that's for sure.",
        "num_comments": 41,
        "comments": [
            "No, trust me you don't want to specialize in embedded/microcontrollers.\u00a0 Embedded jobs are hard.\u00a0 You'll probably have to use a dumpy IDE based on eclipse.\u00a0 You can't work remotely because you need to use lots of lab equipment. Ah .. you have to program in C ... Um ... people get mad if you use malloc .. er ... you'll have to learn how linker scripts work .... .... ..... Fine fuck.\u00a0 Embedded is cool as shit.\u00a0 Please don't over saturate my niche job market.",
            "The thing with programming is that the bar to entry is low. There will always be demand for good programmers.",
            "It's kinda encouraging to get the CS degree, then. For years we've been told It's useless and just get fullstack skills. If people need to get more and more specialized while the easier tasks are becoming mundane or automated, maybe we can put those math skills to use?\u00a0",
            "Not really related to the topic but is malloc()[the vanilla] one still used frequently in embedded? I\u00a0 swore of new and delete in C++ except for simple applications some time ago. Alignment and all of that. What's the status for C? Anything like std::allocator there?",
            "LOL You had me going there, at first!",
            "Agreed. The problem is that unlike med or law school, you can get into tech without a degree, and as a result, you have devs who oversaturate the market and a lot of them aren't qualified and lack the necessary skills and experience. But for experienced devs with the right skills and knowledge, tech is just as lucrative as medicine and law (and can be as stable as the latter two).",
            "The reality is that throughout society, people have far more skill than opportunity. Turns out everyone can't be doctors and lawyers, so now we have highly educated line cooks paying off student loans. As a society, we could promote opportunity - we could promote competition, for example, instead of allowing every corporate merger and acquisition. Maybe we also shouldn't punish people for not contributing enough when the limiting factor isn't willingness or potential but opportunity.",
            "You don't give up on something you love cuz some random person on internet tells you it is over... something.You continue to learn and develop your skills.",
            "Try a different field of programming. I recommend /r/PLC programming, I'd like to get some new blood in this field. I'm \"young\" for the field at 40.",
            "Possibly. Depending on how long you are willing to spend unemployed or we working for minimum wage"
        ]
    },
    "They say you gotta spend 5000 hours on a topic to master it. how many hours you gotta spend to be intermediate or beginner in SQL or Python?": {
        "title": "They say you gotta spend 5000 hours on a topic to master it. how many hours you gotta spend to be intermediate or beginner in SQL or Python?",
        "score": 5,
        "url": "https://www.reddit.com/r/learnprogramming/comments/1dr8uio/they_say_you_gotta_spend_5000_hours_on_a_topic_to/",
        "content": "so I want to spend money one a sql beginner course it is cheap but it is also 105 hours long. would I really be ready for jobs that need basic knowledge of SQL?",
        "num_comments": 28,
        "comments": [
            "I wouldn't get caught up in how many hours are spent doing something like this. Even if you spend 5000 hours, if you're doing it wrong then what good has it done you?",
            "The 105 hrs long are simply lectures and estimated time for readings and exercises. Courses are also just to introduce you to things, not make you an expert. You\u2019ll want to keep practicing once the course is over, that\u2019s how you\u2019ll develop mastery.",
            "Do you know how insane it is to spend 5000 hours on something? Even having 600 hours in a video games feel like forever",
            "Never pay for course, just find a better free resource",
            "It\u2019s actually 10,000, but some people will cut that to make it sound like their course is better. \u00a0That number also gets debated, regardless of the niche. \u00a0If you work 40 hours a week, that\u2019s 2,080 hours a year. \u00a0If you think of it that way, it\u2019s about 5 years of work; that course sounds like they want you to believe you\u2019ll reach \u201cmastery\u201d in 2 years. \u00a0Which sounds more likely? 105 hours isn\u2019t that long. \u00a0If you look at it like a job, it\u2019s a little over 2.5 weeks. \u00a0Is their content worthwhile, though? \u00a0That\u2019s the thing you need to know.",
            "Make a crash course for a few hours and start a private project where you need those things. Theory is important, but practice and actually using those things is way more important.",
            "If you just want basic (to advance) SQL knowledge, Internet is your best friend. I don't think wasting 105 hours of your life to a course (for just SQL) is worth anything.",
            "I wouldn't waste money on a paid SQL course. The basics are fairly simple, and anything more complex you can learn while building some project you are working on.",
            "Depends on how well you take it up and how well you apply yourself. It\u2019s highly individual.",
            "nope. \u00a0Hmm, let's make an analogy. For instance, in moba games, I've played with Dota 2 for a total of 3000+ hours; however, I didn't master Dota 2 at all; I just got better. I never reached the leaderboards or the top rank (I already quit a long time ago). I only reached close to divine, which is ancient. and those who are playing Dota 2 for a living are on the leaderboards; they are in the in the top hundreds. They are competing with each other. I would say to fully master any shit is to be really, really good at it or spend 10,000 hours to fully master it and then compete for a position in a job market. That is just my analogy."
        ]
    }
}