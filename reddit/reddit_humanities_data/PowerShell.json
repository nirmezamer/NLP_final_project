{
    "What have you done with PowerShell this month?": {
        "title": "What have you done with PowerShell this month?",
        "score": 83,
        "url": "https://www.reddit.com/r/PowerShell/comments/1d5letk/what_have_you_done_with_powershell_this_month/",
        "content": "",
        "num_comments": 161,
        "comments": [
            "Started using powershell 7 :)",
            "I converted my onboarding script from MSOnline and Azure AD modules to Graph and thus said goodbye to PowerShell 5",
            "connect to a computer, list all the USB printers by number the computer has. you select the printer you want, it renames the printer and sets the share on the printer.",
            "The same thing I always do pinky. \n\nWrite simple software installers the engineers are too lazy to write themselves...",
            "Creating a script to read data coming in from a serial port (Daktronics) and use a reference csv file to match the raw data to correctly output racing splits",
            "I automated SSL certificate creation/approval/download using the Sectigo API using a CSR automatically created with OpenSSL.",
            "I wrote [Decode-AsusRouterConfig.ps1](https://github.com/VladDBA/Asus-Router-Config-Decoder) - a script to decode Asus router config backups and retrieve admin username & password, and SSIDs and passwords.\n\nThis is besides my constant work on [PSBlitz](https://github.com/VladDBA/PSBlitz) (a PS script that outputs SQL Server health and performance diagnostics data to either Excel or HTML, and saves execution plans and deadlock graphs as .sqlplan and .xdl files)",
            "Wrote a function that takes an array of objects and turns their properties into into columns and then uploads them into an azure storage table, I built a powerBI report that reads the azure table and pretty visual visuals",
            "Work related \n\n- uninstall stubborn apps\n- Patching\n- get win logon events\n- created a del profile except mentions profile (Extremely proud of this one)\n- create a deployable debloater\n- create a script to boot pc in Safe mode , add a run value to launch the uninstall of an AV , take the pc out of safe mode and restart it back into normal",
            "Found that the C/C++ compiler for Windows has a powershell command line as well as a CMD one."
        ]
    },
    "Powershell Useless but fun projects": {
        "title": "Powershell Useless but fun projects",
        "score": 26,
        "url": "https://www.reddit.com/r/PowerShell/comments/1dlo6hx/powershell_useless_but_fun_projects/",
        "content": "I\u2019m making a joke portfolio full of pointless, silly or amusing projects. So far I have a script to have pop up windows with sarcastic error messages, auto launching a Rick-roll, and changing the default cursor to a pickle. \n\nIt\u2019s fun but I need more ideas.",
        "num_comments": 28,
        "comments": [
            "As mentioned elsewhere in this thread, here's the guts from my much longer invoke-catfact.ps1 script I wrote. If you can etsn or ssh into another PC on your domain, this would do the job to randomly play a cat fact on another computer..\n\n    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072\n    Add-Type -AssemblyName System.speech\n    $speak = New-Object System.Speech.Synthesis.SpeechSynthesizer\n    $speak.SelectVoice('Microsoft Zira Desktop')\n    $RandomCatFact = (ConvertFrom-Json (Invoke-WebRequest -Uri \"https://catfact.ninja/fact\" -UseBasicParsing).Content).fact\n    Write-Host $RandomCatFact\n    $speak.Speak(\"did you know that $RandomCatFact\")    \n\nThe full script was set to run as a scheduled task, and would add a random delay of up to 30mins, but then my target kept muting their speakers, so I added a bit to unmute them and set the volume to max.. When they started plugging in headphones, I updated the final version to change the audio back to speakers, unmute, set max volume, then play the 80s \"the more you know\" jingle, and then speak the random cat fact.\n\nThe final script is a bit too long to post here in the comments, but if someone is really interested, either reach out or upvote and i can toss it on pastebin or something..",
            "Set a scheduled task to have powershell invoke the text to speech feature to say random messages at random intervals. I did this to a buddy years ago who kept his speakers at high volume to listen for alerts.\n\nAdd-Type -Assemblyname system.speech \n\n$jerkbot = New-object System.Speech.Synthesis.SpeechSynthesizer \n\n$jerkbot.speak('I am watching you')",
            "Something which sets the user\u2019s wallpaper to a random picture of a goat",
            "I have a function called Get-CatFact that calls the Cat Fact API (Google it) then uses text to speech to read it aloud.",
            "I made functions to roll 6 sided dice, 8ball, d20, and coin flip that I think are amusing",
            "Awesome!",
            "Turn off someones display\n\nPlay a sound file on repeat that they cant stop, even if they close the powershell window.\n\n  \nIve done both through powershell so I know they are possible.",
            "Care to share the script for sarcastic error messages",
            "I've got Snake on Powershell somewhere on my computer still :p",
            "An interesting one I did on Fiver sometime ago was make a script to launch and play 4 copies of the same video on 4 separate screens at full screen. I never really understood the point, but I imagined it as a pseudo-presentstion setup. Was an interesting problem to solve at least."
        ]
    },
    "Remove old and add new permissions to document library": {
        "title": "Remove old and add new permissions to document library",
        "score": 1,
        "url": "https://www.reddit.com/r/PowerShell/comments/1dlv1h9/remove_old_and_add_new_permissions_to_document/",
        "content": "I\u2019m trying write a script that will create a document library on a SharePoint online site and give it different permissions to the site.\n\nI can create the library, the relevant group, break inheritance and add the group but I can\u2019t remove the other site groups.\n\nDoes anyone know how I can do this?",
        "num_comments": 0,
        "comments": []
    },
    "SecretBackup PowerShell Module": {
        "title": "SecretBackup PowerShell Module",
        "score": 40,
        "url": "https://www.reddit.com/r/PowerShell/comments/1dl5sb6/secretbackup_powershell_module/",
        "content": "The official SecretManagement module is excellent for securely storing secrets like API tokens. Previously, I used environment variables for this purpose, but now I utilize the local SecretStore for better security and structure. However, I've encountered a significant limitation: portability. Moving API tokens to a new machine or restoring them after a rebuild is practically impossible. While using a remote store like Azure Vault is an option, it's not always practical for small projects or personal use.\n\nTo address the lack of backup and restore features in the SecretManagement module, I developed a simple solution: the SecretBackup module. You can easily export any SecretStore (local, AzureVault, KeePass, etc.) as a JSON file, which can then be easily imported back into any SecretStore.\n\n# Key Features\n\n* **Backup and Restore Secrets**: Easily create backups of your secrets and restore them when needed.\n* **Cross-Platform Portability**: Move secrets between different machines seamlessly.\n* **Backend Migration**: Migrate secrets from one backend store to another (e.g., KeePass to Azure Vault).\n\n# Module Source Code\n\n* **Module Link**: [PSGallery](https://www.powershellgallery.com/packages/SecretBackup)\n* **Repository Link**: [GitHub](https://github.com/belibug/SecretBackup)\n\nIt's a straightforward module. If you're hesitant about installing it, you can copy the source code directly from the GitHub repository.\n\n**Note**: The exported JSON is in plain text by design. I plan to implement encryption in the next release.\n\n**Note 2**: This is definitely not for everyone, It addresses a niche requirement and use case. I wanted to get my first module published to PSGallery (and learn automation along the way). Go easy on me, feedback very welcome.",
        "num_comments": 4,
        "comments": [
            "I'll be happy to be your first official fork on GitHub :). Looking to contribute to this VERY relevant and important project to ANY automation lover.",
            "Nice! That was a pain point I had too. I built one of these for the company I'm at now. You can import/export secrets, and load them up to your session's environmental variables for usage by calling that secret's name. Unfortunately that was specifically for work so I can't release it.",
            "Please do. Call out your contribution in issue tracker so we can brainstorm and track.",
            "I did write adhock export command by simply looping. But it miserably failed to export PS credentials and metadata types. Built this module to address that once for all."
        ]
    },
    "53504 event": {
        "title": "53504 event",
        "score": 1,
        "url": "https://www.reddit.com/r/PowerShell/comments/1dlr5k1/53504_event/",
        "content": "Hello when I recently turned my laptop on after 6 hours turned off (not hibernation) I saw what I think were three command terminal windows open and close in one second. I don't really recall if the windows were blue-background powershell or black cmd but I checked event viewer to see what it might have been and saw three processes in quick succession around that time: powershell opens (40961), IPC listening (53504), then ready for input (40962) happening within a second, but NO remote command is executed (4104) after nor are any security logs deleted. \n\nIs 53504/IPC listening a normal process or should I be concerned? Thanks ",
        "num_comments": 0,
        "comments": []
    }
}