{
    "Levelling up as a nodejs developer.": {
        "title": "Levelling up as a nodejs developer.",
        "score": 8,
        "url": "https://www.reddit.com/r/node/comments/1dlsczi/levelling_up_as_a_nodejs_developer/",
        "content": "I want to apply Jobs for junior or mid level Nodejs developer. I want to know what concepts/projects should I delve into to up my skillset. \nI'm a fresh grad and I've made a few projects where I've implemented Restful Apis, Authentication(JWT), Resource based access Control, integrating cloudinary for file storage and abit of work related to Google ads API as well.\n\nWheee should I go from here, bcz I feel like this is pretty basic stuff and I want to know more of the core NodeJs stuff. Any resources, concepts would be welcome for me.",
        "num_comments": 1,
        "comments": [
            "Work on setting up background workers, try stuff like BullMQ, AWS SQS, RabbitMQ, etc.  \nTry out some frameworks like NestJS, Next/Nuxt and then try to build your own. You will gain so much by trying to build your own framework on top of Express with DI, Error Handling, CLI, layers etc  \nDig deeper into JavaScript, read \"You don't know JS\" if you haven't already. Look into the more advanced Node APIs, learn how to work with streams.  \nTry some ORMs out, check MikroORM and the powerful patterns it's based on.  \nWork with a few common third-party service APIs that are very popular on modern projects like Stripe, Paypal, Shopify, Mailchimp.  \nLearn more about networks, how SSL works, how proxy servers work.  \nCheckout Cloudflare Workers and build something with hono.  \nRead up more on OOP, SOLID principles and functional concepts to get the grip of both paradigms."
        ]
    },
    "Roast my resume": {
        "title": "Roast my resume",
        "score": 2,
        "url": "https://i.redd.it/vmkv0vt8c48d1.png",
        "content": "",
        "num_comments": 3,
        "comments": [
            "Bullets should be accomplishments for the business, not tasks that you've done. How'd you help your company with your rest API? Links to real things (sites, projects, repos) help your case.",
            "Good observation. Most companies hire people to implement their project, but they don't mention the business impact of that solution.",
            "In fact I wanted to talk about accomplishments but didn't know how, can you give me an example on how to reformulate some of my experience bullets?"
        ]
    },
    "Vscode Terminal BLUE DOT": {
        "title": "Vscode Terminal BLUE DOT",
        "score": 1,
        "url": "https://i.redd.it/0cwlv4m0748d1.png",
        "content": "I am concerned about the \"Blue dot\" \ud83d\udd35 appears in the terminal window. I want to know how to enable and disable it in the vs code settings? I have encircled with  red highlight in the image. Please tell me about this.",
        "num_comments": 1,
        "comments": [
            "A blue dot means that command was successful. A red dot means they there was an error."
        ]
    },
    "Fetch with timeouts and intercepts": {
        "title": "Fetch with timeouts and intercepts",
        "score": 1,
        "url": "https://www.reddit.com/r/node/comments/1dluamj/fetch_with_timeouts_and_intercepts/",
        "content": "I wanted fetch with timeouts and intercepts, so I made a new library. This is something that can replace all calls to fetch in a web app/server - it just calls the original fetch method under the hood.\n\nYou can also add interceptors and timeouts - either on a per-request basis or to the entire instance. You can also create a new instance, and optionally extend the options on the original instance. Timeouts also work with an existing abort signal!\n\nOh, and it's tiny - under 1kb gzipped for the minified output.\n\nhttps://github.com/nvitaterna/grabd\n\nhttps://www.npmjs.com/package/@nvitaterna/grabd\n\nOne quirk is that interceptors either need to return request arguments, or the response, or throw an error. This is to ensure the each interceptor has the same input/output. The code needs a cleanup and tests aren't 100% there... And I still need to make some improvements:\n\n* being able to set *any* fetch option as a default on an instance\n* improve request/response interceptor interface based on feedback\n\nPlease give me any and all feedback and/or criticism, suggestions on what to improve, etc.",
        "num_comments": 0,
        "comments": []
    },
    "What tech-stack would you suggest for an LMS like Coursera?": {
        "title": "What tech-stack would you suggest for an LMS like Coursera?",
        "score": 1,
        "url": "https://www.reddit.com/r/node/comments/1dlsj4v/what_techstack_would_you_suggest_for_an_lms_like/",
        "content": "I'd like to hire a node.js developer for the backend of a project which is similar to a mash up of Coursera dn Duolingo. I would like to know your opinion on what tech-stack (with the node as backend development) is good to keep the project scalable?",
        "num_comments": 1,
        "comments": [
            "Any modern tech stack would work. Since this is a node sub and depends on your budget, hire a fullstack node react developer"
        ]
    }
}