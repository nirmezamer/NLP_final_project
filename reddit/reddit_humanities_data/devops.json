{
    "'Getting into DevOps'": {
        "title": "'Getting into DevOps'",
        "score": 705,
        "url": "https://www.reddit.com/r/devops/comments/yjdscp/getting_into_devops/",
        "content": "**What is DevOps?**\n\n* [AWS has a great article](https://aws.amazon.com/devops/what-is-devops/) that outlines DevOps as a work environment where development and operations teams are no longer \"siloed\", but instead work together across the entire application lifecycle -- from development and test to deployment to operations -- and automate processes that historically have been manual and slow.\n\n**Books to Read**\n\n* [The Phoenix Project](https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/1942788290) - one of the original books to delve into DevOps culture, explained through the story of a fictional company on the brink of failure.\n* [The DevOps Handbook](https://www.amazon.com/dp/1942788002) - a practical \"sequel\" to The Phoenix Project.\n* [Google's Site Reliability Engineering](https://landing.google.com/sre/books/) - Google engineers explain how they build, deploy, monitor, and maintain their systems.\n* [The Site Reliability Workbook](https://landing.google.com/sre/workbook/toc/) - The practical companion to the Google's Site Reliability Engineering Book\n* [The Unicorn Project](https://www.amazon.com/Unicorn-Project-Developers-Disruption-Thriving-ebook/dp/B07QT9QR41) - the \"sequel\" to The Phoenix Project.\n* [DevOps for Dummies](https://www.amazon.com/DevOps-Dummies-Computer-Tech-ebook/dp/B07VXMLK3J/) - don't let the name fool you.\n\n**What Should I Learn?**\n\n* [Emily Wood's essay](https://crate.io/a/infrastructure-as-code-part-one/) - why infrastructure as code is so important into today's world.\n* [2019 DevOps Roadmap](https://github.com/kamranahmedse/developer-roadmap#devops-roadmap) - one developer's ideas for which skills are needed in the DevOps world. This roadmap is controversial, as it may be too use-case specific, but serves as a good starting point for what tools are currently in use by companies.\n* [This comment by /u/mdaffin](https://www.reddit.com/r/devops/comments/abcyl2/sorry_having_a_midlife_tech_crisis/eczhsu1/) - just remember, DevOps is a mindset to solving problems. It's less about the specific tools you know or the certificates you have, as it is the way you approach problem solving.\n* [This comment by /u/jpswade](https://gist.github.com/jpswade/4135841363e72ece8086146bd7bb5d91) - what is DevOps and associated terminology.\n* [Roadmap.sh](https://roadmap.sh/devops) - Step by step guide for DevOps or any other Operations Role\n\nRemember: DevOps as a term and as a practice is still in flux, and is more about culture change than it is specific tooling. As such, specific skills and tool-sets are not universal, and recommendations for them should be taken only as suggestions.\n\n**Please keep this on topic (as a reference for those new to devops).**",
        "num_comments": 103,
        "comments": [
            "And to add further, I\u2019ve also got a quick free one hour introductory course on Kubernetes architecture that\u2019s a bit different.  Rather than slide after slide of diagrams, we build a Kubernetes cluster, disable each component one by one and then, attempt to use Kubernetes.  As things fail, we discuss each component and what it does, then re-enable.  Like a reverse kit car.  This is on YouTube here as one long video: https://youtu.be/n4zxKk2an3U\n\nAlternatively it\u2019s free on Udemy also with the videos being split into smaller chunks.",
            "This is bullshit and has nothing to do with beginners  \n\n\nThe only efficient and quick way getting into devOps : a lot of practice and googling from day 1  \n\n\nNone of these endless videos  \n\n\nFrom 1 structure practical task, you can get more expeirnece than whole video course all together.   \n\n\nIt is about hands on skills!!!   \n\n\n* Someone who mentor & interview devops people for number of years  \n\n\nNone of the resources higher, will have any influence  \n\n\nDoing something 10% of this [https://github.com/100daysofdevops/100daysofdevops](https://github.com/100daysofdevops/100daysofdevops)will make you a lot better DevOps than authored list higher  \n\n\nSorry u/mthode , but your list is valuable for people already in DevOps :)",
            "DevOps evolves around 3 key principles:\n\n1. Automation\n2. Monitoring\n3. Integration\n\nThe rules are simple:\n\n# Automation\n\nDon't ever do anything by hand. The only allowable manual action is configuring a provisioning system to do what you need.\n\nInvest in learning Terraform ([https://www.terraform.io/](https://www.terraform.io/)) or Ansible ([https://www.ansible.com/](https://www.ansible.com/)), or any other similar tool for provisioning systems and applications.\n\nDon't be trapped into repeated tasks. If something needs to be done twice, you need to automate it.\n\n# Monitoring\n\nMonitor everything! Every infrastructure component and application, including databases, web servers, proxies, message brokers, and make sure you have alerts for all of them.\n\nDon't create a monitoring system yourself. You will waste your time and energy and you will never get it as complete and holistic as a ready made monitoring solution.\n\nUse tools like Netdata ([https://github.com/netdata/netdata](https://github.com/netdata/netdata)) that have a bottom-up philosophy. Such a tool can automate the entire monitoring process for you and provide you  with fully automated dashboards and hundreds of pre-configured alerts, out of the box, to detect common issues and anomalies.\n\nAlways convert your access logs (web servers, proxies, etc) into metrics and attach alerts to them. Netdata can also help you with that.\n\nShortcut: remember that by monitoring everything at the entry points of your infra (the points where requests come in and responses are sent out), you can get 90% of the visibility you need on the actual customer experience. So, be sure that everything is monitored (workload, errors and latency) at these points. You monitor the rest of the infra, to actually figure out why something is broken.\n\n# Integration\n\nInvest in learning the APIs of your cloud provider and be fluent in managing your infra through them.\n\nMake sure you understand the capabilities of your monitoring solution. You will need them at 3AM.\n\nLearn how to create robust glue code that connects everything together. You are not a developer. Don't think algorithms. You are an integrator. You combine things together to bring the result.",
            "This month I focused on releasing videos that focused on tools for Kubernetes such as Kustomize and Helm. Here are the videos:\n\nKustomize:\n\n[https://youtu.be/spCdNeNCuFU](https://youtu.be/spCdNeNCuFU)\n\n&#x200B;\n\nHelm Playlist (What Helm is, Deploying applications using Helm, Creating Helm Charts):\n\n[https://www.youtube.com/watch?v=w51lDVuRWuk&list=PLnFWJCugpwfzCjufOk52ufg7CDxpLEmXi](https://www.youtube.com/watch?v=w51lDVuRWuk&list=PLnFWJCugpwfzCjufOk52ufg7CDxpLEmXi)",
            "This is a Fakespot Reviews Analysis bot. Fakespot detects fake reviews, fake products and unreliable sellers using AI.\n\nHere is the analysis for the Amazon product reviews:\n\n>**Name**: The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win \n\n>**Company**: by\n\n>**Amazon Product Rating**: 4.7 \n\n>**Fakespot Reviews Grade**: B\n\n>**Adjusted Fakespot Rating**: 4.7\n\n>**Analysis Performed at**: 07-11-2022 \n\n[Link to Fakespot Analysis](https://fakespot.com/product/the-phoenix-project-a-novel-about-it-devops-and-helping-your-business-win-006670d6-15bb-4e22-a315-2712c1133abe) | [Check out the Fakespot Chrome Extension!](https://chrome.google.com/webstore/detail/fakespot-analyze-fake-ama/nakplnnackehceedgkgkokbgbmfghain)\n\n*Fakespot analyzes the reviews authenticity and not the product quality using AI. We look for real reviews that mention product issues such as counterfeits, defects, and bad return policies that fake reviews try to hide from consumers.*\n\n*We give an A-F letter for trustworthiness of reviews. A = very trustworthy reviews, F = highly untrustworthy reviews. We also provide seller ratings to warn you if the seller can be trusted or not.*",
            "I really like the Gene Kim's material, such as the Phoenix Project.  I so enjoyed the entertaining story.\n\nIt is interesting though, careful to navigate misinformation out there.  DevOps is about accelerating delivery of software to the cloud by knocking down silos.  In the past, ops and devs were separated in silos for good reasons.  These rigid patterns, before arrival infrastructure-as-code and virtualization, are no longer tenable in the cloud, because most software is no longer shipped on a CD in a shrink wrapped box, and no longer downloadable from a BBS, usenet, or ftp servers.  \n\n\nThere's the new term for platform engineering, with some promoting that DevOps is dead and this is the new way, but this is re-introduction of silos.  Essentially, a platform is made to delivery to the cloud, but this limits devs to their silo and has a controlled path to the cloud.  Most implementations, platform engineers cannot predict all use cases, and time to delivery is delayed, because platform engineers have to invent a platform.\n\nBoth DevOps and Platform Engineer have the same goal to accelerate delivery, but DevOps works with collaboration.",
            "Hi guys, I started 2 Youtube series to help new people getting into devops.\n\nThe first one: https://youtube.com/playlist?list=PL-WCaWbINSZ6tTkXVYXKvB7oC7-t19rHF revolves around containers and kubernetes in a follow along manner, with materials supplied for each video.\n\nThe second one (path2DevOps) caters to audiences who come from a technical background and want to dabble/transition to a devops-centric role. The format was tested on some friends of mine who actually made the transition from testing to devops. This is also a follow along, as we try to build, understand and deploy 3 \"microservices\" (2 java be and 1 angular fe) while sprinkling in some pipelines, k8s, helm, IaC, cloud infra and more!\nhttps://youtube.com/playlist?list=PL-WCaWbINSZ6xyqY9mNlfvgx3MgKpOuxG\n\nPS the video quality was quite bad at the start as I hadn't invested in the full equipement yet, but keeps getting better. Hope this helps you!",
            "Any mentors out there willing to chat? I'm worried I'm digging myself into a hole working with a custom on-prem cloud solution. Anyone willing to chat, I'd be extremely grateful.",
            "The 2019 DevOps Roadmap link (aka https://roadmap.sh/devops) is no longer useful and should really be removed or majorly updated as it's confusing to newbies.   It's actually linked twice in different ways, first link via GitHub.\n\nI have to warn people off this roadmap when linking to this thread, even though clicking on the general boxes (like CI/CD) and relevant technologies is helpful.\n\nThe roadmap doesn't cover the core of major clouds like AWS, Azure or GCP, which have a lot of relevant technologies in various categories (ECS, CloudWatch Logs, etc).\n\nIt mentions various technologies that are very rarely used in current DevOps:\n\n- Nagios and Monit in monitoring (but no AWS CloudWatch) - see Stack Overflow tag popularity here: http://sotagtrends.com/?tags=prometheus+grafana+datadog+zabbix+nagios+amazon-cloudwatch&relative=true (Monit doesn't have a tag)\n- Docker Swarm and Nomad (but no AWS ECS) in container orchestration - see http://sotagtrends.com/?tags=kubernetes+docker-swarm+nomad+amazon-ecs&relative=true\n\nIt has some very specific topics that are only occasionally useful or far too low level - why are text manipulation or process listing tools given the same prominence as Ubuntu, Terraform or Kubernetes?\n\nThe tech-specific roadmaps such as https://roadmap.sh/kubernetes and https://roadmap.sh/docker are much better, with consistent level of detail.",
            "With the transition from dev to devops in mind, we have created a complete guide to publicly available materials, webinars, books, newsletters and e-learning paths. All you need - in one place:\u00a0[https://gitprotect.io/blog/how-to-transform-from-dev-to-devops-a-complete-guide/](https://gitprotect.io/blog/how-to-transform-from-dev-to-devops-a-complete-guide/)"
        ]
    },
    "How should this sub respond to reddit's api changes, part 2": {
        "title": "How should this sub respond to reddit's api changes, part 2",
        "score": 41,
        "url": "https://www.reddit.com/r/devops/comments/14n6ghq/how_should_this_sub_respond_to_reddits_api/",
        "content": "We stand with the disabled users of reddit and in our community. Starting July 1, Reddit's API policy blind/visually impaired communities will be more dependent on sighted people for moderation. When Reddit says they are whitelisting accessibility apps for the disabled, they are not telling the full story.\nTL;DR\n\n    Starting July 1, Reddit's API policy will force blind/visually impaired communities to further depend on sighted people for moderation\n\n    When reddit says they are whitelisting accessibility apps, they are not telling the full story, because Apollo, RIF, Boost, Sync, etc. are the apps r/Blind users have overwhelmingly listed as their apps of choice with better accessibility, and Reddit is not whitelisting them. Reddit has done a good job hiding this fact, by inventing the expression \"accessibility apps.\"\n\n    Forcing disabled people, especially profoundly disabled people, to stop using the app they depend on and have become accustomed to is cruel; for the most profoundly disabled people, June 30 may be the last day they will be able to access reddit communities that are important to them.\n\nIf you've been living under a rock for the past few weeks:\n\nReddit abruptly announced that they would be charging astronomically overpriced API fees to 3rd party apps, cutting off mod tools for NSFW subreddits (not just porn subreddits, but subreddits that deal with frank discussions about NSFW topics).\n\nAnd worse, blind redditors & blind mods [including mods of r/Blind and similar communities] will no longer have access to resources that are desperately needed in the disabled community.\nWhy does our community care about blind users?\n\nAs a mod from r/foodforthought testifies:\n\n    I was raised by a 30-year special educator, I have a deaf mother-in-law, sister with MS, and a brother who was born disabled. None vision-impaired, but a range of other disabilities which makes it clear that corporations are all too happy to cut deals (and corners) with the cheapest/most profitable option, slap a \"handicap accessible\" label on it, and ignore the fact that their so-called \"accessible\" solution puts the onus on disabled individuals to struggle through poorly designed layouts, misleading marketing, and baffling management choices. To say it's exhausting and humiliating to struggle through a world that able-bodied people take for granted is putting it lightly.\n\nReddit apparently forgot that blind people exist, and forgot that Reddit's official app (which has had over 9 YEARS of development) and yet, when it comes to accessibility for vision-impaired users, Reddit\u2019s own platforms are inconsistent and unreliable. ranging from poor but tolerable for the average user and mods doing basic maintenance tasks (Android) to almost unusable in general (iOS).\nDidn't reddit whitelist some \"accessibility apps?\"\n\nThe CEO of Reddit announced that they would be allowing some \"accessible\" apps free API usage: RedReader, Dystopia, and Luna.\n\nThere's just one glaring problem: RedReader, Dystopia, and Luna* apps have very basic functionality for vision-impaired users (text-to-voice, magnification, posting, and commenting) but none of them have full moderator functionality, which effectively means that subreddits built for vision-impaired users can't be managed entirely by vision-impaired moderators.\n\n(If that doesn't sound so bad to you, imagine if your favorite hobby subreddit had a mod team that never engaged with that hobby, did not know the terminology for that hobby, and could not participate in that hobby -- because if they participated in that hobby, they could no longer be a moderator.)\n\nThen Reddit tried to smooth things over with the moderators of r/blind. The results were... Messy and unsatisfying, to say the least.\n\nhttps://www.reddit.com/r/Blind/comments/14ds81l/rblinds_meetings_with_reddit_and_the_current/\n\n*Special shoutout to Luna, which appears to be hustling to incorporate features that will make modding easier but will likely not have those features up and running by the July 1st deadline, when the very disability-friendly Apollo app, RIF, etc. will cease operations. We see what Luna is doing and we appreciate you, but a multimillion dollar company should not have have dumped all of their accessibility problems on what appears to be a one-man mobile app developer. RedReader and Dystopia have not made any apparent efforts to engage with the r/Blind community.\n\nThank you for your time & your patience.\n\n[View Poll](https://www.reddit.com/poll/14n6ghq)",
        "num_comments": 26,
        "comments": [
            "Step down. You guys have handeled this horribly.",
            "The protests haven't worked and Reddit is not reverting the change.\n\nIt's a protest out of spite at this point which is pointless.",
            "Honestly now im really annoyed of this sub being NSFW.  DevOps is such a small community that it really had no effect on Reddit now that most big subs arent protesting.",
            "I  don't use third party aps and think reddit is free to do with its API what it wants. do nothing or step down in protest.",
            "Reddit has been very clear that commercial apps like Apollo, RIF, etc will not be whitelisted on accessibility grounds. Seems like you\u2019re the one not telling the whole story \n\n> \u201cWe\u2019ve connected with select developers of non-commercial apps that address accessibility needs and offered them exemptions from our large-scale pricing terms,\u201d Reddit spokesperson Tim Rathschmidt says in a statement to The Verge.\n\nReported by The Verge on June 7th",
            "If you don't wanna adhere to the rules of Reddit just leave the mod role and hand it to someone new. No need to suffer the whole community for it.",
            "Please don't close the sub.",
            "Sad how many people here basically don't give a shit about anything other than their lil dopamine hit. I shouldn't be shocked the guys that usually don't give a fuck about anything as long as there's cash in it wouldn't care about accessibility to a platform. Sure Reddit has the legal right to do whatever it wants, literally no one is arguing that. Something can be legal and still immoral.\n\nIf you idiots are all that's left, I'm fine not participating in this sub again.",
            "Long term actions are important when you're doing something in protest. I really like the idea of once a week closures, which for Reddit means a permanent loss of revenue until they satisfy concerns.",
            "As DevOps engineers we should have the API-first mentality. By basically ruining the API, there should at least be some kind of signal."
        ]
    },
    "Is Pulumi worth it?": {
        "title": "Is Pulumi worth it?",
        "score": 11,
        "url": "https://www.reddit.com/r/devops/comments/1dltcoy/is_pulumi_worth_it/",
        "content": "Had someone build something big with it already? How do you compare your expirience compare to TF? Are there any showcases or public repos to look at?",
        "num_comments": 28,
        "comments": [
            "One thing to note is that the current AWS provider for Pulumi (Classic Provider) uses Terraforms AWS provider. For example, check the \"package details\" for a resource like: https://www.pulumi.com/registry/packages/aws/api-docs/acm/certificate/\n\nPulumi do however have their own \"Native Provider\" but it has been in preview for awhile now and I personally haven't used that myself.\n\nI have used both Terraform and Pulumi and I can say the documentation and examples provided in Terraform is way better than Pulumi.\n\nHere's one I needed an example for recently and Pulumi just has \"coming soon\" under the example section.. and I've seen this a few things already..\n\nhttps://www.pulumi.com/registry/packages/aws/api-docs/wafv2/webacl/#example\n\nWhat I often end up doing is look through the terraform docs, reference the example there to know what pieces I need to make things work in Pulumi. However, it's with noting that this would only work with the classic provider and I don't think it'll work for the native one as they are different..\n\nI don't mind either but I do like the simplicity of Terraform as things just work and has plenty of information and examples online... but with Pulumi, whenever you do a google search for help, you'll most likely end up on their Pulumi AI page where you can ask it questions, it works somewhat ok, but has given me bad code a few times.",
            "It\u2019s a solution in search of a problem in my opinion. My use case might be limited but I never found a compelling reason to use it over HCL.",
            "If you have a software engineering background, you will probably prefer Pulumi over Terraform. I was on dozens of projects with Terraform and to this day I never saw a single configuration without duplicating Terraform code (especially when having to manage multiple environments, I never saw a single solution which I considered \"lean\"). Pulumi can solve this issue (or you can continue using Terraform and add some tooling on top such as Terragrunt, since other people already tried to solve the same issues Terraform has).\n\nI would still advice to go with Terraform most of the time, unless the people in charge have strong software engineering backgrounds and knowledge about software design patterns. Seeing what OpenTofu has in mind for the upcoming releases, we may finally see what Terraform should have been since its creation.",
            "The only reason I'm am currently using Terraform is because one AI makes HCL useable, I can use AI to get example code for what I'm trying to do. The ability to debug and walk through and your code in pulumi, is way underrated in my opinion. There are still certain cases where nested loops and conditions can not be performed in HCL. I still prefer Pulumi. In my opinion HCL is a solution in search of a problem. Should have used a first class programming language from the beginning, like Terraform CDK does.",
            "You'll never get a proper answer. You need to try them both out so you can see the pros and cons of each for your particular use case.\n\n\nThere are two different commenters in this thread that each option is a \"solution looking for a problem\".\n\n\nPulumi:\n\n\n\n>\u00a0It\u2019s a solution in search of a problem in my opinion. My use case might be limited but I never found a compelling reason to use it over HCL.\n\n\nTerraform:\n\n\n> I still prefer Pulumi. In my opinion HCL is a solution in search of a problem. Should have used a first class programming language from the beginning, like Terraform CDK does.",
            "I don't get the issues people have with HCL. I've never encountered a problem I couldn't solve with it.",
            "TLDR: no palumi is ass\n\nLong answer: it's a wrapper of TF which is a wrapped for cloud sdks.\n\nToo many abstracted out layers, community isn't there and it's annoying to use. Things could break at the sdk level, the TF level or the palumi level, most often it's the palumi level.\n\nAlso just in general, avoid anything where you put your env state in someone else's \"cloud\" setup. IDC how secure they might think it is, it's not.",
            "You can dynamically get examples by using the pulumi AI tool. [https://www.pulumi.com/ai](https://www.pulumi.com/ai)\n\nStatic examples are kind of old school.",
            "Five years ago, HCL was very limited and Pulummi probably made a lot of sense. Modern HCL is still quite awkward, but it does almost all things I need it to.",
            "I feel HCL is a solution in search of a problem. Why invent a new programming language ? It was never needed, could have used one of the widely used programming languages."
        ]
    },
    "What does a devops project look like?": {
        "title": "What does a devops project look like?",
        "score": 25,
        "url": "https://www.reddit.com/r/devops/comments/1dld29z/what_does_a_devops_project_look_like/",
        "content": "I'm a pipeline/infrastructure engineer who has been in the VFX industry for almost 20 years.  But I'm trying to transition into the devops field to expand my job opportunities.  I'd like to put together a project that will allow me to learn the skills needed for devops.  I was hoping for some advice on what to do for a project.\n\nMy initial thought was to create a simple weather app and distribute that onto a cloud infrastructure.  Any advice would be welcome. ",
        "num_comments": 25,
        "comments": [
            "Your idea sounds like a perfect devops portfolio project. Make sure you put the app in a github repo with a readme, instructions to develop locally, and automation to build the cloud infrastructure and deploy code to it (CI/CD pipeline).\n\nThere's a lot of other stuff you can add on top of that but this is a good starting point.",
            "There's lots of ways to skin it, I would take a look at a few job posts, see what they're asking for and see what you can do to learn that.\n\nwhen I was looking to jump from sys admin to devops I decided a good way for me to prep was to upgrade my homelab. Writing my own apps is still on the list but not gotten around to it yet, I figured that as I primarily would not be a developer I saw that as something to come later.\n\nWhat worked for me may not work or be helpful to you but what I did was ripped down my servers, set up truenas then set up a host server using Ubuntu and set up truenas as my iscsi storage. Then I set up a single node k8s cluster and started writing helm charts to configure it in the way i wanted and deploy common containerised apps like prometheus, grafana, unifi controller, home assistant etc etc etc. From that point I built out the services, set up traefik and cert manager, moved services over to be exposed through that over https. Set up gitlab to get my repos into source control. Argo CD and key cloak are next on the list to do. I purposefully chose to do things in harder ways to make sure I got deeper understanding of how everything hung together. \n\nI will admit though, that approach leaves out cloud infra and stuff like terraform but that wasn't my focus for this project.",
            "Check out Cloud Resume Challenge for a project idea.",
            "Have you seen the AI Weather Panels that use LoRA Wireless Ethernet?  Just saying.",
            "Eldrich screaming.",
            "Pain. It looks like pain.",
            "Deploy it two ways:\n\n- into vm on cloud leveraging vagrant and ansible\n\n- another into vm on cloud leveraging containers\n\nThen expose both to public internet with an own domain managed outside of the cloud and subdomain managed in the cloud\n\nThen try to add persistance layer to the app and deploy it using two ways:\n\n- managed service\n\n- self managed on vm\n\nConsider industry standards for security and IaC repeatability.\n\n\nThis should teach you ALOT about \u201eHow to\u201d but not alot about \u201ewhen to\u201d",
            "OK so funny thing is that I've had my own home Truenas server for years now (actually I used it when it was still called Freenas).  I don't really use all the tech you mentioned though.  I have a different set of apps I use in jails....mainly Plex and other apps that support that echo system.\n\nI feel what I'm missing is Docker/Kubernetes experience plus some cloud experience like more in-depth work with Terraform, and I have only used CI/CD for one small python app that I wrote that is published on PyPi.\n\n>Then I set up a single node k8s cluster and started writing helm charts to configure it in the way i wanted and deploy common containerised apps like prometheus, grafana, unifi controller, home assistant etc etc etc. From that point I built out the services, set up traefik and cert manager, moved services over to be exposed through that over https. Set up gitlab to get my repos into source control. Argo CD and key cloak are next on the list to do. I purposefully chose to do things in harder ways to make sure I got deeper understanding of how everything hung together.\n\nCould you elaborate more on what you are doing with this?  It's tech I've heard of but have never had any reason to use it.  Like I have grafana in a jail on my Core setup.  But I never really used it because I didn't see much need for it on my home setup.",
            "Cool thanks for the tip!",
            "No I haven't.  Is this something that would help me build devops skills?"
        ]
    },
    "How to create and update ansible inventory automatically from terraform via GitHub actions?": {
        "title": "How to create and update ansible inventory automatically from terraform via GitHub actions?",
        "score": 1,
        "url": "https://www.reddit.com/r/devops/comments/1dlu5f3/how_to_create_and_update_ansible_inventory/",
        "content": "I run the terraform to create the AWS infra and store the tfstate in tf cloud via GitHub actions workflow.I need to list automatically all my AWS ec2 instances public IP addresses as an inventory file to run ansible.I don't sure I articulate it well,if any confusion,let me know",
        "num_comments": 2,
        "comments": [
            "Just use an AWS dynamic inventory script, it'll be a lot more reliable and accurate.",
            "If you CI|CD with yourbTF deployment, you can use pre/post scripts/actions to update a CMDB to keep these meta data reconciled."
        ]
    }
}