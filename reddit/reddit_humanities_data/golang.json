{
    "New at Go? Start Here.": {
        "title": "New at Go? Start Here.",
        "score": 385,
        "url": "https://www.reddit.com/r/golang/comments/18ujt6g/new_at_go_start_here/",
        "content": "If you're new at Go and looking for projects, looking at how to learn, looking to start getting into web development, or looking for advice on switching when you're starting from a specific language, start with the replies in this thread.\n\nBe sure to use Reddit's ability to collapse questions and scan over the top-level questions before posting a new one.",
        "num_comments": 175,
        "comments": [
            "I'm just starting Go, what are good books or websites to learn about Go?",
            "I'm looking to get into web development, what frameworks should I use/are best/are most common?",
            "I'm looking for good projects to learn Go with, demonstrate in an interview that I know Go with, or generally use to convince people in an interview that they should hire me with?",
            "Coming from javascript, is there any open source project which i could contribute to learn?",
            "I'm coming from PHP, anything specific I should know about Go?",
            "I'm a beginner and looking for Go lang friends for work together and learn from each other.",
            "I have an opportunity at a new company that uses Go, and they don't require prior knowledge of the language. I'm an experienced backend software engineer. What resources would you recommend for learning your tech stack guys?",
            "Can Go compile code that will run on 8bit microprocessors? I'm thinking of AVR or PIC processors. I'd like to be able to use Go instead of something like Rust or C++ but I'm not sure what the situation is. If you can't use Go for 8bit devices I guess I'll just use C instead.",
            "I'm coming from Java, anything I should know about?",
            "What are some good codebases I can read to learn more about Go?"
        ]
    },
    "Who's Hiring? - June 2024": {
        "title": "Who's Hiring? - June 2024",
        "score": 36,
        "url": "https://www.reddit.com/r/golang/comments/1d75kti/whos_hiring_june_2024/",
        "content": "This post will be stickied at the top of  until the last week of June (more or less).\n\nPlease adhere to the following rules when posting:\n\n**Rules for individuals:**\n\n* Don't create top-level comments; those are for employers.\n* Feel free to reply to top-level comments with on-topic questions.\n* Meta-discussion should be reserved for the distinguished mod comment.\n\n**Rules for employers:**\n\n* To make a top-level comment you must be hiring directly, or a focused third party recruiter with **specific jobs with named companies** in hand. No recruiter fishing for contacts please.\n* The job must involve working with Go on a regular basis, even if not 100% of the time.\n* One top-level comment per employer. If you have multiple job openings, please consolidate their descriptions or mention them in replies to your own top-level comment.\n* Please base your comment on the following template:\n\n**COMPANY:** *\\[Company name; ideally link to your company's website or careers page.\\]*\n\n**TYPE:** *\\[Full time, part time, internship, contract, etc.\\]*\n\n**DESCRIPTION:** *\\[What does your team/company do, and what are you using Go for? How much experience are you seeking and what seniority levels are you hiring for? The more details the better.\\]*\n\n**LOCATION:** *\\[Where are your office or offices located? If your workplace language isn't English-speaking, please specify it.\\]*\n\n**ESTIMATED COMPENSATION:** *\\[Please attempt to provide at least a rough expectation of wages/salary.If you can't state a number for compensation, omit this field. Do not just say \"competitive\". Everyone says their compensation is \"competitive\".If you are listing several positions in the \"Description\" field above, then feel free to include this information inline above, and put \"See above\" in this field.If compensation is expected to be offset by other benefits, then please include that information here as well.\\]*\n\n**REMOTE:** *\\[Do you offer the option of working remotely? If so, do you require employees to live in certain areas or time zones?\\]*\n\n**VISA:** *\\[Does your company sponsor visas?\\]*\n\n**CONTACT:** *\\[How can someone get in touch with you?\\]*",
        "num_comments": 8,
        "comments": [
            "Dropped you an email with my resume.  \nu/Savram8",
            "Just applied to recruitment\u2019s email. Thanks!",
            "**COMPANY:**\u00a0*STERADIAN m\u00e9rn\u00f6kiroda (Native hungarian)*\n\n**TYPE:**\u00a0*Full time*\n\n**DESCRIPTION:**\u00a0*Medior/Senior for cloud and VPS backend development. For the team dynamics, Hungarian language is a MUST HAVE.*\n\n**LOCATION:**\u00a0*Budapest District 13.*\n\n**ESTIMATED COMPENSATION:**\u00a0*You can ask the top amount from the Hungarian salary guides.*\n\n**REMOTE:**\u00a0*It's hybrid, really flexible, but you need to come to Budapest in every week.*\n\n**VISA:**\u00a0*MasterCard, Maestro... IDK how it is related here...*\n\n**CONTACT:**\u00a0*Send me your CV and your desired salary in e-mail:* [*allas@steradian.hu*](mailto:allas@steradian.hu)",
            "Please post all comments that are not positions under this post.\n\n[Previous postings](https://www.reddit.com/r/golang/comments/1cgxxqt/whos_hiring/).",
            "**COMPANY:**\u00a0WunderGraph | Senior Golang Engineer EMEA | REMOTE | Full-Time\n\n**TYPE:**\u00a0*Full Time*\n\n**DESCRIPTION:**\u00a0\n\nWunderGraph (growing global customer base, 10K weekly downloads and growing)\n\nAPIs are the backbone of every modern organization. But building and maintaining APIs is hard, especially when you'd like to scale API development across multiple teams. The key to success is collaboration.\n\nOur mission is to take API collaboration to the next level. With Cosmo, we're give platform teams a solution to provide a self-service API Developer Platform to their teams. We believe that Open Source is the key ingredient to become the number one solution for API Development and Collaboration.\n\nThe project is completely open-source.\n\nYou will be an integral member of an expanding team at a VC-funded startup with a dynamic mission to innovate and transform the field of GraphQL Federation.\n\n# What you bring to the table\n\n* **At least 5 year**\u00a0of proven Golang development experience in a leading / ownership role (must have)\n* Self-starter with a clear sense of priorities - no hand-holding needed\n* You must be willing and able to work out solutions on your own. This requires you to dig into hard problems and stay on target until you have solved an issue in a robust way.\n* Experience in working with ASTs, AST transformations etc.\n* Experience in writing performant and low GC code in Golang, and knowledge of how to benchmark Go code\n* Experience with GraphQL, API Gateways, Proxies, and Networking in general is a plus\n* Experience with OpenAPI, SOAP, gRPC, GraphQL, Apollo Federation is a plus\n* Open-source contributions are a benefit, too\n* You are able to work and thrive in a fully remote environment\n* Excellent communicator (important for a remote team) in English \n\n**LOCATION:**\u00a0*Fully remote. Proficient in english communication* \n\n**ESTIMATED COMPENSATION:**\u00a0*$80,000 - $150,000*\n\n**REMOTE:**\u00a0*Fully Remote with home office budget provided by WunderGraph*\n\n**VISA:**\u00a0*No Visa Sponsorship* \n\n**CONTACT:**\u00a0Apply here:\u00a0[https://wundergraph.com/jobs#open-positions](https://wundergraph.com/jobs#open-positions)\n\nor email me directly at stefan \\[@\\] [wundergraph.com](http://wundergraph.com)",
            "**COMPANY:**\u00a0*ngrok (https://ngrok.com/)*\n\n**TYPE:**\u00a0*Full time*\n\n**DESCRIPTION:**\u00a0We are looking for a Senior or Staff Software Engineer for our Developer Growth team. We are looking for someone with strong Go experience (ngrok is mostly Go)\n\n*Sr. Software Engineer Job Description:* [*https://boards.greenhouse.io/ngrokinc/jobs/5196577004*](https://boards.greenhouse.io/ngrokinc/jobs/5196577004)\n\nStaff Software Engineer Job description: [https://boards.greenhouse.io/ngrokinc/jobs/5193291004](https://boards.greenhouse.io/ngrokinc/jobs/5193291004)\n\n**LOCATION:**\u00a0*S*F or NY\n\n**ESTIMATED COMPENSATION:**\u00a0\n\n*Senior Software Engineer:* Minimum salary of $160k to maximum $200k\n\n*Staff Software Engineer:* Minimum salary of $184k to maximum $230k\u00a0\n\n**REMOTE:**\u00a0*\\[Do you offer the option of working remotely? If so, do you require employees to live in certain areas or time zones?\\]*\n\n**VISA:**\u00a0*We do not sponsor at this time.*\n\n**CONTACT:**\u00a0*Please apply to our job descriptions*",
            "**COMPANY:**\u00a0Scalac [https://scalac.io/](https://scalac.io/)\n\n**TYPE:**\u00a0Full time\n\n**DESCRIPTION:**\u00a0\n\nJoin our team as an experienced Golang Developer and be a part of an innovative healthcare project!\n\nHelp enhance care and streamline data and task management for clinicians. You'll be working with a dynamic team based in the US, with a 4-hour overlap in the East Coast (EST) time zone. This role is set to last for at least six months, offering you the perfect blend of challenge and impact. \n\nAs a Golang Developer, you will be responsible for developing and maintaining high-quality software solutions. **Your daily duties will include:**\n\n* Writing scalable, robust, and efficient code in Golang.\n* Designing and implementing new features and functionalities.\n* Collaborating with cross-functional teams to define, design, and ship new features.\n* Maintaining and improving the performance of existing software.\n* Troubleshooting, debugging, and upgrading existing systems.\n* Ensuring the best possible performance, quality, and responsiveness of applications.\n* Participating in code reviews to maintain code quality and distribute knowledge.\n\n# Requirements\n\n* A minimum of 6 years of development experience.\n* At least 3 years of hands-on experience with Golang.\n* Strong experience with Postgres.\n* Proven ability to work remotely and manage time effectively.\n* Excellent problem-solving skills and attention to detail.\n* Ability to work in the East Coast (EST) time zone (4h overlap)\u00a0\n* Strong communication and collaboration skills.\n* Experience in the healthcare domain is a plus.\n\n**LOCATION:**\u00a0We have the HQ in Gda\u0144sk (Poland), but you can work remotely if you're able to work with a 4-hour overlap with the EST time zone, proficient in English as you'll be working with the team based in the US. \n\n**ESTIMATED COMPENSATION:**\u00a020 000 - 23 000 PLN net/month on B2B (or equivalent in USD/EUR)\n\n**REMOTE:**\u00a0Yes \n\n**VISA:**\u00a0No\n\n**CONTACT:**\u00a0Apply [here](https://scalac.io/careers/golang-developer/) if you're interested, or contact us on [recruitment@scalac.io](mailto:recruitment@scalac.io) if you've more questions."
        ]
    },
    "wfind and wgrep: find and grep on web pages recursively": {
        "title": "wfind and wgrep: find and grep on web pages recursively",
        "score": 5,
        "url": "https://www.reddit.com/r/golang/comments/1draagf/wfind_and_wgrep_find_and_grep_on_web_pages/",
        "content": "Hi all, I just wanted to share two simple CLI tools to search for specific web locations and find text matches recursively, from a specified URL.\n\nThe idea basically is to be able to recursively grep and find on web sites **similarly** to we\u2019re able to do with filesystems.\n\nBoth projects are available on Github:\n- maxgio92/wfind\n- maxgio92/wgrep\n\nAs of the current support, the assumption is that the hierarchy links are expressed as hypertext links, from the seed URL specified across the hierarchy.\n\nAny feedback, suggestion, contribution is more than welcome :-)",
        "num_comments": 0,
        "comments": []
    },
    "Abusing Go's Template Engine As SQL Builder and ORM": {
        "title": "Abusing Go's Template Engine As SQL Builder and ORM",
        "score": 6,
        "url": "https://www.reddit.com/r/golang/comments/1dr8qyi/abusing_gos_template_engine_as_sql_builder_and_orm/",
        "content": "[https://github.com/wroge/sqlt](https://github.com/wroge/sqlt)\n\nPoC that you can use Go's template engine as a versatile SQL builder with ORM capabilities.\n\nI would like to know what you have to say about this and whether I should make a real library out of this idea or its just silly.\n\nPlease take a look at the code to understand the concepts :)\n\n    query := t.New(\"query\").MustParse(`\n        SELECT \n            id, {{ Int64 Dest.ID }}\n            title, {{ String Dest.Title }}\n            created_at {{ Time Dest.CreatedAt }}\n        FROM books \n        WHERE instr(title, {{ .Search }}) > 0\n    `)\n    \n    books, err := sqlt.QueryAll[Book](ctx, db, query, map[string]any{\n        \"Search\": \"Bitcoin\",\n    })",
        "num_comments": 7,
        "comments": [
            "been waiting for this pattern to make into go. i do a lot of this with javascript string literals",
            "The \"Dest.ID\" syntax is interesting. I'd be tempted to remove that and instead have it look on the target struct (with struct tags or just field names). That would keep things DRY between queries but less flexible.",
            "It's kinda type-safe, fast and you can do practically anything with it. The more I think about it, the better I like the idea.",
            "Yes, the statements should be created upfront (like we do with normal templates).  \nAll injected values are replaced with a placeholder. So the problem does not exist or is no worse here than with any other approach.",
            "Ah, I hadn't appreciated the nuance of inline typing functions (`Int64` et al).  That's neat, apologies.\n\nFor other peoples' reference: https://github.com/wroge/sqlt/blob/ccba1a1b3648ad04eb4cee93384696ba6bb0f623/sqlt.go#L184",
            "The concept is not immediately obvious. A stub (\"Dest\") is used for mapping the output type, which is then replaced in the QueryAll function. The scanners (\"Int64\", \"String\") are also collected in the process.  \n  \n[https://github.com/wroge/sqlt/blob/ccba1a1b3648ad04eb4cee93384696ba6bb0f623/sqlt.go#L69](https://github.com/wroge/sqlt/blob/ccba1a1b3648ad04eb4cee93384696ba6bb0f623/sqlt.go#L69)",
            "I like this pattern from the clarity point of view as I find templates easier to read than `Sprintf` style or lots of string appends.\n\nHowever it is imperative that you escape your injected variables correctly for SQL.  Imagine the following:\n\n```\nDest.Title = \"created_at FROM books; DROP TABLE books;\"\n```\n\nWhenever crafting SQL programmatically always spare a moment to remember Bobby Tables' mum: https://xkcd.com/327/\n\n\nPS for performance reasons it's often a good idea to parse these templates upfront with `MustParse` rather than on each invocation."
        ]
    },
    "Wrote a toy tic-tac-toe tui in GoLang, Sharing it here.": {
        "title": "Wrote a toy tic-tac-toe tui in GoLang, Sharing it here.",
        "score": 3,
        "url": "https://github.com/ditpoo/tictactoe-tui",
        "content": "",
        "num_comments": 1,
        "comments": [
            "Wrote it for practice, so that's why its not a simple one file implementation, created a decoupled version so it can be easily extended, with other variants etc"
        ]
    }
}