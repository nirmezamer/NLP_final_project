{
    "BEGINNER MEGATHREAD - How to get started? Which engine to pick? How do I make a game like X? Best course/tutorial? Which PC/Laptop do I buy? [Feb 2024]": {
        "title": "BEGINNER MEGATHREAD - How to get started? Which engine to pick? How do I make a game like X? Best course/tutorial? Which PC/Laptop do I buy? [Feb 2024]",
        "score": 286,
        "url": "https://www.reddit.com/r/gamedev/comments/1agdesg/beginner_megathread_how_to_get_started_which/",
        "content": "Many thanks to everyone who contributes with help to those who ask questions here, it helps keep the subreddit tidy.\n\nHere are a few recent posts from the community as well for beginners to read:\n\n[A Beginner's Guide to Indie Development](https://www.reddit.com/r/gamedev/comments/1adji3r/a_beginners_guide_to_indie_development/)\n\n[How I got from 0 experience to landing a job in the industry in 3 years.](https://www.reddit.com/r/gamedev/comments/1adqik4/how_i_got_from_0_experience_to_landing_a_job_in/)\n\n[Here\u2019s a beginner's guide for my fellow Redditors struggling with game math](https://www.reddit.com/r/gamedev/comments/1ae8s03/heres_a_beginners_guide_for_my_fellow_redditors/)\n\n[A (not so) short laptop purchasing guide](https://www.reddit.com/r/gamedev/comments/17ykkmu/a_not_so_short_laptop_purchasing_guide/)\n\n[PCs for game development - a (not so short) guide :)](https://www.reddit.com/r/gamedev/comments/1cwttz8/pcs_for_game_development_a_not_so_short_guide/)\n\n\n\n\n\n&nbsp;\n\n###Beginner information:\n\nIf you haven't already please check out our guides and FAQs in the sidebar before posting, or use these links below:\n\n[Getting Started](https://www.reddit.com/r/gamedev/wiki/faq#wiki_getting_started)\n\n[Engine FAQ](https://www.reddit.com/r/gamedev/wiki/engine_faq)\n\n[Wiki](https://www.reddit.com/r/gamedev/wiki/index)\n\n[General FAQ](https://www.reddit.com/r/gamedev/wiki/faq)\n\nIf these don't have what you are looking for then post your questions below, make sure to be clear and descriptive so that you can get the help you need. Remember to follow the subreddit rules with your post, this is not a place to find others to work or collaborate with use r/inat and r/gamedevclassifieds for that purpose, and if you have other needs that go against our rules check out the rest of the subreddits in our sidebar.\n\n&nbsp;\n\n[Previous Beginner Megathread](https://www.reddit.com/r/gamedev/comments/18ycuf1/beginner_megathread_how_to_get_started_which/)",
        "num_comments": 1025,
        "comments": [
            "I feel like this link should be included in any beginner guide: https://develop.games/",
            "Recommended starting point for someone with ADHD? All this research has only succeeded in overwhelming me and stressing me out:\n\nI've always been interested in game development ever since I was a child. I'm 39. I'm educated in linguistics and psychology. I am able to learn things. I grew up playing video games, and have been tinkering with computers beginning with my parents' old windows 3.1 computer. I don't know how to code, but I generally know my way around a computer. I've played with Doom mods/level editors, rom hacking for sprite editing or fan translating. I feel like I could learn coding and be good at it, but jumping straight into learning coding is just too much, too boring, and fails to keep my attention. On and off over the last few years I've tried online courses for game development and coding (C++, unreal, etc...), but I feel like that's all a number of steps past where I should be; I'll start, do a few lessons, feel like I'm not grasping it or making any progress, give up, go back later, then having to redo old lessons because too much time has passed I need to relearn the old lessons, repeat. When you have ADHD, anything that isn't actively interesting, rewarding, or attention-grabbing is nearly impossible to stay focused on without quickly getting unbearably stressed out, overwhelmed, and just giving up. If I am properly motivated and interested, I can learn ridiculously complex things, but without motivation and confidence, I am practically unable to even get started. I need to learn in increments: start with something easy that I *can* do, so I can build my confidence and interest and slowly learn new techniques as they become relevant. I want something simple, like a creation suite where all the programming, assets, etc,.. are all taken care of and I can just play around with and feel like I'm learning and achieving something to build my motivation and then slowly build my repertoire as I try different things.\n\nI know there are a lot of such creation tools, engines, suites, whatever, and I spent *soooo* long researching them, and the more I research them, the more paralyzed and overwhelmed I feel. There are *so* many, and having so many choices just makes my brain scream, ultimately making me unable to make any choice.\n\nAs I said, if I have the motivation and get that first spark to spur me on, I could do amazing things, but that first hurdle is the hardest (especially with ADHD). I need something simple and easy to start with that will build my motivation. What is a good program/engine/tool that someone with little to no experience could play with to build motivation and feel a concrete sense of learning or achievement?",
            "To get it out of the way: **What engine should I use?**\n\nThe answer is going to be:\n\n* Unreal, Unity or Godot if you want to do a 3d game\n* Godot or Unity if you want to do a 2d game\n* Ren'Py if you want to create a visual novel\n* RPGMaker if you want to create a 16bit-style JRPG\n* No engine if you want to make a game that is nothing but UI. Pick a programming language with a UI framework instead.\n\nIf you are not sure which one exactly, just google \"Godot vs. Unity\" or \"Godot vs. Unreal\" or \"Unreal vs. Unity\" and you will receive countless results of people debating this very question. Every argument one could make in this debate has already been made. We don't need to start yet another one.",
            "I would like to develop my own game engine, then eventually develop my own game(s) with said engine. The game I\u2019m most interested in eventually developing is an MMORPG. I have a few questions related to this that I could use some feedback on:\n\n1) I am trying to learn C++ and, while I can learn on my own, I\u2019d like to get additional help. Which degree would be the best to look into for the programming side? I was thinking computer science, but do you think there would be a better option? I\u2019m not looking into getting a job with a company, team, etc. This would be purely for myself. \n\n2) I\u2019m assuming that a desktop would be better than a laptop for this. What are some must haves, for a desktop, that you recommend me get for it/with it?; Whether hardware or software. \n\n3) I currently have a laptop that I plan on resetting for the sole purpose of using for developing on the go. What would you say would be the best storage for my projects so that I can access them from both computers?; Whether a cloud, external storage, etc?\n\n4) Besides the obvious time, money, scale of project, stupidity of my ambitions.. are there any other considerations I should keep in mind? Any recommendations that may make it easier for me?\n\nI greatly, and sincerely, appreciate any and all advice you are willing to give.",
            "Are there any resources where people breakdown games and show how they worked? Even if it's just nes games at an abstract level or something.",
            "What would be a good starting point and engine for a turn based game like Civ?",
            "so i wanna get into game dev I've started learning godot and I'm quite liking it, but my question is should I learn engine or framework or libraries? which one would be good for a resume or something like that. if I want to like get a job in this field or like work for a company should I be learning engine or frameworks? also another question how should i be learning godot? should i learn the Godot script or c# or cpp?",
            "As a hobbyist gamer ( not like the quit my dayjob kinda guy but keep my dayjob and work on this as a side project), I read a Light novel recently that had a pretty cool game concept so trying it out for a initial game.\n\nThe game: \n\n1) it's a basic mecha brawler / fighter kinda game. Where u just have to reduce the other mecha health to zero. But mechs might need to be customized based on the environment cause they operate differently on land / water.\n\n2) movement & combat style : each mech should be capable of 360 movement and fight mobile rather than like a tower defense game. Thinking of using 2D maps cause they seem easier to model and handle than 3D ones( for a newbie atleast , am I wrong? Or 3D ones are more easier to handle )\n\nSo was looking for tools which can help here. I don't want player to feel like they are playing on 2D maps but similar to 2.5D with depth like Gen 4/5 Pokemon games so what concept can I use here? Elevated Shadows / something like 2.5D kinda one ( is it even possible to do this on a 2D map ? ) \n\nTLDR : [ If anyone is afraid to answer the question due to the thought that I am asking a controversial topic and might start a debate , don't worry I AM GENUINELY ASKING FOR A CLARITY ON THE SUBJECT NOT TRYING TO START A DEBATE WHICH I DONT HAVE TIME / PATIENCE TO ADDRESS OR CLARIFY MY INTENTIONS and ONLY ASKING HERE CAUSE PPL HERE SEEM TO BE MORE EXPERIENCED OR SOMETHING IN THIS FIELD COMPARED TO ME ] \n\nOn a basic note :  I have some experience in C++/ python programming not from a game dev POV but from web app dev POV so understand things technically but not so much on modelling / animation / level design side of things & not looking to develop my own game engine ( for now atleast till I get some familiarity with game development ).\n\nQuestions:\nQ1: So is unity a good choice for this? I heard Unity removed certain plugin's & services no?  Is it still good for stuff like this? Cause unity was first choice based on how optimised it is for small assets.\n\nQ2: What about unreal , how is it good with these kind of maps? Since unreal works best with large assets and mostly optimised for PC.\n\nQ3: Is it possible to use blender to create map & char models and port them later into either unity / unreal engine later for animations?\n\nNot sure on GODOT , just heard about it a while back will need to look into it but if any of u guys have experience with it , mind giving some pointers?",
            "Any tips for starting from a blank canvas so to speak? I've followed tutorial projects, but they tell you exactly what to do. Now that I'm looking to start my own game, the \"blank canvas\" effect has me stuck where I don't even know where to start.\n\n  \nI'm assuming this is the initial high entry point learning curve and over time that initial barrier will lower and I can prototype ideas quickly like I see folks do on YouTube, in game jams, etc. But for now, I'm really stuck. Any tips?",
            "This is a super cool idea honestly.",
            "Awesome! Thanks for the info always great to see the community pitching in and helping those new to the industry! Anyone else who is new, please remember to read, rinse and repeat everytime, all the time. Something I have learned over the last year. \n\nAs far as skills, I've taken the time (Approx a Year) to learn Zbrush which is absolutley amazing, Unity ( Course via Udemy), Drawing and Writing. Since then I am now working on Unreal, still drawing as much as I can and more story/writing work. Even though I may only have 30min-1hr a day ( while working) it's still time that put toward my project.  Downloading apps and working from your phone will help ( solo learn ) helps a ton too! \n\nDo NOT stress, be patient and it will come and eventually put itself together. Listen to podcasts for motivation and positivity and best of luck out there!! \n\nCG101",
            "Skill Practice Block\n\nI\u2019m having trouble, I want to practice and get further but I\u2019ve seemed to come to a block of sorts. I want to get into Game Dev. I\u2019m a current programming student about to graduate with my Associate\u2019s. I\u2019ve been using Unreal Engine for about two months now for various things from blueprint programming to VFX design, I\u2019ve bought and taken a few courses on Udemy regarding Unreal and VFX artistry. I\u2019m wondering, I\u2019m fairly interested in potential being a VFX artist but can\u2019t seem to find materials to create what I\u2019m envisioning, which is a major drawback for me. All of this leads up to my point which is, how would I go about creating my own shapes, patterns, materials, etc to use in Unreal to further my pursuits!\n\nEdit: Also, what would be some good practice to further hone my skills?",
            "Hey, I (C# Backend Software Dev) am planning a small game project mostly for fun and the learning experience, but open for anything more, with a friend who studied webdesign/digital design. the plan is a tamagochi like game with interesting game elements. The plan is for both of us to get into the respective other side design/coding. what is a smart choice language/engine wise?",
            "I am completelly new to programming. i had c# in school for 5 years but wasnt that good. but i want to get started in programming a game. should i choose unity? i want to publish it sometime i think. i once programmed a little space invaders on unity but i dont know if this is the best engine to make a game. can someone help pls.",
            "I've been interested in learning programming, but the issue is that my skill level is around \"still thinks computers are run by tiny gnome wizards\" \n\nDo you have any tutorials that will explain how to start programming, for someone who doesn't even know what a compiler or whatever all that other stuff is?\n\nI have seen [https://www.udemy.com/course/unrealcourse/](https://www.udemy.com/course/unrealcourse/) being suggested on a different subreddit, is this something that can teach me from step 0?",
            "If the intention is to make something that is model/sprite wise similar to trine, but with the camera completely locked off. Is it correct to just make a 3d game and just lock off the rotation and 3rd axis of the models,  or is there some 2.5d technique/jargon that is a good idea to go learn? Have never worked with models or sprites before.",
            "Hi, I'm new around here(new to Reddit too) and I could really use some advice on game development. I've been working as a Software Engineer for about 4 years and 3 months now, doing the typical 9-5 job. I've had this story bouncing around in my head for a good while now, maybe about 2 years or so, and I'm super keen to turn it into a game about an adventure in the spirit world. Problem is, I'm bad at drawing, writing dialogs/monologues which seems pretty crucial for game dev. \n\nAlso, I've been making music since high school and I'm pretty decent at coding too (I used to be a .NET developer). Since I already have a day job, I'm thinking of going the solo game dev route, having something to work on in my spare time while I'm still single.\n\nSo, should I learn to draw and paint first? Also, any tools you'd recommend for a newbie like me diving into game development(dialog writing, level design, or course)? \n\nI've already picked Unity as my main game engine since it uses C#, which I'm already familiar with.\n\nSorry if my English isn't perfect, it's not my native language, but I'm working on it. Thanks a bunch!\n\nP.S:  I've already poured all my ideas into my notepad, including some rough, ugly sketches, AI generated level designs, character concepts, level names, and a few gameplay mechanics.",
            "Hi! I'm wanting to get into developing games, I'm about 2 years into programming via taking introductory courses in programming through a local State college. I have some basic knowledge and am familiar with VSC  but despite being nearly one semester away from achieving my associates I still feel like I know very little about programming. I've seen lots of YouTube videos about game jams recently and I was thinking that that might be a cool way to get some actual programming experience and think that I want to give it a shot with a team. \nMy questions regarding game jams are:\n\nAre there any game jams that commonly team less experienced people with developers that know what they're doing?\n\nWhat's the culture like? If I were to just sign up for a team game jam and get put in with the team and I immediately going to get slammed for not knowing anything? Or is it generally a more welcoming and helpful environment?\n\nAre there specific VSC extensions that I should know about that people who participate in game jams use?\n\nAnd lastly because I have very little knowledge what are some questions that I should be asking?\n\nAnyone reading through this and preparing to give an honest and genuine response I really appreciate it \ud83d\udc4d\n\nTL DR: new guy with little experience wants to know if he can just hop into a team game jam and not be bashed or if there are game jams that team less experienced people with people who know what they're doing. And other stuff.",
            "Current GameDev student, at a point where we are networking games in Unreal and learning the Server/NetMulticast systems in UE5.\n\nAs a fighting game fan, if it's somewhat easy to explain, what are the different steps you'd need to take along the networking process in order to implement rollback netcode?",
            "I've been on a kick trivializing seemingly complex productions and I am attempting this with game development. I'm using 30-day milestones to validate direction, feasibility, and if I should continue at all. I just completed the first 30-days and I have build structure and found productivity tooling. I'm setting out to prove that you can make an enjoyable game easier and quicker than you think. It's a KMP Kotlin Android and iOS app without any gaming libraries or framework and the goal is to publish to the play store in 90-days total.\n\n\n\n-What are some tools/resources to success others have found (even a tool that helps at .5% is hugely valuable)?\n\n-What are some mindsets to have when building something like this? \n\n-What are some tricks to keep concepts simple and feasible?\n\n-What are some great ways to get feedback from an early audience?",
            "Hi, I want to study the design of X-COM 2. Does anyone know how I can learn about the design and development of the game in detail? For example, I'd like to take a look at the code that was used, as well as to learn about the trials and tribulations of the development process. Thanks!",
            "Career change to Game Dev \n\nHello!\n\nI have a bachelors in something completely unrelated to Game Dev, and recently decided that I want to do a complete career change (because my degree is kinda useless and i hate it). I am 23 and already have about $10k in loans.\n\nWhat would be the best way to start a career in Game Dev, considering my situation? \n\nI need something online, since i\u2019ll be working part-time in order to\u2026 stay alive\u2026 while I do this, and I won\u2019t be able to move. \n\nWould it be better to look for an online bootcamp or an online college? I was looking at Oregon State Online CS degree (60 credit hours), but the total cost of $33660 scares me.",
            "Is it possible for 2 people to learn how to make a game in 3-4 months using Unity?\n\nMy friend and I have 0 experience in game development, but we do have some experience in Python and C++. Is it possible for us to learn enough C# and become good enough to make a game in less than 4 months? We're not actually planning on making and selling a game, we just want to become skilled enough to make a simple game from scratch (like Flappy Bird or Snake) without the help of a tutorial.",
            "[removed]",
            "How to start on \"Art\"? I can code and design ok-ish but my art skills are lacking, I tried using AI like \"Scenario\" and it's cool but I wanna know how to at least do the final touches like adding proper background and border.  \nshould I go for PS or GIMP or some other options?",
            "I\u2019m an artist and I have a concept in mind for a pixel based rpg (in the vein of Stardew Valley). I don\u2019t have coding experience, but am willing to learn. I could definitely create the graphics. I\u2019m just lacking the coding skills.\n\nLooking at Unity, but it seems more suited for 3D. Worth the effort to learn it for 2D games?",
            "I'm curious about the feasibility of running Python backend stuff in a gamedev context. I write scientific Python code for my day job, and want to leverage some of that for a game-like project. Specifically, I am working on some large-scale real-world terrain visualisation in Godot, but I'm getting to the point where I'd like to set up a pipeline to stream GIS type data from somewhere (not sure where yet, maybe some ArcGIS API, perhaps cloud). I can do all this with Python, which has great libraries for doing these sorts of things, but I'm a little unsure if it's going to work long-term. Basically I have no idea what issues await me with regard to deploying that kind of code on a gaming platform, whether it be via steam or on consoles or whatever. Is Python a bad idea in that regard? Possibly there are licensing issues also with regard to the open source library stack? Any advice most welcome! I also know C++ but I really don't want to be trying to mess around with streaming GIS data in C++...",
            "This is going to sound sacrilegious but is there a resource to learn / tutorial visual scripting languages? Do I just follow the ones available for Unity and Unreal on YouTube? I\u2019ve started preferring Godot as an engine but unfortunately it\u2019s the one that doesn\u2019t have a standardised visual scripting tool. I downloaded an add on but as a beginner I don\u2019t know heads or tails of what any of the nodes mean, and as it\u2019s a new add on there are no resources for it. How do people get off the ground here?",
            "How do I make a ship in unreal engine be controlled by the mouse like this? Everything I can find is only interested in WASD or search results just shows me something about top down\n\nhttps://youtu.be/i2aDzJCQYHI",
            "I just started making the background for my game. Is there any reason I shouldn't just paint the background instead of using tiles? I'm guessing there isn't any reason except if your game is large then tiles might make it easier and faster?",
            "\\[Reposting from the previous megathread\\] Is there an official name for the \"voices\" in a game that is not voice-acted, but for which there is a distinct character or narrator sound that appears in time with the text when it scrolls across a dialogue box? Think Undertale or a lot of RPGs like that.",
            "How do you find the balance between doing tutorials and making output for your work? There's a wide array of tutorials out there, all that cover various fields I need to know and want to master (Particles, shaders, rigging, modelling, animating, ect). But I get so overwhelmed by the amount I'd have to grind through, I find myself wanting to work without tutorials with what little I know (like tutorial burnout). But whenever I hit a barrier working on my own, I go back to committing to a tutorial series and this cycle rinses and repeats, with the sense that I haven't completed any of the tutorials I promised I would with little to no output for my games that I promised I would.\n\n  \nSo my question is, how do you find a healthy balance between just learning and making?",
            "I'm a beginner at coding, but I feel like I'm getting pretty good at it. I'm trying to make a fighting game and I was wondering what language and engine I should use. I was thinking C++ and Unreal Engine, but idk.",
            "Can anyone give me an insight?\n\nI wanted to create a game like the old JRPGs, or more similar to Sea of Stars, of course, I won't do it before learning a lot of things. But basically, I want to use it for educational purposes (I'm a physics professor).\n\nWhat engine could be more suitable for this? I know that sea of stars is made on Unity, but I tried to learn it for a couple of weeks and it's been a little disappointing for me.",
            "Any thoughts on good marketing avenues that you've seen results on? \n\nI struggle to get much reception from cold emailing, and any money I've spent on influencers or ads has not yielded any equivalent cost of sales. Has anyone tried tiktok ads for PC desktop/switch games?",
            "Heyo! Beginner game dev here, does anyone know what keywords I should be using to try to find a \"grabbing\" sound effect? Like, grabbing someone by the arm, shoulder or by like their sleeve. I've been trying to find a royalty free grab sound effect for what I'm working on, but I have no clue if I'm missing it or not cause I don't know what words to be searching for cause \"grab sound effect\" isn't working X'D",
            "I've been working on a game since just before the reddit protests. At this point I have movement, combat, and various AI down. But it's all just placeholder cubes on placeholder flat planes with some placeholder sound effects. There are no quests, no main story, no characters even written outside of scribbles on napkins. And I've come to the realization that I am absolutely not where I need to be artistically speaking to make what I want to make. So, people who have found themselves in my position, not just in the realm of game dev but in any artistic endeavour, what did you do to realize your vision?",
            "Just throwing out a very rough idea out there.\n\nIf I were to make a shootemup with gameplay similar to Vampire Survivor / HoloCure, what engine should I look into?\n\nGoogle said HoloCure was made by GameMaker studio. Can that engine handle potentially thousands of sprites + projectiles + effects + all moving objects in a single screen? \n\nOr would you say it's not a matter of engine but PC specs? That is, any engine can do a thousand-sprites-in-a-screen game but it depends if the PC playing it will melt or not.",
            "What game genres do you recommend I prototype in order to learn incrementally, be exposed to everything Unity has to offer and do it in a way where I don't have gaps in my knowledge\r  \n\r  \nWhen you provide me prototype examples, could you please explain what game dev concept this prototype will teach me and how the next prototype will incrementally build on the previous\r  \n\r  \nFor example:\r  \n\r  \nGame 1 = Simple FPS game where the player shoots targets. This will help me learn player movement and shooting\r  \n\r  \nGame 2 = FPS game where the enemy shoots back. This has all elements of the previous game but also introduces basic enemy AI\r  \n\r  \nGame 3 = Soccer game with one goalkeeper. This is a different genre to games 1 and 2, but it still uses player movement, enemy AI etc but with more physics required. This also introduces the idea of the player interacting with an independent object - which is the soccer ball\r  \n\r  \nGame 4 = Zombie shooter where the player can pick up different weapons. This introduces weapon classes, damage, spawning etc\r  \n\r  \nEtc\r  \n\r  \nI would love a list of prototypes from you all. Thank you!",
            "[deleted]",
            "Hey, recently started developing 2D game from this [tutorial](https://www.youtube.com/playlist?list=PL_QPQmz5C6WUF-pOQDsbsKbaBZqXj4qSq). I have lots of ideas and ambitions regarding that game, therefor it is mostly side project to learn Java and impress recruiters lol.  It was fun and i love the pace, but from perspective of Java Dev  it seams super messy. No OOP, no patterns, lots of repetitions. Through out my Java learning journey I was told to stick to these practices. So from one point i started refactoring, implementing patterns, optimising code. Now I stumbled upon some problems, that would be great to get advise about from fellow redditors.   \n**Map loading and storing**  \nCurrently approach is that i assign every tile to specific number, write a .txt table of with corresponding numbers and draw every tile one by one.  Are there better loading and storing technics to draw map?  \n**Java specifics**\n\n* I was trying to share current results with my friends and couldn't find best way to do so. My guess was to deploy game to .exe. Would it be runnable on devices without JVM installed? \n* What is the best way to handle resource loading? Currently i am using instantiating new File to load a resource(sprite, music). Is there any better way of doing so? \n\nThis and any advices on game development would be much appreciated.",
            "[deleted]",
            "I\u2019m trying to create a game on unreal but it\u2019s a bit difficult since my laptop isn\u2019t the best. I could probably buy a better computer to solve this issue, but I\u2019m wondering if the games that I make on unreal would also need a lot of processing power, and be unplayable for people with bad computers. Will this happen? Also, would this happen if I used unity instead? I just want to create a 3d game as similar to the fears to fathom games as possible (similar graphics and gameplay).\nI\u2019ve also heard that unreal is better because it has stuff like jumping and characters built in whereas with unity you need to code moving and jumping from scratch, so I was wondering what you guys thought about that.",
            "I'm thinking of starting gamedev as a hobby so i'm doing something that makes me feel productive since i can't work and i have been highly interested in developing a roguelike game and have a lot of ideas.  \nI found some resources online that i'm going through now but i figured i'd ask here also if anyone knows of any good tutorials that would be helpful for that genre of game :)",
            "Hi, I have an idea for a game mechanic and want to protoype it just to see how fun it is and if it has internal sense. Basically it involves moving from one point to another on a circular grid by sending a resource that's affected by conditions on the grid. In it's context it's more interesting, I hope. \n\nHow would you suggest I go about making this, what programme etc. I did some coding (C+++) and game dev when I was a teenage, nearly 20 years ago now \\*crumbles to dust\\* so I still remember the basics, but have no idea what would be right to use these days. \n\nThanks <3",
            "Hi folks! My name is Jeremy! I've been a professional software engineer for the past 10 years, and have always dabbled in game dev on the side. I'm burnt out on the corporate/enterprise software industry, and long-term would love to make game dev my career.  \nOpen to chatting with anyone who might have some insights or advice or just is in a similar situation. Feel free to DM me! Thanks!",
            "Hello Everyone,\n\nThank you for taking the time to create an incredible post like this. Sorry for the long post.\n\nI've been a lifelong gamer, and have always been interested in creating my own game.\n\nMy goal:\n\n* I want to create a *very* simple tile-based tactical game, with only one character going against a group of 3 enemies + 1 boss. For now, I only want it so you move your MC into an adjacent enemy tile and attack. Obviously when HP goes to 0 you lose, or the enemy dies.\n* I plan to make this in Unity 3D, so I don't need to deal with creating a bunch of sprites. I also want to make this isometric kind of like Final Fantasy Tactics. But if top-down is way easier, I'm fine with that, too.\n* However, even this \"very simple\" game requires a lot of planning, such as the tile system, AI pathfinding (I only read something about using A\\*, but haven't looked into it), HP states, etc.\n* Things like equipment, character levels, attributes, etc. are part of what I want, but for now, I think it's just going to be -10 HP dmg per attack, but the MC and the boss will have higher HP.\n* I don't care about art for now. I'm not an artist, and I want to make sure I can get the core functionality in first.\n* Same thing about audio: not a factor.\n\nThings I've been doing:\n\n1. Watching the free Harvard CS50 course (but it's a lot of info, and I don't know if everything applies).\n2. Going through the free Unity training course: [https://learn.unity.com/course/create-with-code](https://learn.unity.com/course/create-with-code) (It's very good IMO, but I think it's very simple, by design)\n3. Writing code in C#. For example, I am in the process of creating a console app that takes user input to populate a list (such as name, desc, quantity, price), and then giving the user options to view the list, edit the list, or export the list. I am asking ChatGPT for help along the way, though.\n4. Downloaded Blender and GIMP, but these are low priority things that I will spend time on after I've learned how to create the base game.\n\nMy questions:\n\n1. Am I going about this the right way? Should I just buy a book and focus on learning C# first?\n2. Is my first game way too ambitious? Any recommendations?\n3. What are some specific concepts I would need to know in order to make that tactical game?\n4. Anything else you want to comment on, please let me know!\n\nThis is going to stay a hobby. I'm not looking to replace my day job (which I enjoy).\n\nThank you for any advice.",
            "Should I use unity or unreal engine 5\n\nHi I want to make video games and I'm a beginner at it so I'm curious on which one to use because I love both of them. I've used unity for vrchat and chillout vr sometimes and I love the features of unreal engine 5.",
            "Are there more tutorials similar to the Cave Story Remake that go from scratch in a non-windows environment? Ideally sdl2",
            "Bit of a strange question here but here goes. I went to college in computer science with a programming focus, for a semester and then dropped out. I enjoyed programming but I couldnt stand being in school anymore. Now more than a decade later I realize that while I dont regret leaving school, I do regret not continuing to learn about programming on my own. Anyways this is just for a bit of backstory. Since then Ive gone through other personal learning projects like learning japanese completely on my own, which will culminate in me going to japan for a year in 1.5 years on a working holiday visa.\r  \n\r  \nWhat does any of this has to do with this subreddit? Well, The past few years I\u2019ve had in the back of my mind that I\u2019d like to restart learning to program, specifically to get into gamedev as a hobby. One of my favorite memories from that semester of college was having to program a copycat of Space Invader, it was so much fun trying to figure out how to take what I had learned and turn it into a game that I was then able to play, and add some extra options!\r  \n\r  \nAnd now that my japanese has gotten to a point where I can afford to spend less time on it, I have been thinking about it a lot more. My worry though is that if I do start now, well Ill be able to di it for a year and a half, and then have to stop for a whole year while I go to japan. So there\u2019s a part of me that thinks \u201cwell whats the point in starting now, it\u2019ll end up as wasted time as Ill forget a lot in that year! Might as well wait until after!\u201d.\r  \n\r  \nAs people who actually have experience in programming and gamedev: is this a warranted worry? Or is it completely unwarranted and itd be worth starting right now as chances are I want forget that much? Anyone have a similar experience of getting a year or two under your belt then stopping for a year?\r  \n\r  \nTL;DR Should I spend the next year and a half getting into game dev, knowing that after that I\u2019ll end up taking a year off from it (due to travelling to another country for a year)?",
            "hey y'all,\n\nLooking for resources aimed at someone with zero programming experience getting started with developing a simple dialogue-based RPG (think Citizen Sleeper). I'm planning to use Godot unless there's a good reason I should switch to something else. No designs on joining the game industry writ large - love my day job and not looking to switch careers - just want to make a game as a passion project.",
            "I apologize in advance if this isn't a suitable question. this is more of a question i had about general scope of a project i wanted to make. \n\nI LOVE stealth games, and even stealth mechanics /sections if done well, but what I'm seeing a lot of these days are those stealth aspects that lean heavily on detection meters. For me this makes absolutely no sense, and just feels lazy. I had a general idea of making a game that would be to metal gear 2: solid snake (The MSX2 game from 1990 not the PSX MGS of 1998) as   Undertale is to earthbound. when boiled down, the same core idea, but differing with modern  ideas, themes and quality of life improvements. for example instead of infiltrating a base as a heavily trained agent, you get lost and and shipwreck at a remote facility and lose track of  your friends as you try to find a way out. big themes of conspiracy and government overreach, as well as the idea of learning from nothing aided by risks of danger.\n\nthis is looking to be better suited to my dream game than something i should do as my first one, but besides wanting to know what some thoughts are on the idea, i also am wondering if   \n it would be a good idea to make a super simple project so that i get the idea down while also being a complete experience, and then eventually evolving it into the final product.",
            "[deleted]",
            "How to get started developing an online card game back end?\n\nI'm a web developer, so I know how to build web apps with backends and databases, etc. But for an online competitive card game, I assume there's solutions that allow synchronizing game states between players in an efficient manner.\n\nIs there any tutorials or technologies to look into for help developing an online card game backend?",
            "What is the best JS library for creating a scene with isometric tiles/tilemap? Including functions like selecting a tile, or seeing info about adjacent tiles etc. Thanks!",
            "Hey!\nI'm really interested in getting into sound design for video games. \nI've been a live sound engineer & designer for the past 7 years, plus two years as a studio technician.\nTechnically, I know how to design. I enjoy it a lot, I just need more practice in a video game context as live sound is waaayyy more minimal. \nI also have no experience with implementation. I can get it ou of the DAW to ship it off to someone, but no experience with fmod or anything like that.\nHow can I get started? Is there a community of indie devs or amateurs looking for designers that I could hop in with to do it on a part time/volunteer basis?",
            "Hi everyone! Looking for some advice from devs who have worked in the Industry, or have a lot of experience. I\u2019ve always wanted to develop 2d games, but I don\u2019t really know where to start. From all the research I\u2019ve done, it seems like Unity and Godot are 2 really good engines to start with, but I\u2019m torn between the 2. It seems like Godot is simpler than Unity, but I\u2019m worried about spending all my time learning it when eventually I\u2019d need to switch to Unity in the future if I ever wanted to work for other developers. I\u2019m not opposed to eventually learning both, I just don\u2019t know which I should start with. Should I start learning with Godot? Or should I start learning with Unity to \u201cfuture proof\u201d in a sense?",
            "Is w3school good for learning c#? I\u2019m tryna learn unity and I was wondering if this is a good place to start",
            "Ok, let me preface this with: PLEASE don't laugh at me. \n\n  \nI'm an author, but for this one story, the novel format isn't doing it justice. I believe video games are the next big storytelling medium (and the best one so far) so I want to make it into a video game. Basically Assassin's Creed's mechanics meets a Detroit-style plotline. Literally every tiny decision you make affects the overall story, and anyone can live or die. \n\nBuuuuut I suck at coding. I've been using Articy to diagram the plot, but since moving I'll have to get a new program and start over (unless I can make it work on a mac), and I've been messing around with Unreal but I can't get used to the camera/moving system so I'm still stuck on moving shapes around. I'm not totally software-inept, I'm a graphic designer by trade, but this is killing me. And there's SO MUCH left to learn and do. I don't think one person really CAN do it all. \n\nI tried RPG maker but I couldn't make it work properly, the characters kept getting stuck, I still don't know what went wrong. But it's expensive so I want to be sure I can't do anything else before I buy it. \n\nI just want a way to make a game like Assassin's Creed Brotherhood: One city containing the entire plot, free exploration inside it, guards and swords, et cetera. But with the ability to talk to people and make decisions and such. The graphics can be N64 level, I do not care. I just want a medium to tell the story. \n\nCan anyone give me some tips? Point me in the right direction? Help me find a team since I obviously can't do all this on my own?",
            "Greetings! I've been subbed for years now, but mostly just lurk. Well, I have an idea for a game now, and I'm looking for suggestions.\n\nTo give some context on my experience. I built a 2d infinite runner game, prototyped a (very very simple) 3d third person shooter, and not much else. So, still very much a noob w/ games. That said, I've been writing software for about 15 years, and my day job involves writing Javascript, Go, and a touch of PHP. Also, I do VST plugin development on the side with C++, so I'm quite comfortable with the language. Especially, the modern variants (C++11 and on).\n\nI used to do graphics programming for fun. So, generating 3d models from math formulas, and writing shaders (GLSL) to do all the fun stuff. That's how I made my way over here, actually.\n\nMy main question revolves around which engine to use. My rough idea for the look & feel of the game is something like Tunic. So, 3D graphics, but relatively simple. No need for anything remotely close to realistic. So far, I've considered what seems to be the most popular engines, but I'm not entirely convinced which to use. My thoughts:\n\n- Unity: Honestly, I would just pick this. It's what I used previously. But, considering the debacle around pricing, and the subsequent uproar from devs, I'm quite hesitant to choose it. Maybe that's unfounded?\n\n- Unreal Engine: Very nice, it's in C++, but seems like complete overkill for the low'ish poly game I'm going for.\n\n- Godot: Seems like the logical choice after Unity. But, my main sticking point is the custom language. One, I really hate the idea of investing a lot of time into learning a language that has zero other use cases. Two, I despise dynamically typed languages. Especially with larger projects. I curse Javascript's lack of typing system on a daily basis.\n\nAre there some simpler C++ / C# / [any statically typed language] engines that I'm missing? I realize that Godot has some C++ / C# interop, but it still seems like using their language is the way to use the engine.\n\n---\n\nAlso, I'm running a Mac. I have a Macbook Pro with an M1Max and 64GB of RAM. I know, I know. Windows is the platform for game development. And laptops suck. But, my other machines are a Mac Mini i7 (which is slower) and a 12 year old gaming PC that not suitable to develop with.\n\nI welcome any advice!",
            "I\u2019d really like to be able to make an indie game sometime, but I feel like I lack experience with most of the major aspects of game development. I can\u2019t code, my 3D modeling is restricted to inanimate objects and structures (and even then it\u2019s not the best), and I severely dislike texturing anything beyond simple objects. My expertise is more in the story, worldbuilding, lore, art, etc. Is it even possible for me to lead a small dev team like that though?\n\nI actually have a bachelors in game design. However, my role in the groups where we made some of our final projects was very small. My groups also kinda bullshit our assignments so quite frankly they were horrible, but somehow I still passed. Needless to say, I don\u2019t have any portfolio work that I can show off and be proud of.\n\nI\u2019m afraid that due to my lack of experience in those other areas of development, I would always feel like if I were managing a dev team, they\u2019d look at me and be like \u201cwhat exactly is this guy doing?\u201d I wouldn\u2019t exactly be able to help them out, at least probably not enough. I\u2019m not sure anyone would want to even begin working with me because of all of this. \n\nI just feel like I would have not enough of a role and as such little authority as a team lead. I feel like I would be seen as easily replaceable by the others. But surely there\u2019s more to it than that, right? Like directing, any PR, marketing, etc.",
            "What tech would you suggest to create a multiplayer game? My idea would be something 1v1, where each player control some (around 10, maybe) units (like in an RTS, as SC2 or Age of Empires, but not that massive).   \n  \nI would like to be able to play with a friend online. I'm pretty comfortable with Godot so I would like to use it, but totally open to any stack for multiplayer, and I dont have any exp with multiplayer games.   \n  \nFor context, I'm fullstack web developer for a while now though, so I can learn new stuff",
            "Um so I've been wanting to make a game for months but I've been struggling. I've been very busy at my Highschool, and before 2024 I tried to learn blender, and got a bit good at it before I wanted to make a Roblox game. I tried to learn Lua (the Roblox coding language) but it was pretty difficult for me, and eventually I quit roblox cus I realized the platform is probably cooked lmao and they take like 70% of your profit. Anyways recently I have no idea what to pick up or if I even want to do game dev. So I have a few questions:\n\n1.) Is Unity worth picking up?  \n2.) How do you know if you actually like coding? Like I said above, I tried Lua and I got frustrated several times so idk if that means anything.  \n3.) Is it possible to make a game even if you only know 3d modeling. I tried 3d modeling before and I had a bit of fun with it, but idk if it will really help me in game development\n\nThis isn't really urgent and I can get by without these questions answered but I would still appreciate any and all guidance",
            "I've been learning unity and c# for 2 years now but due to schoolwork i've had to relearn/go back/take breaks/relearn again and the viscious cycle always repeats due to me not having enough time as a student\n\nI've been learning python for a class at school and I remember when my proficiency at c# was better than at python but due to how inconsistent I am with c#, I am now better at python due to the fact I practice it more regularly. \n\nEver since I lost my project from my old laptop getting a virus, I haven't touched unity and c#. It's been months and when i tried writing a simple program in c# i basically forgot most of the syntax and was confusing the rules with python rules. \n\nSince I want to be a game dev when I graduate, I want to learn and actually practice those skills so I'm kind of wondering.. Should I switch to a game engine that uses python just so I can actually practice game dev skills? I know there's certain skills that are important regardless of programming language or game engine so maybe if I switch to something that uses python I can both practice python and make some games which would increase my experience. A little is better than nothing kind of situation.\n\nOf course, when I have the time to actually consistently use c# and unity, I definitely want to relearn it and actually use it for good. But if in my current situation, if using a game engine for python helps me practice other game dev skills, should I switch?\n\nPlus I want to make visual novels and I heard there's good game engines specialized for that using python so it might just help. \n\nShould I do it or just keep using unity and c# inconsistently?",
            "My best friend lives in California, I live in New Jersey - we do not have a premium cloud service - is there any way we can colab on an unreal engine game?",
            "howdy all, I'm trying to make an indie style horror game with a 3d map but 2d characters. I am a beginner but not new to the coding side of things. I also know some (but not too much) of blender. What engine do you suggest I use?",
            "For the laptop/pc thing, whether its a laptop or a pc is not super relevant. The stats are what are important. You'll need a decent processor (Ryzen 8/Intel i7) and GPU (3060ti is what I have) if you want to have a low-lag workflow. These kinds of specs are easily found on Microcenter and Newegg for roughly $1200.",
            "I'm interested in making an escape room style game reminiscent to [Crimson Room](https://www.youtube.com/watch?v=K9M9kP4Dshs) way back in the day. But I don't want my game to be a flash game played on the web. I like the idea of releasing it on Steam, so I'm assuming it would be in the Unreal or Unity engine?\n\nI want to have it click based a lot like The Crimson Room but I really enjoy the  somewhat 2D/3D blend of animation style. I also like the fixed camera viewpoint, you can't move freely around like most games.\n\nI'm a 3rd year CS student with experience in C/C++, OOP, DSA, and a bit of Python and Assembly. I've also taken a few calculus and linear algebra courses. So I think I'm proficient enough to handle the project.\n\nI also make quite a bit of ambient music with a bunch of synthesizers so I want to incorporate a lot different custom sounds and background music to the game.\n\nAny suggestions where I should start? Should I just choose a game engine and start creating a 3D room and 3D drawers and tables and placing object inside them? And start making them clickable and create an inventory?",
            "Hi, huge gamedev noob here. I've always wondered: how do people create graphics? Is it all created in some software with a cursor? If so, how do they pull the nuances and intricacies off without using their hands? Or do they use a graphics tablet? But, then again, afaik, hand-drawn graphics/art aren't really the norm for large-scale projects? Is it a mixture of both: i.e., hand-drawn concept art, with cursor-backed final graphics? Can someone create graphics without any hand-drawn input at all? Could someone provide an ELI5?",
            "Hey everyone, this is directed to people with either knowledge of experience in dev. I am proficient in digital design and music, but have no development/little bit of coding experience. I have a few ideas for a game, but I struggle to settle on style/engine for the game. After some research I settled on a few options: RPGmaker (think Fear&Hunger as inspiration), Gamemaker (Undertale) or Unity (If I go this way, it would be something similar to Chants of Senaar in style, or Sable/Rollerdrome).  \nIt's semi solo project, with some help from friends here and there, but vast majority is myself.\n\nSo I have 2 questions.\n\n1. Which software would be more \"user friendly\" for someone who doesn't have a lot of coding expertise?\n2. I'd like for this project to not be extremely complex (since it's a solo effort, I don't want to enter a task that will take me 37 years to finish. I understand I won't be making a baldur's gate here, so I wondered which projects (in terms of style, a.k.a 2-d scroller or 3-d unity based game) would more likely be less time consuming and more realistic to accomplish by myself?\n\nThank you everyone and I really appreciate all the help! Take it EZ everyone!",
            "Hi All!\n\nFirst post here, I'm hoping to get some experienced people's opinions. I've read a couple dozen articles and watched another couple dozen comparison videos.\n\nI'm torn between Unity and Unreal (I know, I know, this question again). I've tried both, ran though some tutorials, built a level, added character controls, etc. Unity is super easy to use, but Unreal just looks so damn good out of the box!\n\nRight now, my team is my wife and myself. She will be handling the 3d modeling, artwork & landscaping, and I'll be handling the development. I've been working with C# for my \"day jobs\" for about 12 years now so I know it very well.\n\nThe game will be a survival/crafting game, first/third person, in 3D, with realistic graphics. I also eventually want to add coop/multiplayer.\n\nIn my mind, here are the pros of using Unity:\n\n* C# will make it faster and easier for me to implement all of the different game systems, instead of having to learn blueprints from scratch (sooooo many nodes!)\n* The editor is simpler, more straightforward, and more lightweight than UE5.\n* The asset store is HUGE\n* The sheer amount of information online\n\nBut then again, here's why I think UE5 might be a good idea:\n\n* Graphics are amazing out of the box\n* From what I can see, UE5 editor has way more tools than Unity (mesh editor, animation, widget editor, etc)\n* Creating master materials and exposing properties to instances is really awesome, and also super easy\n* I find blueprints a bit clunky, but my wife could pick it up pretty quickly to help me out vs learning C#\n\nI'm leaning towards Unity, especially after seeing a couple of videos showing realistic graphics that look almost as good as UE5.\n\nTaking into account that we both have full time jobs and will be dedicating our nights and weekends to this project, what do you think would be the wise choice here?\n\nAny input is very much appreciated!",
            "Hi. My name is Josh, but my artist name is C\u00d8L (pronounced \"coal\"). I am a musician and I have a massive love for videogames and music. I am in the proccess of learning some coding languages and I want to get into sound design/OST work for game developers. I've been working on making various genres of music for a while, and my music project is focused on the topic of mental health.\n\nI really want to incorporate this concept into videogames. I am a huge advocate for mental health awareness, as I struggle with various mental illnesses. I love the idea of using music as a way to express these ideas, especially in videogames. I guess my question is, what is required to do this? Is learning code absolutely necessary, and if so, what code should I be learning? I'm learning C++ as of right now and really enjoying it.\n\nI'm sorry if this question isn't exactly for this subreddit. I'm unsure where to post it. Thanks!",
            "Question for Australian Devs, I only just had this thought come across my mind recently, do I need to get an ABN since I do plan on publishing on platforms such as Steam, also I've documented all my \"business\" purchases in relation to making a game how would I get to claiming those as business expenses. Thanks",
            "Hello! So I kinda have prior programming experience but that was 5 years ago in several high school classes, and I want to make a pretty simple yet fun Anti-gatcha turn-based game following in the footsteps of games like summoners war/Honkai star rail with rougelike elements. The entire premise sorta being to give players that satisfaction of being able to \"pull\", for their units and build them up with runes/relics or what have you WITHOUT needing to swipe or mindlessly grind for the currency to pull. Instead I am figuring each run you go through would give you the currency for a ten pull and runes and relics would be significantly easier to build with instead of stat rolls it would be stat allocation. Also this game would revolve entirely around collecting various slimes, both as a way to make designing the game/characters easier for me and to help because I adore slimes.\n\nSo here are my things...\n\nI don't know exactly where to start learning to code again that would be... Engaging to learn. I have ADHD and projects tend to be hard to focus on learning if it isn't fun, but I do recall the classes I took in highschool using some type of online program that was pretty fun and engaging to learn, so I'm wondering if anyone has any ideas or things to point me in the right direction.\n\nI have no idea what type of game engine to utilize. The general plans for my game is a sort of... 2.5d (think like forager type of deal I suppose) that would need to calculate damage, be able to store information about the slimes, their relics, merge count (sorta like eidolons from Honkai) and be able to help play out combat in a sense. I also want to have a sort of Slime garden type of deal where you can interact with and learn a little bit about the slimes you own and pet them, but that is secondary to the game but something I'd wanna implement down the line. I don't. Finally the engine would likely need to be able to generate random runs so that they can use the slimes in order to fight, I'm taking inspiration from like, slay the spire when it comes to how combat might work, just in a 4 V X format with skills, abilities and ultimates. I don't wanna use unity cause I know that whole debacle kinda flopped, I was looking at GameMaker with opera GX but I also don't know about that, so I'm generally lost\n\nI have a ton of ideas, but I know I gotta hold off on them until I figure out all the coding it would take to make this game and drawing all of the slimes as well (I'm gonna be doing that myself which is gonna be both fun and time consuming but I think this is worth pursuing both for me and for others.)\n\nAs much information as humanly possible would be great! I just need a whole lot of guidance.",
            "How do you handle 3D Character Creation / Animation?\n\nI have been learning gamedev, primarily Blender and Unity. Before I started learning these tools, I paid 3D Artists to create and rig my characters. It was between $300 - $500 per character .. but the characters I received were nowhere near the quality I was looking for and essentially, I wasted alot of money because I want / need to rebuild all of them to better quality.\n\nFor the game in question, it will be Anime Toon-Shaded ...\n\nI was told by someone that it would be wiser to download characters off of the Unity Asset Store and just modify them to how I want them to look like instead of paying someone to build the models from scratch. Of course, starting off from the Unity Asset store is a low upfront cost but the models do not align with what my characters look like, and I would still need to modify them to get them close, or precise.\n\nI am using character ref sheets in T-Pose and Side View to have my characters modeled, but I guess I am trying to figure out what is the best way to approach character creation? Modifying Pre-Built Assets? or Build the character from scratch?\n\nLikewise when it comes to animation, do you use Unity Store Assets or do you craft every specific animation?",
            "Hello  \nI was reading the \"The Engine FAQ\" part and noticed that the Open Source 2.5D ORX game engine was not in the list. How, or who to contact, to add it to the list, with its missing information please?\n\nThx very much.",
            "Struggling to start \n\nI haven\u2019t developed any games in the past but know my way around pixel art and I want to create an \u2018every pixel simulated\u2019 game, very similar to the game known as \u2018Noita\u2019 by Nola games. \n\nWhat I\u2019m asking is where do I start? I\u2019m not too sure what engine to use and how to even code(ik ik). Does anybody know any tutorials that can be applied to GODOT? \n\nI\u2019m currently trying to learn GODOT but I\u2019m massively stuck on what my next step should be or how to even learn it haha, any help is very much appreciated. :D",
            "Hello, i commented a while back about that im struggling to create my VN since im not the best at programming in this subreddit. And id like to know some possible alternatives that i could use.",
            "So I want to make a game based on a mod I made in Tabletop Simulator a while ago. It's basically a turn-based pandemic-style fan game with a few player-controled characters moving on a board and take specific actions while map events happen based on cards drawn from an event deck. \n\nI have most of the rules, characters, map, card decks down on TS, and learned a tiny bit of Lua scripts for buttons, counters, random draw, etc. Now I want to translate what I already have into an angled topdown game format that automate background things and let players focus on choosing what to spend their turn and action point doing.\n\nIt's a fan game so I'd need an engine that is free, can work on a low-end laptop, and easy to work with for beginner. It's my first time trying to make a game and interacting with this sub, so if any part of my post comes off as rude or ignorant, I apologize in advance.",
            "Finally Started my solo dev journey after many years of just saying i would. Finished my first character in Blender and been messing around in UE5. \n\nCurrently i'm watching several different videos on youtube as well as googling stuff whenever they do things that made no sense to me since we all know these videos usually have skips or get fast forwarded. \n\nwould it become an issue later on if use different methods from different CCs and implement them to my game?\n\nAlso any tips or recommendations for a solo dev.",
            "[deleted]",
            "Hi all,\n\nI'm pretty new to Unity and game development in general.\n\nI'm working on my character controller, and I'd like to use Input System version 1.8. I like the new \"Actions\" workflow described in the documentation. When I try to install it in the package manager, I only have access to version 1.7. I've enable pre-releases in the project settings. I've tried this in the latest LTS editor version, and also the latest standard version as of this morning.\n\nAny ideas?\n\nAlso, I'd love some opinions on this: I'll be working on this game for a while, probably 1-2 years. Should I stick with the 2022 LTS or go with the 2023 versions until the 2023 LTS is out?\n\nThanks!",
            " Hi guys. I'm wondering how long it will take me to learn enough Unity, C# and Blender combined to make a game? I mean it's a very hard question to answer but can you guys give me an estimated time? For the tecoed I know a little bit of Python and used blender 1 or 2 times and that's it. \n\n Also I was wondering if it's a good idea to use Blender for my animations on my Unity games in the future? \n\n Lastly c# is a good programing language for most game engines right?",
            "Hi, short story shorter: Me and my friends like online cards against humanities but are all broke teenagers who dont like the free alternatives.  I was wondering if it were possible to create an online game (maybe peer to peer so we dont have to pay for servers) that's like cah except we can customise the decks. Thats all rlly. We were maybe thinking roblox for simplicity but the censorship is too annoying to get around. We all have little to no coding knowledge, so any advice (even just to give up or try smthn else) is appreciated.",
            "For clothing, specifically a game focused on it, for example Shining Nikki and life makeover. What software would they potentially use to create the clothing? I've played around with Marvellous designer which is a great tool but wondering if its the best tool for that type of game and what they might be using instead.",
            "I\u2019m currently a CS student with about a year or so experience with Java. Currently, I\u2019m using gamedev.TV  3d course to teach me the basics of unity. The school I go to doesn\u2019t really have a \u2018game programming\u2019 course.\n\nNow, anyways as to my question. One game that\u2019s sorta always \u2018intrigued\u2019 me was the original slender game, and I just had some questions about it.\n\n1. How did the slender ai work? \nIt seems like it just wanders around, with it becoming more and more aggressive as more pages are collected. Is that all there was to it?",
            "Heyo,  \ncompletely new to gamedev. Working as software dev for three years now but boy is game development different.  \nI started working on a small 3D game and mostly learning Godot basics at this point.\n\nAfter fiddling quite a bit with raycasting i have everything set up to implement the other parts. However, i wonder whether i should continue with 3D or switch over to 2D. Mostly because i don't see how i could \"prettify\" my 3D to make it enjoyable, not even speaking of animations...  \nIn 2D i could use sprite-assets probably. Also, the amount of tutorials is way higher for 2D.\n\nWhats your take on this? Without exaggerating: I'm the most non-artistic person you will ever meet  \nMy end goal was to have some sort of WC3 view/style - though without camera movement so in theory i could stay in 2D.",
            "Reading through the guides, I haven't found anything about Trademarking your IP. Does anyone know of any guides on protecting your game legally? Has anyone walked through the process?",
            "Hello beautiful people of r/gamedev. I\u2019m 29 years old Turkish individual who just started his game dev journey with C# and Unity. It\u2019s been 2 months since I\u2019ve started learning C# and I must say that for a beginner with 0 knowledge of coding it\u2019s been pretty good. I can say that I\u2019ve build a strong foundational knowledge for C# (thanks to freecodeacademy and Microsoft Learn) and also Unity. For past 2 months I\u2019ve been doing small projects with guides and done 8 projects. Last week I have done my first full stack mobile game and ready to publish it. It\u2019s pretty cheesy side scrolling flappy bird like game with some improvements and unique gameplay style. I\u2019ve read all the articles in this thread and I think I\u2019m ready to take my skills to the next level and select a bootcamp for further learning. But I have some concerns. Every time that I look for jobs and demands in the game industry; it gives me crippling anxiety. All the listings are required for a bachelor degree in CS or at least +3 years of experience. I don\u2019t have a bachelor degree in CS and definitely not have any experience in the industry. I really want to get in this industry, finally I think I\u2019ve found a job to do with passion and excitement but I don\u2019t have 5k\u20ac to burn for nothing (bootcamps etc.). I need to be sure about it. So I want to ask a question for experienced professionals and all the employees in the game dev industry. \n\nDo you really think a newbie like me without a bachelor\u2019s degree have an opportunity to land a job in gaming industry? \n\nShould I continue my game dev journey? \n\nBecause of my country\u2019s current political situation it\u2019s almost impossible land a job in gaming industry here for me, is finding a remote job in gaming industry only a fantasy? \n\nThanks and have a good day! (Sorry for my English, it\u2019s been rusty :) )",
            "Question out of curiosity mostly, i understand the biggest hurdle is Server architecture, but is there an engine aimed at producing an MMORPG with minimal coding? \n\nSay something akin to like RPG maker for regular RPG's or Visionaire studio for PnC games. \n\nSomething where you paint in the landscape, place mobs from an asset library, set up NPC's the same, and then program them from predefined drop lists of behaviours??\n\nSame with buildings and quests and items etc. \n\nWhat i picture is like the old never winter nights tool kit but instead of small co-op or SP settings, have a back end build for large scale player numbers. \n\nIs there specific engines made for this task?",
            "What's the. best game engine creating a realistic football game? Main focus on ball physics, collision and animation",
            "For making a 2D top down stealth game/rpg with an emphasis on storytelling and branching dialogue trees, what would you guys recommend?\n\nI have some experience with Gamemaker from a while back, although I only made 80's arcade style games with it.\n\nSomething with perhaps a 2 player co-op compatibility would be nice, although I understand that is much more formidable to implement.",
            "Hey how do i publish my project as an exe from vs studios\n\nSide note i got it published to a folder but the app does not run",
            "In your opinion, how hard it is for someone who know only basic code to start a roguelike game from scratch? With all these things about upgrades, weapon types, damage resistance and stuff?",
            "Hello,\n\nI want to learn about another game genre, racing game is something I have not tried before, so I think I would prototype a (simple) racing game but I'm not sure where to start, I need some pointers from the experienced devs in this genre.\n\nare these adequate for the basics of racing game?\n\n* a simple race track\n* physic-based driving: accelerate, decelerate, drifting, crashing\n* UI for controls such as: steering, speed, brake\n* simple AI for opponents\n* car modifications: color, engine, tires\n\nAre there anything else I need to pay attention to?\n\nI appreciate all replies!",
            "How do I make a 2d wood/screw puzzle game?  \ni'm looking at [https://play.google.com/store/apps/details?id=com.ig.screw.puzzle.nuts.botls](https://play.google.com/store/apps/details?id=com.ig.screw.puzzle.nuts.botls)\n\nnot necessarily mobile.\n\nI have a lose idea how I could do it with p2 phyiscs but it seems there are probably better ways than coding the whole engine from scratch, any idea how they did it?\n\nedit: i found one losely similar game made with cocos2d but even then no idea how they did it.",
            "I was doing a lot of \"traditional\" production work (pro tools, etc) when I ran into some drastic health issues that, among other things, messed with my hearing. Looks like they're gonna get straightened out, thank goodness, so I probably want to get back to it. \n\n\n\nI don't have a massive coding resume or portfolio, but daddy did 30 years in corporate IT so I'm hardly scared of code or compilers. \n\n  \nCouple questions; \n\n  \nOther than UE4/5 (and unity?), what does it make sense to look into? I was in the early stages of looking into fmod before I got sick,  is that still relevant?\n\n  \nWhat are the best \"entry level\" projects? I was around for the \"mod scene\", back in the day (Quake, Unreal, etc) but that no longer exists, correct? \n\n  \nThanks so much \n\n  \nJoe",
            "A thread from two years ago on this sub caught my eye. The title was something like \"I hate it when people recommend a tetris clone for a first game\", and gave some great reasoning as to why it's not a good first project. This isn't the issue however.\n\nWhat caught my eye was that the post said something like \"tetris might be too complicated, so new devs might resort to a step-by-step video tutorial\", as if it was a bad thing.\n\nThis got me thinking, how am I supposed to learn how to program something like Pong or Space Invaders without looking at a tutorial? I get the gist that you should learn how to make things yourself instead of blindly following instructions and copy-pasting, but for my literal first project how am I supposed to know how things work without looking at a tutorial? This is a genuine question.\n\nMy plan was to first learn basic C#-> then look at C# Godot tutorials-> then look at a Pong tutorial. But this post threw a wrench in this plan as it got me thinking that the last step is not a good idea. I just don't see how I'm going to go from literal zero experience to creating a game like this without a guide.\n\nThe point being, that if there is a better way - please tell me! I'm very serious about this even if it is a hobby for now, and I'm starting from absolute zero.",
            "So im going into my 3rd Year in College, and thinking of heading to University, i believe i have chosen my Feild i would like to go in but im not too sure on how to get there.\n\nFor context im learing Games Dev ofc and i feel like the Creative side and Building on simple ideas really call to me, something like a Creative lead but im in no position to go that high of a position straight away. \n\nIm more or a Creative person everything i do i outside the box and uniqe in every way but i would like to start building a Portfolio for when i do start applying for Jobs and i have no idea where to start like would i make mock up GDDs with concept art or what?\n\nAny advice from anyone would be amazing thank you",
            "Hey I just spent the last week or so learning c++ I was not aware how demanding unreal engine is and my poor laptop can't handle it  turning to unity it works but is in c# can i make it work or do I have to learn c#?",
            "Game dev noob need pointing in the right direction.  \nSo my current game idea is an analog horror type thing, basically, it takes place on a Windows XP system and you're using a tutoring app but slowly it gets more deranged, whether it's visually, audibly, or just general storytelling-wise. I'm mainly inspired by the Lacey Games series here if that gives you any ideas.\n\nProblem; I'm a complete game dev noob, I have no clue what engine to use or how to make it in general. or even what you call this type of point-and-click-ish game.\n\nI am working alongside my artist friend as well he's already done some character designs and such, we just need to figure out how to make the game part... which is like, the most important part",
            "Hi! I'm usually a lurker in about every subreddit I'm in but I thought it would be smarter to actually ask about this sort of thing since idk what I'm even doing. (I'll be sending this to r/IndieDev so you'll probably being seeing me twice if you're in both subreddits!)\n\n\nIm extremely new to game development, at most I have maybe 30 or so hours of experience making a story based rom hack in SkyTemple for PMD Explorers of Sky. With maybe 10 or so being actually attempting to code and program in the editor.\u00a0\n\n\nAlmost a week ago I came up with an idea for a metroidvania not unlike games like Hollow Knight, Crowsworn, Ender Lillies, Ori and the Blind Forest etc. Now I realize how incredibly out of my depth I would be if I went with this idea from scratch. I had thoughts of taking like mechanics and areas and making them into mini versions of the game then putting the knowledge I've picked and build from scratch\u00a0 but I'm not sure if that's the best way to go about it either.\n\n\nI had a thought of maybe trying to do something entirely separate but with the same theme to make as a first game before eventually moving on to the one I want to make but I'm not very good at coming up with wholy original ideas for things, so nothing has really come to me to do. I'm usually best suited for bouncing off other people's ideas or inspirations and going wild with that so the fact that I came up with this idea for a game is pretty crazy for me.\u00a0\n\n\nDoes anyone have any suggestions of what I could do to gain experience in creating something to get used to game development before moving on to the bigger project. Should I try recreating simple games like Pong, Pac Man, or space invaders first? With or without my idea in these?\n\n\nAlso for the engine I plan on using Godot if that helps!",
            "I want to start making games as a side project to keep me busy. \n\nRight now i'm learning c# and python for school. So unity seemed like the way to go. But i saw a discussion where someone said unity screws over dev's who use it, because you have to pay a fee per download of your game.\n\nSo I was thinking either using pygame(but it seemed a bit outdated) or learning c++ and try out unreal engine.\n\nI feel like it might get confusing, learning 3 languages at once, but I have so many fun ideas for games, and I think it'd a be a great project to work on.\n\nAny advice?",
            "Question more out of curiosity than anything else - I see a lot of people who have been working on their games for 10+ years, and I'm wondering if there comes a point where your previous work becomes obsolete because of advances in technology? I imagine this is more of an issue with certain types of graphics (like I imagine pre rendered isometric graphics would hold up a lot better than 3d), is it the same for gameplay too?",
            "Hey there, i'm looking for a tool that can let me create massive maps that is relatively simple and easy to setup with built in texture managing and gltf export, does this option exist?",
            "Are there any engines with Live2D support? I've tried installing a Godot plugin before, but the documentation for it leads to 404 page.",
            "Question about changing careers. I'm currently working on QA for mobile devs, I was thinking of going either into 3d animation or game design (focused on combat encounters), but I'm curious, how's this part of the industry looking like for beginners? \n\nWith all the layoffs, downsizing and whatnot, how's the perspective for someone starting off in those 2 careers?\n\nHow's the early career path for a new game designer? Is there any way of getting in as a designer, or it's something you move into later on your career? I think it's a little daunting thinking about creating solo projects for game design because I want to focus on the design part but then I still have to work on all the other parts just to find a way to show the design skills. Let's for example I want to have a boss fight in my portfolio, I can design the boss, it's attack patterns and whatnot but would it be enough to have this scenario prototyped with clearly cheap/free animations, greyboxed levels and sometime even attacks not being animated at all just showing a hurtbox or a simple animation of a block to exemplify the attack. Would this sort of prototype be \"good enough\"?\n\nAnd what about animation? Is picking up Maya, learning it and creating a small portfolio the best way to go?\n\nAnd for people who've tried changing careers and ended up changing ideas, how long do you give it a shot before deciding it wasn't meant to be and looking for another path?",
            "Hi all,\n\nI am at the beginning of my journey into gamedev, while also heading into my final year of university.   \nI want to build experience and a portfolio to get a job in the game industry (programming) after university.  \n  \nFor context, I live in the UK and have EU citizenship as well. US market is out of the question for me, unless there would be fully remote jobs available.\n\nI am struggling to pick an engine to develop these things in (Unity vs Unreal), as the opinions I found across the internet in my research are very split. \n\nThe general points I'm seeing are that Unity is better for indie/mobile games and Unreal is better for AA/AAA games.  \n  \nFurthermore, Unity seems to be a better choice for the versatility it can provide you, as it teaches C#, which is widely used in the software development industry, therefore providing better flexibility in terms of job prospects (in the event of being unable to get hired at a game company). Bonus point seems to be that Unity has more documentation and tutorials across the board than Unreal and is also much more reliant on actual coding.  \n  \nOn the other hand, Unreal uses C++ which is the industry standard for game development and will provide an edge when looking for a job at big game companies, which would technically give me a better chance in achieving my dream job of working in the game industry. Bonus point here I guess would be that there are a number of AAA companies that are actually adopting UE5 as their engine of choice now, so using it to build my portfolio and expertise will give me a more direct alignment to the job descriptions.\n\nIn my eyes the comparison comes down to the fact that that Unity will give me more versatility and prospects, while also perhaps being easier to learn, while Unreal is more of an all in bet for game development that gives me higher success rate in that area. \n\nI'm really struggling with this choice and would love to get your inputs and advice! Please include as much detail/argumentation for your recommendation as you can.",
            "What engine is the best for a 2D Undertale-esque game?",
            "How do you secure your studio name as your own, once you've decided what you want to call it and have confirmed that there are no trademark/copyright issues?",
            "Hi, i'm a newbie i don't know how to code but i really want to try making a game like \"Cat Goes Fishing\"\n\nSo like a 2d fishing game where the gameplay is all about the line coming down trying to get more valuable fishes\n\nWhat engine do you guys think would be the best for me?\n\nSorry if it's a weird request btw",
            "I have been programming front end work for 10 years now. I\u2019m pretty good with JavaScript. I have been taking unreal courses and learning C++ but have been reading at how daunting it is. I want to know if I should adjust to C# or just keep at it. Ultimately I would like to build both 2D and 3D. \n\nI saw Godot was a good engine for 2D but I would like to put my learning time into something that could be used in both 3D and 2D",
            "What should I do ? I want to get into companies that make games or make my own I just wanna help and contribute but I never really coded besides some janky websites. Like should I be going to college or is it really just learn on your own and hope to find the right people? Like what\u2019s the first step in learning find the best beginner YouTube video? Should I go for a degree???",
            "I'm a graduate product design student and avid gamer who's hashed out the design for an indie arena FPS game. I'm also working a part-time job while taking a summer class. I started learning Unreal Engine a couple months ago so that I can start developing this game by myself. I have a lot of trouble finding and fixing bugs.\n\nI'm feeling a bit overwhelmed by the amount of things I have to work on: 3D models, coding weapon mechanics, implementing UI, adding movement mechanics, animation. I barely even know where to start, so I've been bouncing around between various basic tasks. \n\nI have no idea which aspect of the game I should focus on at the moment, or even how to move this game forwards at a higher rate. Should I take an online UE5 course? Should I pay a freelance dev to code fundamental game mechanics?  Should I do a simpler project to start out with? I'm getting analysis paralysis, and every time I work on something I worry that it's not high enough priority.",
            "I don't play many games and the games I play I play really rarely, but I really enjoy game development and I'd like to do it as a hobby. I don't exactly have ideas for games, except some general things I like on the rare occurrences when I do play games (low stakes for example). I like all sorts of games, from Celeste to Shenzhen I/O. Generally I like when games give you time to figure things out at your own pace. That's what I want to incorporate in my game. However, I don't have specific ideas precisely because I don't play many games. I had a couple of ideas in the past and I've made them, but they ended up being very bad. So how do I come up with actually good ideas?",
            "Why do I see so many devs planning a release on Steam vs iOS or the Play Store. Is there a big difference in the marketability of Steam vs mobile and are the fees you pay significantly more on one vs the others?",
            "I aim to develop a management game made entirely through interfaces, so I was thinking about using GODOT for that. The problem is that I am a complete beginner in using engines, despite having a good knowledge of programming languages, and I realize that the vast majority of tutorials are aimed at 2D action games, etc., it is very difficult to find videos and tutorials about simulation games like that, so it makes everything confusing for me.One thing I'm unsure about is how to create time in my game, I'm referring to an almost \"infinite\" calendar, where different random situations happen throughout my entire calendar.\n\n&#x200B;\n\nCould you guys give me some advice",
            "Are hentai games guaranteed income? Looking at some on Steam. $10-20 and 1000-3000 total reviews, so presumably that many purchases. Before Steam's cut that's $10k-60k revenue. And how are they even that popular to begin with when you can find porn for free basically anywhere? Anyone with insight into the production process and industry able to shed some light on this?",
            "[deleted]",
            "I am a beginner coder and want to get into game dev. Right now I am learning Java in school and I am wondering if I should begin trying to make games through Java Swing or maybe learn another language like Python and make games through pygame which I know has a lot more resources to learn compared to Swing and might also be easier. I also heard that the switch from Java to Python is easy. \n\nSo should I switch?",
            "I am looking for advice for an engine to pick.  The long-term goal is eventually designing a game that plays top-down, similar in complexity and style to something like Stardew valley.  What's a good engine to start learning the ropes of?  I have some coding experience and I want to go in planning to do everything on my own (I will be making all my own assets, UI, music, etc).  But I would like to pick an engine that I can learn some simpler projects before diving into my own fully.",
            "Can I make steam game than contain Underage NPC? For example for villager",
            "I have some primitive programming experience using archaic ERP systems. BASIC, SQL, ABAP, etc.\n\nBut I've got the itch to actually make a game, and I've got it in my head that I want to create a MTG clone.\n\nI've spent thousands of hours playing MTG:Arena, Legends of Runeterra, Slay the Spire, and any other card-based PC game I can get my hands on.\n\nIs there an existing game development environment that would lend itself to this sort of game?\n\nThanks!",
            "I'm an amateur  game developer, and i've started developing a rhythm game with deckbuilder aspects in unity as a passion project. I've been looking at using fmod before I get too deep into it (i have the main rhythm minigame almost done), since I know it'll probably be helpful in the long run, but I don't even know where to start. Does anyone have any good starting tutorials or guides?",
            "I am no artist, no coding/programming knowledge and no gamedev experience at all, aside from playing video games in my life. I'd like to make a game but it's so overwhelming I don't know where to start and how to progress, like a flowchart/milestone/techtree on what should I do.\u00a0\n\n\nI have a general idea on how I want to start it off. My little brother has good knowledge on Java/Python and C++ so I got this part covered. My friend is also familiar with Maya so art/3D modelling is covered too. I know I want to stick to Unreal engine because I mainly want to make 3D games. I'm not sure how hard/long it will take me, but a game idea I had was a somewhat realistic medieval arena fighting game. You play in first person and fight against multiple types of enemies and once defeated, you progress to the next wave\n\n\nI know I should start off small and easy objectives but I'd like some examples or pointers as to not waste time. I want to make games for fun and I don't hope to ever become millionaire from it. I have an amazing job that allows me lots of free time\u00a0",
            "What is a good engine for a banished-like game?",
            "hi,\n\ni am a software developer with few years' of experience in front-end web development and I would like to try to develop a 2D multiplayer twitch shooter game, something like Soldat. I would like to know which 2D game engines should I consider to develop a game in? I'm not totally new to game development, as I have built bunch of 2D prototypes in Adobe Animate (actionscript 3), but had never finished any.\n\nHere are requirements for choosing the most suitable game engine:\n\n* out of the box support for ragdoll physics\n* out of the box support for high-level multiplayer gaming features (i.e. Lobby creation, matchmaking, RUDP...)\n* plenty of tutorials and large community\n* support for deployment to multiple platforms (Web app, Mobile, Desktop)",
            "I'd like to play around with ranking/matchmaking algorithms. Does anyone know where I'd find a lot of match results data for something like a 5v5 game that has random team mates?",
            "where's a good place to get critique on pixel art/ animation?",
            "Hello, sorry if this isn't the correct place to ask. \n\nBackground I have a small game that I made for iOS and Android. Currently I run banner, interstitial, and reward ads through IronSource, AppLovin, and AdMob. I have a decent amount of users from India but my eCPM is very very low compared to other countries. Is there some ad networks that are better for some regions(i.e. am I missing out on potential ad rev) or is this just the reality of what advertisers in certain regions are willing to pay?",
            "Hey everyone, I am relatively new to game dev(not to programming as a whole, however), and am having difficulty choosing a game engine/framework. I want to create relatively simple games, mostly using shapes, maybe a few sprites. Incremental games, platformers... I feel a game engine like Godot or Unity might be overkill. I have looked into P5.js(although not a game engine, its very beloved to my heart, this was the first thing with which I started programming!), PyGame, Pyglet, Love2D, and now I am just confused. So, I wanted to get your wise opinions and advice. Thanks!",
            "Looking to make an online simulation management game.\n\nDoes it make sense to make it in two parts, one being the simulation part that runs on a server in the background in perhaps entirely custom made, and then make the rest of the game, the interface and what the player interacts with in something like Unity or Godot?",
            "I've got a lil idea I want to play around with and have some fun trying to make but I've hit a bit of a wall. I'm still working out like initial ideas how it should work.\n\nSo very briefly, concept is you're building a little party and go on adventures for Treasure. Each adventure is a bunch of random encounters from a deck; some roleplay based, some puzzle, some combat. Then you get to the end and there's a Boss Monster or Boss roleplay.\n\nSo I've got this lil loop idea which is the most of the Gameplay, but I feel unsure if this is enough or if dungeons should be more specifically crafted.\nI wanted this to be a bit faster paced and not too dull etc, and this is my first time playing around with games! I guess I'm not sure how to Gameplay",
            "I want some advice on my game idea:\n\nTop-down turn-based strategy RPG based around customizing builds.\n\nLoads of abilities and gear.\n\nMultiplayer competitive mode in the future.",
            "Hello, I want to make a text based game with 2d visual elements and a drag and drop inventory system. What engine should I use?",
            "Hello, I'm a novice in programming, but with strong foundations in marketing, planning, writing, illustration, and game design (coming from TTRPGs).   \nI've previously experimented with Unity and UE4, successfully creating interactive levels for fun, and I know how to use Blender. I'm looking to create a small Souls-style video game with combat set in the mythology of my country.   \nThe level size would be similar to Jotun (by Thunder Lotus Studios), and the idea is to have a camera system similar to that of God of War 1 and 2 (the old ones). Which engine would be the best for this and how hard could be to implement this souls-like combat system?",
            "I have a game I made a lot of functionality for (combat, movement, leveling, environmental stuff, some enemies, etc) but I don\u2019t know what to do for the main gameplay loop or story or what to do with it to make it more than a sandbox tech demo. \n\nIs a big post asking for ideas ok in the subreddit or only in this thread or not really allowed?",
            "Thanks I want to make a racing game, new to it and dont know a shit aside of basic stuff like HTML, CSC Python and Java, but it has been my dream since I was a kid :) good luck yall",
            "I'm currently trying to design a game that will have a board, a hand, and pieces with different states on the board. I'm trying to find methodology for handling instantiation of objects, tracking that object through arrays/states/functions, and condensing the management overall. \n\nI've had to refactor code several times now because of needing a new variable in my pipeline to track something or another which I feel like should have been more obvious. I think my question is mostly language agnostic but right now I'm just doing simple 2D in Javascript through Phaser. \n\nI think I'm looking for more conceptual posts on in game object management than explicit code examples.",
            "So I am someone who best learns by following a structured guide/course. I can't just start using stuff and experiment. So I am looking for courses for Unreal engine 4/5 game devs, that just cover almost everything. From start to finish, including the workflow, blender, animations combat, etc. I don't mind paying for them if it's on udemy, or free on youtube, any recommendation is appreciated. (I did watch unreal senseis tutorial on YT, I am looking for sth similar, but one that covers more topics)\n\n  \nI see that Unreal Sensei has a course with 60-70+ hours of materials, anyone got any experience with that?",
            "I started with AppGameKit which is an easy language to learn and quickly allows you to make a game. Tons of graphics and resources available",
            "Hi all, very new! But something I\u2019ve been wanting to dive into for a while. \nIncredibly new and I\u2019m aware that regardless the learning curve will be lrettt steep, more of a passion project.\nObviously my first major choice is the engine type? I\u2019m wanting to make something more narrative driven in the vain of Life is Strange, The Quarry etc \nWould one engine be better suited to this type of game style? Any insight would be great - cheers",
            "Hi! I have a question!  I'm making a short hunting game. I just finished tracing a reference image for a 2D sprite. I plan on using Krita to paint over it. What I'd like to know is what program I should use for rigging and animations?",
            "What engine to use for a very specific genre\n\nHello, I've always wanted to make a game like [Do Not Believe His Lies](https://en.wikipedia.org/wiki/Do_Not_Believe_His_Lies) (DNBHL), a puzzle game with codes, weird images and videos where you are supposed to find a password to proceed in the game, but since no one has even beaten DNBHL or similar puzzles like cidada3301, I wanted to make a similar game, but this weird puzzle genre is very niche and i don't know what game engine is good to make these kinds of game (also, other barriers like players needing to download images and audios to edit them makes it harder).  \nSo, are there any engines where I can be able to build something like this?",
            "Hey, I just want to ask the Technical Artists, the role being mid level, can i get the job with 0 experience even if i have a good portfolio?? or should i go on with pathways? i like to learn Houdini tho",
            "[removed]",
            "Hi, I have a problem that is blocking me to really start learning in making games:  \nunfortunately I can't decide wich game engine use, because of one or two aspects that blocks me, for example:  \n- UE5: even if I will mostly try to create 2D games (maybe Topdown) the only thing that concern me is how much space occupy in the PC (how many gigas);  \n- Unity: after the Unity outrage, I am not sure if will still be supported by the community (because I've heard that people and some studios are leaving it), and I don't know how much space occupy the program;  \n- Gamemaker: I find this very easy to use, but from what I understand, it does not support the 3D graphics;  \n- Godot: from what I understand It could be the one that I can use (especially for filesize) but seems that the UI is a bit confusionary than other engines;  \n- GDEVELOP: From time to time I use it for small projects, but I feel that is something that It can't be used for big projects.\n\nI know that it's a small problem, but it is blocking me.\n\nP.S.  \nI already know something about Java, C#, Python",
            "Hi, bit of a weird one, but I\u2019m making a game exclusively for my girlfriend for Halloween because it\u2019s her favourite time of year. I\u2019m a software engineer, but super new to game dev and have an issue around her being able to access the game once it\u2019s done. She only has an Xbox and iPad to play games on and I\u2019m hoping to install it in the Xbox. I\u2019ve seen they have a Creator Program, but (please correct me if I\u2019m wrong!) it looks like that costs money and (to cut a long story short) one of the restrictions for me making the game is I can\u2019t spend money on it.\n\nIs there a way I can just install the game from a usb or something? Like set the Xbox up as a developer machine or something",
            "Hey everyone! I\u2019m a software engineer (JavaScript, Node), but never did anything regarding game dev. I really want to build a game a Roguelite shooter like Enter the Gungeon. Can anyone recommend the best way to get started in building a game like that? Are there tutorials/resources out there that could help? Thanks!",
            "Hey guys! Newbie to game dev here! Do you guys have suggestions of game engines to create games in PS1 style or alse DOOM style?",
            "Anybody have recommendations for universities with grad programs in game development?",
            "Hello friends!\r  \n\r  \nI play a game called \"Virtual Manager\" which is a web-based football manager simulation game. It's fantastic however the developers seem to have given up on the game. I am looking to create something relatively similar to this as I believe the UI and gameplay mechanics are far superior to any of it's rivals. Would love some advice on how to get started and what you would advise using to build something like this?\r  \n\r  \nBit of background: I am a very junior Javascript Developer so my coding knowledge isn't excellent by any stretch. However, I hope a project like this could make me excel... thoughts? Happy to learn and code in any language that you think will fit best.",
            "I've read through quite a few of these posts now and it doesn't quite say what the first step really is. Do I start the OSSU course first? Do I just look at tutorials first? Do I just pick a coding program and see how it goes first? (it doesn't sound like this last one is the first step but it's not quite clear)\n\nAs far as I am aware \"step 1\" is create pong and \"step 2\" is create smw, yet it still doesn't say what to do first.\n\nFor more information about my background, I have no coding experience so I am starting right at the beginning. I am 26 but only have Grade 10 courses of Math, science, and Language Arts completed - beyond that there is no Grade 11 or 12 completed.\n\nI feel like the answer should be obvious, staring me right in the face but I just can't see it.  \n\n\nI know I have much to learn but it sounds like the OSSU course is 2 years in length but I am really itching to just get started.  \n\n\nso step 1?",
            "How do I get people to play my game?",
            "After making a small mod for Balatro, I got the idea to make a turn based rpg inspired by a d20 system, with a lot of stats and calculations, with gear mechanics similar to aRPGs (mainly inspired by path of exile). The UI of the game is simple, I really don't want to suffer through calculating things by myself, such as padding between elements or window height divisions, if I could declare things similar to CSS flexboxes/gridboxes it would be a godsend.  \n  \nSo what engine and frameworks should I use when taking these criteria in mind:\n\n* Game is entirely made of 2d elements, mostly prerendered sprites, but I would liek to be able to add hraphical effects over them. (Like Balatro's editions)\n* I value multiplatform, program once debug everywhere isn't such a problem to me.\n* Performance is not an absolute since the aren't that many moving elements\n* I'm fine with all languages and programming-dogmas. I'm proficient with C++ as I've done some nitty-gritty audio-programming before and familiar with Java, Lua, Python and Javascript (React).\n\nFair to mention that my machine is an M2 Mac Pro, and if anyone wants to sell me the idea of learning RUST, sure, this might actually make me wanna do it.",
            "Hi I am developing a Tower Defense Swift game and want to make a multiplayer feature but I am not too sure with the networking tool to use. I am considering Firebase realtime, or the native URLSessionWebsocketTask by Apple. Any idea on which i need to use? Any suggestions welcomed and thank you in advance.",
            "I actually have a question about pixel art, for game like Eiyuden Chronicle: Hundred Heroes, how big are the sprite size vs Star Ocean 2 R?\n\nit looks like Star Ocean 2 R is the same sprite as the original game? \n\nif anyone can answer my basic question I would appreciate it.",
            "I want to create an open world monster collection game, like Palword or the newer Pokemon games, but I'm only familiar with visual scripting at this point, not typing out actual code. I know I'll need to learn to code to accomplish what I want, but where should I start? Godot, Game Maker, or Unity? Since I want to eventually make it commercially viable, it needs to be unique enough to stand out, and copying ready-made scripts into my game feels like cheating/stealing.",
            "Apologies if this was somewhere in the beginner info. Are there any good tutorials and/or free programs for making game music? I am a complete beginner when it comes to making music and I know absolutely nothing but I would like to make my own music for my games.",
            "Thanks for this thread.\n\nI have a question about engines:\n\nI want to create a game that mixes Blood Bowl (The tabletop game) and Management stuff (Improving your stadium, training, etc).\n\nIf the videogame aesthetics would follow a retro/pixel theme (Think of Faster Than Light) with a horizontal field, and I want to use a coding language (I use Python and JS, as I am a Web Developer, and I have experience with C++, C#, etc), what engine would be the best fit for me?",
            "Hello! This thread sounds like a great spot to ask.\n\nI need a game engine recommendation - for the past few days I've thought of so many good ideas that I can't let go of this until I've tried.\n\nThe genre is gonna be sphere-matching (think Luxor, Zuma) which is why the choice of engine isn't obvious. It's gonna be 2D which kinda kills Unreal (afaik it's not too well suited for 2d), which is a bit of a shame because that's what I have the most experience in.\n\nI was thinking about GODOT, because currently Unity is a no-no, any other alternatives that could work for a 2d action puzzle game?\n\n*If I'll be able to get a good and satisfying gameplay model then my head is bursting with ideas on how to develop it into a full title and make it a unique game in the genre, but let's face it, I won't get far with it anyways xd*",
            "Character AI-driven Telegram chatbot RPG?\n\nI'm a big fan of text role-playing, and I'm really inspired by what\u00a0[character.ai](https://character.ai)\u00a0makes possible. I have long wanted to set up chatbots for my OCs on Telegram, to let my friends chat follow stories written by me but driven by the OC.\n\nI have a script for the story, and I want the character to \"lead\" the player through it via a chatbot - like a text RPG, but in the form of messaging the character. I understand it can somewhat be achieved by creating an OC in\u00a0[character.ai](https://character.ai), but their bots often adapt to on user inputs, switch and don't drive the story on their own (+ are not on Telegram).\n\nFound a few resources on GitHub that can bring a\u00a0[character.ai](https://character.ai)\u00a0bot to Telegram, but wondering if there's a way to program them on my own, without relying on\u00a0[character.ai](https://character.ai)\u00a0back-end. Understand the question is probably broad, but would really appreciate even some tips or names of tools that can make it possible.\n\nThank you very much!",
            "Hi, I am trying to implement a board game that I can play with my friends. The rules will come from a board game that already exists. I am a C programmer and have good object oriented experience, i.e. I know exactly how I want my code to look to model game state, player state, pass information between players and the model etc.\n\nWhat I don't know is anything about game design, I have some blender models I want to use for the game and would like to do some event driven animations on the board when the world updates. I know nothing about game engines or frameworks and am curious what people think the best tool would be to help for this application.",
            "A bot told me tompost here :)\n\nMacBook + Windows Laptop - worth it? Cross platform gamedev?\n\nWith M1 and M2 - did general gamedev on Macbooks become plausible?\nIs closs-platform compatibility in development working well between macos and windows? \n\nCan I do most of game dev on my win laptop, but also work on them on MacBook, when I travel or on the go? Are there critical issues to pay attention to?\nI mostly think about Godot and maybe Unity. Games I work on are pretty much 2D, without massive demand on GPU - e.g. deckbuilders and at worst - bullet-hells and platformers. I work either alone or with friends who code on Linux. \n\nI'm new to gamedev, and am currently thinking of updating my laptops.\nSo far I've been using my gaming laptop for games + MacBook as a comfy machine to work on the go (but without discrete GPU, so I didn't even try using it for games or gamedev). But now they are 9 years old both. But should I keep it as gaming laptop + MacBook? Or two windows laptops are better? Or can I seek a powerful enough MacBook?",
            "I'm looking to make a primarily text-based game with simple graphics (no user inputting text though) with UI graphics, turn based combat, etc.  I'm trying to figure out the best engine to use, the closest engine I found at first while looking for one was Twine, but I want to be able to do more complicated stuff without having to do raw coding, preferably a visual coding system like Unreal has (not that complexity, just conceptually something in that realm). Do you have any suggestions? I really don't need a powerful engine as it's a very minimalist game.",
            "I'd like to design a demo for an educational puzzle game that has the look and feel of a platform game. None of the game design tools I have looked at so far seem to be the right fit. Any suggestions.\n\nFor reference, I have tried the Construct 3 tutorial for creating a platform game. An issue that I ran into is that it instructed me to use a file that I had no way of accessing or finding. I have also looked at Scratch, but it does not quite work for me, either.",
            "why were 3D models sometimes converted to 2D sprites/backgrounds in the late 90s?",
            "Hi all! I've been developing my first game and decided early on it would have online PvE from the get-go. For the past couple of weeks, I've been implementing networking features for my custom engine and learned a lot but also realized how much there is to learn... It's going to be a lot of work to get everything working smoothly without issues, but I keep reminding myself that it's totally worth it for the game experience and also for my personal skill development.\n\nWhat are your experiences with networking in game development? With established engines or custom.\n\nWhat should I look out for?",
            "I'm interested in creating a RWBY fighting game similar to Guilty Gear in terms of art style and similar to BlazBlue Cross Tag Battle in terms of combat or something. So far, it's just an idea. But I've got most of it written down so far",
            "Is there a good reason to *avoid* the Defold engine (in favor of Godot?) For a 2d, competitive multiplayer game. That I'm developing entirely by myself with no delusions of profitability. I looked at a lot of small 2d engines and I like what I see with Defold after trying its tutorials.  Anyone want to talk me out of it?\nSeems no one is using it, no one is talking about it, and it's been around for quite a while.\n\nMy main concern is it might be so well set up to do things a certain way out of the box that it will be hard to extend it to do them differently- like if I want to change the tilemap dynamically instead of load a map at the start, composite or partially palette-swap sprites from multiple atlases, etc.",
            "For a while I been having ideas for a complex game, but I don't know what game engine to use that can handle what I am planning. Complex game, as in, a combo of genres and mechanics such as idle, city/civilization building, controlling time, and first POV survival/roleplay. It's hard to explain with words.",
            "Hello, I've done a few 2D games and I'm trying to turn into doing 3D stuff but I'm having a ton of problems getting my head around terminology and the whole math around it, Does anyone have any good resources or an easy way to start tackling it?. I'm having troubles with the whole 3D mesh/shader/material/texture/etc and how to make stuff move in a 3D space.",
            "Hi, I'm looking for advice and maybe someone to collab with. I'm a programmer in C# and Unreal Blueprints. In lieu of a collab partner I want to play to my strengths. I don't want to rely heavily on the asset store or marketplace to buy assets constantly. I can code, and I'm not afraid of spending X number of hours tracking down a bug before reassessing the problem and moving on to an easier solution to scrapping that idea entirely. \n\nHere's what I've thought of so far:\n\n* Utilize AI Art Generators to replace the need for 3D art, purchasing 2D art, Using Ai Gens for Level design, and of course using it as an assistant when coding.\n* I've thought of simplifying my games down to only what I can gen with ai, and bringing it to life with code.\n\nThe problem:\n\n* I can't think of any good game designs to build around this. Ai Art is imperfect so anything I hobble together would look like it's been stitched together.  Consistency is also a problem.\n* I thought of a simple idea I \"COULD\" implement, but why would anyone play it? In short, it was a slow paced sci-fi RPG game. People can barely stand games like that on the market. I know one that just released today and I bought it and I already plan to return it. Why? Not because it was \"Bad\" but because my short attention span couldn't handle a boring game without constant fast action, and feedback.\n* Okay, so I thought about speeding things up in my game design document, but those required better assets, hence one of the reasons why I'm here among other devs asking for advice of what to do.\n\nI'd love some tips, or to collab with someone who wants to make some games but doesn't have the programming skills but maybe they do have the art skills or something. I appreciate the feedback.",
            "Hey everyone, \nsuper new to game dev, I\u2019ve only made a floppy bird dupe game in Unity following a tutorial. I\u2019d like to try my hand at creating a room/house decorating game in a pixel art style using either Unity or Unreal (I\u2019ve been using unreal recently for my UI implementation work for another studio I\u2019m working with). I\u2019d love to create something in the vein of Animal Crossing Happy Home Designer, but I have no idea where or how to start. Are there any tutorials out there that I can follow that teaches you how to build a game like this, or pieces of it? Thank you in advance!",
            "Hey, guys, I'd say I'm a fair programmer. I went through the core classes to get a Master's in Computer Science. If you need a recursive algorithm to do a snake sort on a 2d array, I'm your guy. I know the difference between a stack and a queue. But GUI? What's a \"gooey?\" REAL programs work on command line!\n\nI've been learning full stack web development for the last few years, and I want to make a video game. So 2 things:\n\nI keep hearing about how much work making video games is. What's the work exactly? Do they mean making detailed graphics that no one appreciates if they're working well, but make the game look awful if they aren't? Is that what all the work is, or is there something else I'm missing?\n\nWhat I want to do is make a 4X game along the lines of Civilization, so I don't need super-fancy graphics. The algorithm won't be doing 3d matrix transformations 60 times a second. So I'm thinking about making it a full stack web app with a front-end of vanilla js and a django backend that contains the core game logic and basically tells the frontend what to put on the screen.\n\nMy thinking is that's the kind of app I'm used to making so it won't require me to learn C++ or Unity; working in a browser will take care of concerns like cross-platform compatibility; it will be easy to add multi-player functionality since it's all in the cloud anyway; and I can bypass distribution platforms like Steam.\n\nI've read forum comments where people suggested things like this and the response they got was \"Save yourself the headache. Learn a game engine.\" Do you agree? Can you talk me out of it?\n\nAny recommendations for classes or tutorials would be appreciated! Thank you for your thoughtful answers.",
            "Is there a game engine that handles radial motion blur well? (Imagine a game featuring spinning tops similar to beyblade)",
            "Hello, I am a translation & Interpreting student and I want to specialise in game localization industry. Is it ok if I create a post about it? I don't want to break any rules here\\^\\^",
            "Hi there, I really want to make a Fire Emblem type game, commonly referred to as an SRPG or TRPG. I'm wondering what would be the best engine to create such a game?",
            "Making a top down farming game, is unity and libresprite a good combo for it?",
            "Hi guys I just wanna ask whats the best save game to use that fits for Farming Game JSON or Database like SQLite ?",
            "Planning on making a tower defense game where you can throw the enemies around with physics into walls to kill them. Does anyone know of a tutorial they could point me to? Every tutorial I've found has gravity, so like from a side view, so I haven't quite found what im looking for yet.  \nThanks",
            "How to start unreal engine 5 project intended as a mobile game that can be played on PC?\n\nJust a newbie wanting to know how i should start if i want to make a game accessible with mobile but can also be played on pc like most mobile games these days.\n\nI dont know the difference when choosing mobile if it locks me to only that option.\n\nThanks all.",
            "So... would you advice someone towards or againts learning basic game development from zero, by their own?\n\n To give more detail, i've been thinking about getting into game dev by my own, thing is that i know next to zero about it, i mean, i know how the triggers and conditions work just fine, but other than that not really, so would it be worth it for me to get onto that painful journey or nah? tbh the thing that scares me the most is coding/programming, that seems like rocket science to me\n\nSee, i have, for the past years, been writing down in detail lots of game concepts that came to mind, as a hobby really, i just liked the ideas and didn't want to ever forget about them, but i know ideas are worth nothing if you can't make them come to reality, so again, would it be worth it to try learn how to? i mean i know which ones would require an actual big team, bug i do have a couple small/simple ones that could \\*probably\\* be done by one singular given the time, and of course the knowledge\n\nWould appreciate total honestly with this, even if it contains harsh reality checks and dream-crushing, i'm just in the curiosity stage after all",
            "Hi there, first time touching the modern gamedev, I have an engine question.\n\nSetting: let's say you have a pile of bubbles (or balloons). The points where the bubbles touch become link points. Then the bubbles can grow/shrink (individually), either uniformly (like a sphere) or at some direction (like a sausage) - and the pile should adjust itself while maintaining the link points.\n\nWhich engine would would support something like this out of the box? (Preferably in the simplest form possible for a programmer)\n\nI see PyBullet has support for soft bodies and deformables with attachments, but I didn't try it yet - would you recommend using it? Or anything else? (Something that could work on a web page would be ideal)",
            "Question 1: Is game developing a full time job for people committed to and have passion for the profession, or can a person pick it up as a hobby? \n\nQuestion 2: Would you advise a person completely new to game developing to focusing on learning the programming language first or learning the engine first (assuming the language is C# and the engine is unity/godot)?\n\nQuestion 3: For my first project, I just want to recreate a small cop and robber game where a player control a red pin move on a grid map to catch a black pin. Where should I start?",
            "Hello, I'm working on a small game for myself. I have a few questions about some of my ingame systems and am seeking conceptual advice on the best ways to connect and execute them. Would it be a relevant topic for a post here or is there a more appropriate subreddit. These are not questions to find in a FAQ or tutorial, nor are they programming (for the most part), or engine related. These are more about the system design structures and their connections in my specific game.",
            "Godot, KiriKiri Z, or Ren'Py?\n\nI want to get into game dev, and wanna try focusing on visual novels.\n\n\nSo far I've only created a simple platformer on godot, but I've heard you can make visual novels using Godot and something like Dialogic or Rakugo. \n\n\nKiriKiri is the engine the fate visual novels used, and they are some of my favorites. The downside is I don't know Japanese very well, I can read hiragana and katakana, but no kanji. And well vocabulary is an issue too. \n\n\nRen'Py is the standard answer you get when asking for visual novel engines to the western community, but well looking at some examples made in Ren'Py, apart from the windows port of doki doki, none of them seem to have a quality similar to Fate or Clannad or something.\n\n\nThere's also this other option mentioned here and there called Visual Novel Maker I believe, and I think it's by the same guys who made RPGmaker? And I do plan to branch out to RPGs later too. \n\n\n\nI'm really confused as to what to go with. Any suggestions/advice would be really appreciated.",
            "Hi! I was wondering in what order should I learn C#, Unity and Blender? MY initial plan is learning the basics of C# and Unity then using assests before I learn blender. Design process is a a whole job of it's own. What do you guys suggesting?",
            "Hi! I'm kind of testing the waters with game development at the moment, as it's something I've always wanted to do but always thought would be too difficult for me.\n\nI read through the megathread, and came to the conclusion that I'd try learning C# or C++, as well as GODOT or Unreal Engine 4.\n\nDoes it matter if I learn C# or C++ at the end? Unreal supports only C++ I guess? Is there a reason not to use GODOT or Unreal? I don't feel like using Unity thanks to the recent debacle.\n\nMy ultimate aim is to make a  retro-inspired 3D game one day (think boomer shooter, ps1 horror, retro rpg etc.) if that makes a difference, even though I plan on starting with simple 2D games.",
            "Hi all, game dev newbie here looking for an engine recommendation. I have been a software engineer for around 7 years and have completed a 2d unity course. My goal is to create a 3d car combat game with semi-realistic graphics. In general I am more interested in 3d games.",
            "What engine should I use for a bullet hell? My first time coding btw",
            "I\u2019m trying to learn python (with the intention of using this experience to transition to GDscript for Godot) with absolutely 0 coding experience. I\u2019ve also always struggled with math and haven\u2019t touched it since high school, so it\u2019s been years. What are the best resources you all recommend to learn?",
            "Hi everyone,\n\nI hope one of you can help me. I recently bought TCGEngine by Indiemarc on Unity Asset Store (It is 50% off). I've been going through the documentation that Indiemarc provided and some of the YouTube videos but I'm completely unable to do anything and customize the code.\n\nI'm deeply invested in creating a resource system similar to MTG and Yu-Gi-Oh (energy \\[lands\\], different and special types of summons). According to the documentation, I need to edit the Gamelogic.cs in the package, but I'm at a loss on where to start.\n\nI tried adding this snippet to the Gamelogic.cs script\n\n`[code] // Check if the player has an energy card`\n\n`if (player.HasEnergyCard())`\n\n`{`\n\n`// Get the mana value from the energy card int manaFromCard = player.GetEnergyCardMana();`\n\n`// Add the mana from the energy card to the player's maximum mana player.mana_max += manaFromCard;`\n\n`// Ensure the player's maximum mana does not exceed the limit player.mana_max = Mathf.Min(player.mana_max, GameplayData.Get().mana_max);`\n\n`// Set the player's current mana to the maximum value player.mana = player.mana_max;`\n\n`// Consume the energy card player.ConsumeEnergyCard(); } [/code]`\n\nHowever, upon compiling, I get told that things like \"GetEnergyCardMana\" are not defined, so the game won't compile until I fix these errors.\n\nI want to implement an energy/land system that can be used to pay the cost of bringing creatures into play and activating the abilities of special cards (think spell/trap cards).\n\nI don't need the entire solution, just guidance on how I would go about making these customizations. However, if you would like to take a look at the code from the add-on, and help me that way, please send me a PM so I can figure out how to do that.\n\nThank you!",
            "Question, why we don't have RPG maker here in the Engine FAQ? So its not a engine?",
            "# Is Pokemon-like a good start for the first game ?\n\nHi guys, I have wandering around the FAQ sections, how to start, which engines to use, etc.. for a couple of days and now I decided to get my hands dirty on learning how to make a game. My question is, I've seen that many instructions said that I should start with something really simple and straight forward like flappy bird, pacman, so is pokemon-like game easy enough to start ?\n\n**Pros:**  \n+ I can easily learn things to things by just creating the world, making my character move, learn how to create menu, screens, etc... before getting to complex gameplay. So basically, during my beginner phase, I would just create a game that my character move around my world without any combating.  \n+ There's a lot of pokemon game tutorial that I can follow before I can handle the game myself  \n+ And a lot of assets too  \n+ I have the feeling of creating my own world\n\n**Cons:**  \n+ It might not be that easy to me as I thought  \n+ I haven't yet imagined how I would handle battles, switching scenes, popup menus, etc.. (I can at least imagine/think about how to do other things like moving, tiles, world building)  \n+ I dont know...\n\n**Other Information:**  \n+ I know a bit about programming and I am working in IT field  \n+ I used Godot as a beginner - friendly with coding integrated -> more control yet still easy to learn  \n+ I have read about gamedev about 10-16 hours-of-reading up to now, including the megathread, som e interesting threads, some link attached to them and some articles about gamedev path  \n+ I have 2-3 hours/day to spend learning gamedev before I get tired (after my main job), if things are excited I can get to 4 hours  \n+ I've never drawn anything in my entire life.\n\nWhat do you guys think ? How simple is your first game ? Please share your experience.",
            "Are my PC specs good enough for modelling and animating Blender? \n\nProcessor - 2,9 GHz Quad-Core Intel Core i7 \n\nGraphics - Intel HD Graphics 630 1536 MB\n\nMemory - 16 GB \n\nMAC OS - Ventura 13.6.6",
            "Which is the best engine for handling multiplayer, an easy or not so hard learning curve for the programming language it uses and random generation (optional: and doesnt blow up a macbook)?",
            "im sure this is a question thats been asked MANY times before, but i have absolutely zero experience with programming/code in general, and i really wanna start learning. i have tried googling where to start and worded it in several ways, but i have found NOTHING. a course or smth would be great but i am willing to try most stuff",
            "Hi guys. I want to create a clone of Farm Mania (reference:[ https://www.youtube.com/watch?v=IR2RvkIhSkE](https://www.youtube.com/watch?v=IR2RvkIhSkE)). It's a simple point-and-click, worker management game. How do I do it? I'm proficient at programming (mostly web techs and Python), I'm looking for the more specific know-how, like should I use some existing engine or I don't need one etc. Thanks in advance.",
            "I had a neat little idea of an alchemy style game where (briefly) you can combine mixtures in a cauldron, and if the different mixtures touched an effect would happen. Does anyone know the best game engine to go about these responsive fluids?",
            "[removed]",
            "Hi guys!\n\nI've been working on my own little projects here and there for a few years now, with my primary platform being Roblox. While it has served me well over the years, it has some problems with its image and how games on the platform are perceived, and it makes me hesitant to put a major amount of effort into a game if its platform may stunt its fruition. \n\n  \nIt does have its pros, however. The biggest one is Roblox's provision of servers and a means of sending information to and from said servers. For this reason, I have relied on Roblox for the majority of my game developing experience. I have come to the point in which I want to put all of my time and effort into making a multiplayer game, but I have come at a crossroads. \n\n  \nI have a tower that I've dedicated to server hosting, but it's nowhere near powerful enough to host a gaming community, and nor do I have the knowledge and expertise regarding server communications to set that up. As far as I know, there aren't any game engines besides Roblox that provide this part of the game for you. I could attempt to figure that out on my own with an engine like Unity, but I imagine that will be a time consuming process (which I am willing to do), as well as the previously stated problem with the lack of hosting power. How should I proceed?",
            "WHERE TO START? WHAT ENGINE TO PICK? \n\nI\u2019m a beginner, I tried coding in python and didn\u2019t understand code at all. I don\u2019t understand the lingo and vocabulary as to why some words work and others don\u2019t, coding seems complicated to me. \n\nI\u2019d like to make a HD 2d game or 2d or 2d top down game, something simple that I can eventually expand on such as vampire survivors or like a castle crashers type kinda game. \n\nI also suck at creativity with art, kinda. \n\nI was thinking unreal engine as it has the visual coding aspect to it and a wide range of videos and assets but a ton of menus and lingo I don\u2019t understand. \n\nI heard Godot was friendly for beginners, but don\u2019t know much about it. Don\u2019t know much about construct either and don\u2019t have an interest in unity. \n\nI would like to make something of this hobby to hopefully turn it into a career as an indie dev, so getting the game into multiple platforms would be great. \n\nI need suggestions on where to start and how to learn game dev that I can either transfer over to another engine or an engine I can stick with for multiple projects. \n\nSo far I\u2019m interested in unreal engine as it may be easy to take advantage of the coding web design system and seems like there\u2019s a ton of assets to pick from and tutorials plus easy enough graphics options like adding shadows to spice stuff ul easy enough. \n\nI\u2019m looking to make it stupid simple to start then turn it into a looter destiny like 2d hd pixel art/ cartoonish project. Maybe even multiplayer eventually but I\u2019m thinking too far down the road I think.",
            "Hi everyone! \nI needed some advice on my career planning.\nI'm currently a software development Engineer at Amazon. It's been over a year that I've been working here. I'm 23, and this is my first job. The work here is fairly interesting but it's not something I want to keep doing in the long run. I've always envisioned myself developing games since was a child, but I've no idea to where to start, which tech stack to start with etc. What advise would you give me to direct my career towards being a game dev?",
            "How transferable are the skills between languages and frameworks?  \nLet's say i'm starting with Lua, because I find Tic-80 really interesting but half a year down the line I want to try C# and MonoGame, would I be able to pick that up \"quicker\", as my understanding of game logic has (probably) grown and it's just a matter of putting it in with a different syntax?",
            "Hello guys, im an artist that has some good ideas for a game, its like a puzzle, rpg, with story telling and different endings, but i am really bad with any technical/computer stuff, and im not really wealthy, so does anyone knows which softwear would be better for me?\n\nIf i manage to make something, wouldnt mind making some money with it too.",
            "What do you think about \"web based games\" that dont really have a UI.  Imagine eve onlinebut without any of the graphics.  Is that really a game?",
            "Hello everyone!\n\nI am somewhat familiar with the basics of Python, but except for that I am pretty much a total noob in anything programming-related. However, I have this project for a sci-fi strategy game, which I really want to do.\u00a0\n\nHere\u2019s the premise:\n\nI want to make a single player sci-fi strategy game, something in the style (and graphics) of Master of Orion 2 (1996), but a lot simpler. This game will not feature any AI-opponents, there will be no turns, no combat. I want it to essentially be a glorified one-player resource management game.\u00a0\n\nI basically have a big Google Spreadsheet which calculates resource values depending on how much territory a player has and which buildings/research they are currently building/researching. In essence I want to transform this spreadsheet into a game. Slap a pleasant UI-interface on it and add a 2D galaxy map, where the player can do territory management.\n\nNo 3D assets, just a 2D interface with dedicated tabs for economy, science, fleet management etc.\n\nIs this even a realistic goal for a person with very limited programming knowledge? Is it possible to learn on the go? Which game engine would be most suitable for such a project? Any other tips are also very welcomed of course!",
            "Please help me understand the process of creation so I can help my sons with their card game concept. (Beginner Level: -100) The beginner FAQs and documents are light years ahead of our current point of development.\n\nMy 15-year-old twins have been working on a card game concept for a few years now, and I do not know how to direct or teach them what they need to know to move forward with this project. We have come to a standstill, an impasse, a point of stagnation, and I don't want to allow their dream to fizzle because I don't know the right questions to ask or resources to provide.\n\nA link to a Google Photos album with a few snapshots of their drafts: [https://photos.app.goo.gl/cMNGC36A7piXQCWz9](https://photos.app.goo.gl/cMNGC36A7piXQCWz9) I love the concept and have been impressed with the level of thought and detail that they've applied to the card interactions. I've only just come to understand the scope of the game they are imagining and that it would have to be a digital card game. I've never played Inscryption, but they have, so it's the only example of a similar game that comes to mind.\n\nThere are notebooks and pencil boxes full of designs and layouts at this point, but we have come to a point of stagnation, and I don't want them to become discouraged. We don't know what we need to know to turn these images into a digitized format or the path to follow. I don't even know what questions I should ask them to help them create goals or formulate actionable steps to move forward with this.\n\nAny help would be greatly appreciated.",
            "Hi guys, I'm trying to become a **mostly a game designer and NOT a coder**.   \nI can program decently and understand code pretty okay-ish, but I just don't want to be a coder in the industry. So, I still need to make portfolio and finish some games for my game design dream.   \nAnd there is a catch: **how to stop care about my code and it's quality all the time?** Like, I understand that nobody care for my code quality while playing my game (if it's not lagging as hell, lol), but my obsession with good practices, patterns, etc. - ruin my progress, because I want to code to be good, but I simply can't make it good enough, because I'm not very interested in learning coding and want to focus on game design mostly. \n\nHow to overcome it? How to stop overthinking my code and just make spaghetti shit, but finished shit?   \nThanks!",
            "So I am a newbie in using any game engine, but I want to make a very simple story game on desktop, where the UI is a phone/texting/messaging interface, but functions similar to a visual novel (next line appears when clicked). Also adding some choices here and there that give different endings. How can I achieve creating this? Just a short story for now as I'm looking to create a simple prototype first. As this is for a project in school, we cannot use low-code platforms such as Renpy. Hence I'm looking at just using the big ones. If anyone could help with tutorials or videos would be greatly appreciated!",
            "Does anyone have any resources on making games from scratch? I mean without a game engine, like pure C++ or Java or something, I'm more of a programmer than a gamedev and after seeing animal well and how that dev made his engine from scratch and feeling how snappy that game is and how it's like 30mb I've become inspired to figure out how to do that, any books or starting tutorials or documentation or anything anyone has I'd appreciate.",
            "I'm a total newbie to game dev! I'm trying to create a 2D mystery dungeon type game, and I've been doing tutorials (using Godot currently). I want to try making a basic room that's randomly made each time, both the layout, the placement of enemies and items, and where the exit is.   \n  \nWhat should I look up to find what I need? I don't know what the term is for what I'm trying to make, although I'm sure there is one!",
            "I'm current finishing a halfbaked plataformer, i did it more for learn Python Arcade than for make this specific game, and as i'm current unemployd i wanna put it in the \"name ur price\" type at [itch.io](http://itch.io), but the art and music are not mine, they are CC0 so i could in theory do it. But would it be better let it be free? And make other way that people could suporte my work?\n\nAs i'm finishing this project, i have another in mind already, should a focus in this as a 100% my project, from art, code and music? Or use CC0 assets to create more of a portifolio and experienci and so start my \"current dream project\"? The project is a dungeon crawler that is a genre that i rely like and i'm full of ideas for it.",
            "I've started a team to make a side scroller game with 2d characters, 3d backgrounds, & text-based choices. We're using Unity, but we're all still students (& this game is the first for my Indie company).\n\nOne thing I'm curious about (but not concerned about) is the 2D characters w/ 3D backgrounds. I've seen some platformers that I believe are made that way, but I'm not as familiar with side scrollers (Spiritfarer is my first thought, but that's all 2D). There's no platforming in this game, only a side-scrolling camp screen & text-choices for anything outside of that (so a majority of the game).\n\nAre there any tips, suggestions, or recommendations of specific games to study? Any help is much appreciated! My own position is Narrative Writer & Background Artist.\n\nThis game will eventually go to Kickstarter, but we want to get quite a bit of it done (maybe even a playable demo) before we do that!",
            "(which stack to use)\n\nfirst some infos to the game:\n\nIt is aimed to be a Multiplayer game for the browser with multiplayer. it would re real time. Player-wise i think in the dimensions of 20-30 who interact with each other. Graphics wont be crazy as i aim for a 2d pixel game for the beginning\n\n\n\nthere are different ways to go on about it which i found:\n\n1. going with unity, using a websocket based network libary and port it to webgl\n2. programming in c/c++ and port it to js trough emscripten\n3. use a js libary like phaser 3\n\nUsing unity would be the easy route as you get the option to port to webgl and have plenty of resources, the big problem being the change of monetization of unity\n\nProgramming in c/c++ would obviosly take more effort as you most likely need to do pretty much everything from start, altough it will probably run smoother as you dont have a game engine with stuff you dont need. Also i did learn c++ in school for 3 years and do have my fair share of experiance.\n\nRegards phaser 3 i have no idea of the hardness, so maybe you can give me more insight\n\n\n\nIf you are aware of a different alternative, i would love to hear about it.\n\nThanks in advance.",
            "Is unity OK for a text adventure with some pixel art on the side I want to use my beginner c++ knowledge for a simple game",
            "I don't know if this is the right place for this question, but here goes. I'm currently getting started making a top-down, pixel art, 2D adventure RPG on Godot. I already wrote the story last year in college, and I have the whole summer to do the art. I really like the cozy feel of pixel art, but I want it to still look good on a bigger screen. I planned to use Procreate on my iPad. So here's my question: \n\n1. When drawing my sprites, should I use a 1080p canvas, zoom in, and set the grid to 1 pixel so that I can fill each pixel?\n\n2. When drawing the maps, do you draw the whole map first, import it into the engine, and cut it apart using the tile map tool? Or, do you draw little 16x16 terrain tiles first and then kind of \"Minecraft build\" your maps with those terrain tiles piece by piece? For example if you wanted to do a forest map, do you draw the forest, or do you draw a little 16 x 16 piece of grass and build your map that way? I hope that makes sense.\n\nThanks in advance!",
            "\u201cNewbie\u201d question:\n\nWhile I am a competent developer (python, powershell, back in the day c# and some basic c++), however most of these languages aside from extensive web app experience in python are more IT / devops focused.\n\nI am interested in trying to make a simple game I had come up with like 20 years ago.\n\nEssentially a side scroller a la old school shareware games like commander keen.(single player only)\n\nWhere should I start, what engines should I look at, and any recommended modules, plug-ins, tools, I should investigate? \u00a0I am OK with using AI tools to facilitate asset generation.\n\nEnd of day, I feel like I can figure out the actual coding aspects, but the game dev tooling / z engine choice and art aspects are where I don\u2019t have a good foundation. \u00a0(Or just suck aka making assets will likely be a struggle for me because I\u2019m not creative in that way).\n\nBooks are cool, and any recommendations for engine would probably be helpful so I can investigate.",
            "Hello everyone! I\u2019m new here but have been in solo game dev for some years now and decided to take it from hobby to my full time job. Still have tons to learn of course and would like some help/tips on gathering user research. Right now I am in pre-production/prototyping phase and attempting to gain feedback and insight on some questions I have regarding how people feel about certain gameplay mechanics and I feel like there has to be a more efficient way to gather data. Outside of asking in reddit posts/polls and asking friends, surely there is a better way to gather more insight and feedback. If anyone has had any experience with this or any ideas, it would be greatly appreciated if you could share your insight!",
            "[deleted]",
            "Hi there, I\u2019m new to game dev with no prior experience and I have decided to start with C# and Unity. I\u2019ve gotten a course but my first problem is that I have a late 2014 Mac and the instructor in the course I got is using Visual Studio on windows and with visual studio being discontinued on Mac, it means I can\u2019t get. I tried installing windows using bootcamp, turns out I\u2019ll need a flash drive but unfortunately I won\u2019t be able to get it now (Don\u2019t ask why, it\u2019s a long long story) I should be able to get it by month end though, but I\u2019m considering running windows on a virtual machine but with parallel\u2019s payment plan of a kidney/year, I can\u2019t get that so I\u2019m going for VMware fusion. So firstly, before I proceed, is programming going to work on a Virtual Machine? Secondly, I plan on selling my Mac and investing in an actual windows pc, please advise how much I should consider putting down for a good enough pc including the monitor and all. Please note that I\u2019m on a budget but I\u2019m willing to expend everything I can towards my journey to becoming a game dev.",
            "I really want to make a video game and have an idea. The only thing holding me back is that I have no artistic talent. I can barely draw a stick figure. Will this hurt me long the longor run or is artistic talent like drawing, not needed",
            "This upcoming fall semester, I'm taking a course on 3D game development since it's being offered for the first time. From what I know so far, it includes a semester-long group project where we get into groups of up to 4 and have to create a working game demo from scratch using C++ and OpenGL (so no use of existing engines like Unity, Unreal, etc.).\n\nI know the megathread is here to provide resources on the technical side of things, but I wanted to hop on here and ask for any additional tips or advice to keep in mind going into the class regarding outside things like project & time management (how should we break down tasks, what should we prioritize, that sorta stuff). While technical advice and extra resources not covered in the megathread are also appreciated, I want to mainly ask about this.\n\nThanks in advance!",
            "I\u2019m just getting started making my own little games that I can host on my website, and I\u2019m building them with html, css, php, and a lot of JavaScript. Is it a good idea to start out building JavaScript games? Or is that not really a good purpose/use of JavaScript?",
            "Ive recently begone diving into game design with Unity/Blender, this is more so a 3d modeling question, when it comes to building characters are they built like this by putting different type of basic blocks together and morphing them? I know it probably looks terrible but this is supposed to be a frog character\n\nso I used a lot of spheres to shape the eyes, head, arms, leg, and body. do I got the general idea of 3d modeling down or is there an easier way of doing this? [https://imgur.com/a/pVWEc40](https://imgur.com/a/pVWEc40)",
            "Hi, This is mostly a question on how hard it is to just get started in game development, and where to start.\n\nTo the point:  \nI want to make a game, post it somewhere, and make $100 over the next few months.\n\n  After seeing cheap game ads and thinking every single time \"this is so simple even I could make it\", I have decided to do just that.  But I don't know where to put it when I make the game, that will make me any money at all.\n\nMore on my experience:  \n  I've never made a game before, but I thought I would try it for fun.  I have a little experience programming, and of course I used scratch forever ago, and used the Roblox studio a bit, but I've never really made a game worth playing.  I want the $100 so that I can eventually put games on Steam.  Yes I have job, but just for fun I just want to make money from a game, and then use the money to make more games.  Is this viable, or should I just make a game for fun, put it on [itch.io](http://itch.io) or something, and be done with it?  And is it viable to basically make mini-games and make any money from it?\n\n  I've tried researching this stuff, but have yet to find a straight answer as to what platform is the best to start on.  If it matters I plan on making my game(s) in Godot.",
            "I\u2019m seriously considering starting to try to make a game, although I have 0 experience with coding or anything like that . Thinking about going to collage for software engineering . But want to start understanding the basics right now I downloaded a game development engine  to try and make a test game just to learn. But I am completely lost . But basically just wondering where to start ? Should I learn code before I try to develop a game ? Should I just learn how to use the engine ? really don\u2019t know what to do at the moment.",
            "Hi,\n\nI've already asked some questions here, but there is the final burning question I still can't make up my mind on... and this is really the oldest question in the book.\n\nI've narrowed down my engine + script choice to either Godot+C#, or Unreal Engine and C++. And I simply do not know which road I should go down. The pros and cons as far as I see are as follows:\n\n1. Godot+C# - lightweight engine that seems easy to get a grasp on, but due to it being a less popular choice learning resources and tutorials seem more limited. On the other hand, it's fully open source. I also have marginally more experience on C#.\n\n2. Unreal Engine - much more popular and resources are everywhere - but also seems more demanding. Kind of a higher workload, but better results kind of deal maybe? Would have to look into C++ more if I want to give this a serious try.\n\nFor reference, I'm mostly interested in making 3D, first-person games for PC. I'm glad I've narrowed this down to a binary choice, but this final step seems paralyzing, as I feel like whatever I do, I'm going to end up thinking \"man, I wish I'd have picked the other engine\" if you know what I mean. I know I should just pick one and roll with it, but I really want to get a good start and avoid early mistakes.",
            "I have a question thay has probably been answered before. I am trying to make a roguelike in godot. How do I go about doing a procedurally generated map of rooms?",
            "how did MK1 (arcade old one) get the models into the game? I know they used real people in costumes, but they had no green screen. see here\n\n[https://www.youtube.com/watch?v=f-AECxvqObs](https://www.youtube.com/watch?v=f-AECxvqObs)",
            "So I've wanted to get into the gaming industry for awhile now and I'm thinking about going to college or doing some kind of program for it. But I don't know exactly what to go for. I make alot of concepts for enemies/creatures, weapons, effects and more but I'm not the biggest tech guy and don't really have a big interest in coding/programming. So I'm wondering could I still get into the gaming industry without doing any of that and what exactly should I think about going to school for if so.",
            "tl;dr: Experienced programmer (intentionally worded as programmer), Unity based projects whilst at university, never made a full blown game.\n\nLooking for recommendations of an easy to jump into tool for effectively a game-jam like approach developing skills and playing with concepts. (Not make a full blown game)\n\nAny suggestions, or should I just use Godot? (Godot feels like it has a steeper initial learning curve, but once learned I could easily jump into a new project.)\n\n------------------------------------------------------\n\nAdditional Info:\n\nDone next to no game development since leaving Uni (3 ish years), however have been in a role that's allowed me to improve my development skills. (Definitely not on par with a professional software developer, but have explored the traditional skillset of full-stack roles, software testing (automated e2e, unit, BDD/Requirement based), as well developing Arduino-based projects for in-house data capture and product testing. (Data guy in a manufacturing company with an SE degree = \"free\" bespoke software))\n\nSo given I have significantly more confidence with my development skills since last doing anything related to games, along with more experience with 2D art and pixel animation (hobby), I'd thought I'd slowly put myself to the test and bring some of these skills together.\n\nThat said, not 100% sure whether I should be jumping into Godot, or whether there's other, easier to get started with tools, that I can use to just initially get into the routine of working on games in my spare time again. (And transition over to Godot at a later date)",
            "Hey everyone! I'm interested in making 3D models specifically for video games. However, I have 0 experience using any 3D modeling software. \nDo you recommend any good courses, tutorials, or Playlists that really teach about 3D modeling for games? I did some research but found some very basic ones.. I would like something more \"complete\" that goes from the basics to advanced stuff\n\nThanks!!",
            "Hi everyone, beginner here. i recently started making my game and had made some good progress on it so far.\n\nhowever, i recently learned that i should probably have some kind of version control and i read stuff like github can help me do that as well making accessible for others to work on it on their own device.\n\nmy question is, do i have to start over to put it on github? or can i put my already progressed work? also is there any kind of tutorial for this? i dont really know how all that works.\n\nthank you,",
            "Been wanting to get more into level design since I've begun developing games, and while I know it is a very in depth domain to research, I want to start experimenting and getting used to some of the design practices to apply on my own. However I'm not entierly sure where to start.\n\nI've got some experience making smaller scale models in blender, but nothing near the size of a game level, and the process of exporting that to Unity, fixing up it's materials and resizing to fit is rather repetitive and doesn't feel right as constant iteration means several minutes before I can see a change reflected in game. This seems very inefficient and doesn't sound right.\n\nWhen it comes to making levels, or rather getting into level creation, what should I be using and how should I go about it? I know there are some games and even game engines like source with some great inbuilt level editing tools which enable that constant iterative loop, but i'd also like the flexibility of blender in terms of how you can shape and place things. One benefit of using an editor for an existing game would mean I have a established game mechanics and movesets so I could just start by figuring out making levels without the initial difficulty of a constantly changing character controller, in my inexperienced eyes anyways. Would it be at all worthwhile to try and learn those established tools for existing games just to begin creating things? Are there easier ways to make levels in Unity that don't rely on a tile based prefab workflow? I'm ultimately just a little bit lost and could use some guidance.",
            "Where's the link for the recommended laptop/specs? I seem to be lost, skimming through all the links.",
            "https://youtu.be/gnpC5sTgqsM?si=yRfoWNoVAtKr3tZz \n\n\nHow expensive do you think the budget for this game was? It was made in Japan by a company that has been absent from the industry for many decades (this is their first brand new game in forever), has around four hours of main story gameplay, is priced at 25 bucks, was made in Unity and around 45 people are credited with the making of it. According to games-stats, it only had an estimated net revenue of 27000 USD. Pre-orders for the Deluxe edition with 500 copies for each console is sold out on Switch, but not sold out for PS5. Do you think it broke even, if we take into account that Japanese games/platformers do better on consoles and estimate that the total net revenue is around 60-70k? I am as a fan desperately worrying that it flopped \ud83d\ude25 It looks like a slightly lower budget Yoshi game to me personally.",
            "I want to develop a series of games that are extremely compact and quick to download and run in your browser, and which feature 8 bit style graphics. I'd like to do tower defense, a barrel shooting game like the Evony ads on Youtube, and a math level monster game like the Hero Wars ads. Where should I begin?",
            "I don't seem to be able to click post to create a new thread. I had title, flair, body text on my draft of the post. What can't I post something here?",
            "hey i just wanted to know how does one get a job in QA testing?",
            "Hello, not entirely sure how to word this but here goes. I saw a lets play for a game called The Beginners Guide in which the whole story revolves around someone playing a game that their late friend developed. All the worlds in the game are really surreal and without too much spoilers basically ends up being a digital diary for the creator instead of an actual game that he intended to sell. The worlds in the game were empty and felt very liminal - like no one was supposed to really see it but the dev still made it anyways.\n\nThis concept interested me so much I immediately got as many free game engines I could find so I could create my own empty world. I went in blind so obviously it should be no surprise that I didn\u2019t accomplish much and eventually other things took precedence and I stopped trying to make it. But I really want to try again and would love some pointers as I am a complete noob when it comes to indie developing. I have no intention of marketing this game or anything I just want it to be a bunch of worlds I create and explore (preferable in a faux PS2/early pc gaming style). And maybe, if it\u2019s possible, make it so my friends can explore it too. \nHopefully that kinda made sense? Any help would be so appreciated, even just pointing me in the direction of some tutorials or something? Thanks!",
            "I want to make my own multiplayer game, and I already have a few courses that will help me handle most of the things (UE5 ultimate course, UE5 multiplayer shooter on Udemy from Stephen Ulibarri), but I also want to make my own animations for this game. I'm not worried about the coding part, since I have the courses that help me, and I do have a bit of experience, especially in coding, since I'm a software engineer student, but I've also done two semesters on game design, so I have quite a bit of experience on that.\n\nThe game will be about medieval jousting, so two players riding towards each other on horses, finally striking each other with lances and it will be created using UE 5.4. I'm mostly worried about the animations, since I've only touched on them slightly in Unity and a bit in Unreal, and I mean creating them.\n\nI want to know what would be the best way of making high quality animations for my game. I'm very open to learning how to animate in Blender or Maya, having some experience in modeling with Blender, but since 5.4, I'm also considering animating straight in UE, and this might be important, since I want to have physical animation/simulation on certain animations, such as when a player gets hit by a lance, or later on, perhaps swords and other weapons.\n\nConsidering I would have to make those animations in 3rd party software like Maya to get the best results, the workflow could be a little complex, since I would have to import those into UE, then configure the physical animation/simulation part.\n\nAlso, I saw that to get the smoothest animations and best behavior, an advanced locomotion system is needed.\n\nI'm looking for some recommendations of where to start in order to achieve what I mentioned, and if it is worth learning to animate in 3rd party software and importing it into UE, or straight up start animating in UE. Preferably, if someone with experience in this domain could give me an informed opinion, it would be great. Cheers!",
            "I'm starting small, I have an idea for a simple Geometry-Dash/dodge-the-obstacle style game. 2D graphics, your controls are up and down, very basic. I have no idea where to start with this or what engine would be best for this type of game. \n\nI'm considering GODOT, but thats mostly because future projects I think would work well with it. Should I start there and make it work? Or is there a better system for this simple style of game?",
            "Since I\u2019m a kid I have ideas for games, because I love gaming. But with this one, I think I should try to do it, because it\u2019s probably not that hard, and it\u2019s essentially based on bringing two games together to form one.\n\nIt\u2019s gonna be a mobile game : what engine should I choose ? It involves pedometer functionality from phones",
            "I wanted to make a simple, and I mean simple, 2D platformer.\n\nSo simple, that I was hoping for an engine that works almost like Mario Maker. Throw it some 2D Sprites, assign a sprite as the player, other sprites as ground/walls. Then just drag and drop the sprites around to make some platforms and bam export game done.\n\nAs someone with a full-time job working in C#, I picked up godot after tons of recommendations.\n\nAfter one day I barely have a functioning player body, and the movement is stiff, bad, and jank. Horrible for a 2D platformer.\n\nWhat am I doing wrong? Is this stuff just hard? Is there not an easier engine that doesn't make me build the movement/physics from the ground up each time?",
            "I want to make a game like this video: [https://www.newgrounds.com/portal/view/843588](https://www.newgrounds.com/portal/view/843588)\n\nCan I do this in godot? Or would another software be better. I want to make a game with this sort of visual novel type style with weird and interesting effects. I also want to incorporate some point and click elements such as clicking on the screen to intract with objects, enter new rooms, enter dialogue with characters, and use items on objects and characters.",
            "Is it generally looked down upon to use higher-level game toolkits (for example, Game Creator 2) instead of coding the game without them? I plan to use them to lessen the workload since they offer exactly what I hope to achieve.",
            "I'm looking to get a scope of how hard it is to achieve what I want to create\n\nEssentially, I would like to create something similar to war robots [https://youtu.be/70LPdBgXRLk?si=uc9eLVBwCAvyp129](https://youtu.be/70LPdBgXRLk?si=uc9eLVBwCAvyp129) (2014)\n\nHow hard would it actually be to create? Something with a lobby, customizable robots with weapons, multiplayer matches. The art is quite aged, they did a reboot of it, but how hard would the old art be to create? How much would it cost to have an artist or artists handle it? How does the hiring and finding artists go?",
            "tldr: Python or C++ library to create a simple card game?\n\nI am currently making an online-multiplayer version of port royal (the board game). The server is halfway complete so I will soon have to write the client.\n\nSince I have no experience with any gamedev library, which one should I use? It needs to be quite simple to use and -as much as possible- able to create games that don't look like a windows 95 solitaire. Would PyQt be a good choice?",
            "I want to make an old school browser based virtual tabletop. I just want people to be able to drag and drop gameplay elements, roll dice in the browser and so on. So I don't really want to learn to use a game engine. Think something along the lines of neopets where each url is a different aspect of the game. What beginner books/guides would help the most with a project like this?",
            "I want to make a tycoon game where you are a software developer but i don't know which engine to use. Don't recommend unreal or unity since they are proprietary/closed source and paid. The engine needs to be open source and available on linux (Debian 12)",
            "What do you all think about Godot's documentation? Is it good for new game developers and programmers? I'm planning to use C# for scripting, which is a language I'm comfortable with, but I don't know what the documentation is like for that.",
            "[removed]",
            "What is the best game engine to create a 3D game with a fixed camera ?\n\nI'm planning to create a card game in the style of Buckshot Roulette, a 3D game where we click on the elements on a table but with a fixed camera (no movement). Similar graphic quality too. So what would be the best game engine for a project like this one ?\n\nThank you in advance !",
            "I'm wanting to eventually make a sprite based FPS akin to DooM or the old build engine games.\n\nWould it be better to use GZ Doom or an engine like say Godot (where I could bring my knowledge forth to make other types of games)?\n\nAlso how does one go about learning to make sprites like the ones Doom, Duke 3D or Blood used?",
            "Hey everyone! I'm going to into my junior year of high school and trying to figure out what I want to do in the future. I've had past, very minimal experience with gamedev, most making small games with unity a long time ago. I was passionate but laid off of it to focus on school but I'm considering it as a job in the future. I just have some questions.\n\nHow is the industry job wise and how is job security?\n\nHow necessary is a college education and what majors should I look into? (Follow up, what should I do in hs to secure acceptance to a college in a compsci/gamedev related major: I live in the bay area so competition is super high)\n\nSince I will probably start from scratch again due to everything w/ unity, where should I start engine/language wise?\n\nShould I consider game dev as a main source of income?\n\nThank you everyone!",
            "I plan on making a game that uses the same sort of alchemy mechanic that Shovel Knight: Plague Of Shadows uses. However, I fear that just fully copying the mechanic is very unoriginal and kinda sad to be honest. How could I use/change the alchemy mechanic to make a fun and original game?",
            "Hey, I wish to answer right now the question associated with \"which engine to pick?\" I hope this can help some of you.\n\nI moved from different languages in my life. In video games, I sadly started in the worst possible way: iOS and Xcode. Not recommended at all.\n\nI quickly moved to Unity where you can start creating games very fast and C# is an easy language to understand. If you plan to create 2D platformers or top-down video games, this is definitely the way to go.\n\nAfter five years of using Unity, I moved indefinitely to Unreal. This is the toughest of all but the reasons behind my decision were:\n\n- Job Opportunities: It is true, that studios don't look for as many developers in Unity as they need Unreal. Even any serious institution of game dev is focused exclusively on Unreal.  \n- 3D Games: any game that requires 3D Unreal provides better libraries and mechanics for it  \n- Blueprints: Unreal includes the best Visual Scripting tool on the market. Once you understand how it works, you can literary create any video games without writing a line of code. Nevertheless, the best potential of Unreal is achieved using Blueprints and C++ together. And C++ is a tough programming language.  \n- Other areas beyond Video Games: Unreal is offering today modelling (which is expanding quickly to not need Blender or Maya), Rigging, Cinematography, Architecture, Design, and VR and AR. In all the previous areas Unreal is the most solid engine platform\n\nOf all the people I know who worked with Unity and Unreal, they all agree that Unreal provides them with more possibilities than Unity. They took the time to understand the tool knowing that it was hard, and then they moved to never go back (me included).\n\nNow, I have to tell you again: Unreal is not easy. If you want to go for easy, then pick GODOT. But remember, easy won't get you to new possibilities in the future, nor the expansion of your career.",
            "i want to learn some game AI/ autonomous agent techniques before i go full ham, to breadboard my game concept. i want the NPCs to gather resources and trade in a realistic manner, to maximize their own outcomes, and of the strategies i've seen GOAP looks like it would fit that best. the problem is that most of the GOAP implementations i've looked at depend on boolean conditions. there doesent seem like theres a good way to evaluate two actions with the same outcome at different costs and quantity of outcome. say you want to build a house. in planning a precondition would be to have wood, but if you could pick up twigs with no precondition, or chop down trees with the precondition of somehow having to aquire an axe, there doesent look like evaluating weather its worth taking the more expensive, but higher yield route would be very straight forward, unless i'm missing something.\n\ni dont know if i'm asking this very well. i'm just not sure where to look to learn about this.",
            "Is raw open gl in C still used. I had a pretty good game back in the day.  Stil runs but I figure everyone uses an engine or wrapper",
            "Hello! I'd like to learn multiplayer game design and architecture - is one of the major engines a bit easier to extend once you've made a prototype?",
            "I want to learn Audio production. Where do I start?\n\nI ask this here because I do not know even the tinniest hows and whats of making music/sfx. Programming has FreeCodeCamp, 3D moddling has blender and donut. What does audio have? I have failed to learn LMMS once an year ago and audacity seems to be for audio engineering and not making music. What are some sites/tutorials that can help?",
            "I've been very torn on what engine and code to learn I am using sololearn and different tutorial guides to learn unreal engine and c++ but I heard this is harder to do then work with unity and C#. I have time off this and would really like to make a platformer, hoard game, mobile apps orpossibly an rpg as an end goal. I really want to work with 2d and pixel art but I think it would be helpful for me to work with blue prints on unreal engine.\n\nI'm committed to learning just really need advice on which engine and code to use/learn.",
            "Hi! I'm new to both this subreddit and gamedeving and was looking for some advice.\n\nAlong with my wife, we have a project for a little 2D RPG game featuring a story written by her and taking mechanical inspiration in TTRPGs like Dungeons and Dragons. \n\nResearching for what engine to use/learn got me to two main options: RPG Maker and Unreal. \n\nI'm leaning towards RPG Maker due to its simplicity, but I noticed the mechanics of the JRPGs It is based on are quite different from what I'm trying to make. However, I've seen that It can be modified and that it's written in Javascript, a language I'm kind of familiar with, so I may be able to learn and customize it to better resemble my idea.\n\nOn the other hand, I'm inclined to start directly with Unreal, being that almost any kind of game can be made through it and I will eventually learn to use it for future projects. However it's complexity intimidates me and makes me wonder if starting with RPG Maker may be a better choice for this project.\n\nThis is what I need advice on, should I:\n\n1) Finish to learn JavaScript and customize RPG Maker to suit my project.\n\n2) Learn and develop the project in Unreal.\n\nI'm aware this may be too much for a first project, but still I would be grateful for some Insight on what would be better for this particular project.\n\nThank you in advance.",
            "Hello, I was wondering if a game like connections, [https://www.nytimes.com/games/connections](https://www.nytimes.com/games/connections) , should be made with only HTML, JS and CSS, or are these games typically made with more libraries and a proper frontend / backend",
            "hey guys! i'm interested in writing for games, narrative development, performance directing, storytelling based roles that don't involve programming skills. i'm a filmmaker and have a hefty amount of experience with all of the above, aside from making friends with devs and jumping into a few jams, what other ways would you recommend I work towards an actual gig? are spec scripts a thing in game dev? also, is there any specific software you recommend for game writing & dialogue branches specifically? My brain wants to just keep using final draft and miro lol. tysm!!",
            "Hey guys, I'm starting to develop a Deck builder game from scratch in Java and my question is this: \n\nIf I'm dealing with a lot of cards should each card be a class or should I work with a database or something similar?\n\nThanks in advance.",
            "I have zero experience, and I hope this is the right place to ask this. How might I go about doing a reskin of the mobile game Hoplite? \n\nIt's a really simple pixel game and has like 20 assets total. I would think this should be relatively easy. Just replacing a few images. I  just don't know how to go about it.",
            "I got an idea to make a simple RTS game with multiplayer as a project for a group of friends (since we remembered creating custom races in Warcraft 3 World Editor, but I'd like to make it a bit more interesting and bit more personal), but don't know where to start.\n\nI'm familiar with programming in general, and know my way around the basics of object oriented programming (maybe a bit rusty, but I did good at university), but completely new to game development. I did make some random platformer game during high school while following an online tutorial, but never done anything else.\n\nI thought I'd make something similar to Stronghold Crusader, as a 2D game, which simulates 3D. And maybe could, instead of making complicated 3D models in a 3D engine, utilize pixel art in this 2D engine to make it unique looking. If you guys could point me anywhere where I could start step by step on how to approach this, I'd be immensely grateful.\n\nI believe that multiplayer sync and pathfinding algorithms will prove a bit challenging, but I should be able to get it, given enough time and proper resources. Feel free to warn me of any other things which could be challenging.",
            "There are tons of marketing related phrases like\n- Know your audience \n- Talk to gamers\n- Thinking from the perspective of potential players\n\nI'm interested in what it all actually means in practice. Like, what does it mean to \"talk to potential players\" in the context of an Indie game developer. \n\nThere's also some advice from an experienced developer I read on Twitter along the lines of \"don't focus only on what you think is fun but also from the perspective of potential players\" and I sort of get it in theory but how would I go about doing that. What does it all mean?!\n\nOn another note, is there some must read marketing book(s).",
            "So I have little to no experience in game development. I am currently getting into golf and I want to create some basic sim software. I basically just want to take the velocity and launch angle and apply it to a ball in unity. Does anyone have a way to do this in a way that I can actually learn and not just use a tutorial?",
            "I have 4 YOE building web service with Go and would like to try game development. I know there is ebitengine which is a game engine in Go, do you think I should try building something with it or just go for other popular framework/engine, e.g. Love2D, Defold ... etc",
            "someone got tutorials for gamemaker ? not gamemaker 2 but just gamemaker thanks",
            "I\u2019m looking to get into game development and want to start with a game similar to the mobile game \u201ctiny tower\u201d (a 2D building manager game) any advice on what engine to pick or anything else I might need would be appreciated!",
            "* Sleep. Exercise. Diet. Hourly breaks. Your brain is not made of pure information and energy, it is tethered to the physical plane.\n\n* Read Atomic Habits by James Clear\n\n* Read Debugging by David J. Agans\n\n* Godot is a great engine because it's fast and you can add things fast. No getting distracted while the loading bar fills up.\n\n* Clockify has really helped me be more critical of how I spend my time\n\n* Trello might help you more than a TODO list\n\n* Set up some kind of timer to remind you to take hourly breaks\n\n* If you are struggling to work on the most important thing, it may be helpful to take a break and then return to a less-important task. It's okay to say, \"I don't have the focus/energy to do this TODO item today.\"\n\n* I make a sheet of ~10 boxes each day to mark off both work and non-work tasks. Non-work stuff like like cleaning, laundry, exercise, taxes, etc are important.\n\n* The closer a project is to completion, the more you will be tempted to start a new one. This is a trap.\n\n* Game jams are great for ADHD because of the time limit\n\n* At some point you have to stop doing tutorials and try to make a prototype or portfolio piece. All you need to start is a short feature list. You'll get stuck very quickly, then you research how to get over it. Repeat until done.\n\n* Start with the feature list of Pong or Snake or Breakout or some other extremely simple game. The feature list of WOW is too big. The feature list of Minecraft is too big. The feature list of Zelda 1 is also probably too big. As you get more experience you will get a feel for your capabilities.\n\n* If you can muster the discipline, designate a day of the week for \"Google 20% time\" on projects that are unrelated to your main project",
            "I recommend downloading Godot game engine and messing around. Try to make a character move around on the screen. Then make an ultra-simple game like snake.",
            "Hi clubmate - take a look at this other reply with some working points: https://www.reddit.com/r/gamedev/comments/1agdesg/beginner_megathread_how_to_get_started_which/l0uz1lx/\n\nBefore you click - the TLDR is this:  Project management.  It's not about following it rigidly but it gives you some much needed structure.  When you eventually realise ADHD took you off to the beaten path use whatever structure you have setup to bring you straight back.\n\nMake your code and your projects in such a way so to easily return back to them.  Some tips:\n\n- Version Control (Git and Github works great, but there are alternatives)\n- Note taking (Something simple you can easily remember and return to, Obsidian is my go-to but there are tons of others.)\n- Take good care of your health, and keep as much balance as you can (burning out is what usually puts a sudden halt to my progress)\n- Right mindset.\n  - If this is your full time do-or-die job, then you have no out, and your ADHD will work directly against you each time it takes you off the planned path.\n  - If this is a side hobby or part time, and you have cover, letting ADHD wander around and eventually bring you back fresh, revitalised with new perspective, you'll find it won't actually be a major detriment, and you'll make progress on all your various projects (including game dev) at a good pace.\n\nBest of luck.",
            "> No engine if you want to make a game that is nothing but UI.\n\nI don't think that makes sense. Definitely don't build UI from scratch if you can",
            "Just try a few different ones and see which one you like. Trying them out will be a tiny fraction of your gamedev career, so it's not any waste of time really. There is no point in listening too much to what others say about these things, what tools you prefer will come down to personal preference in the end.",
            "> I would like to develop my own game engine\n\nThat generally takes 5-10 years. If you want to make a game engine that's great. But if you want to make a game...\n\nYou may want to experiment with a few existing engines to get a feel for what features an engine should have. Unreal Engine, Godot, and PyGame all have public code repositories that you may want to peruse.\n\n> The game I\u2019m most interested in eventually developing is an MMORPG\n\nThat also generally takes 5-10 years. We all live in the long shadow of World of Warcraft.\n\nAre you familiar with Multi-User Dungeons? They have significantly shorter feature lists than MMORPGs. You could learn a lot with a smaller project before tackling a larger one.\n\n> 1) I am trying to learn C++ and, while I can learn on my own, I\u2019d like to get additional help. Which degree would be the best to look into for the programming side? I was thinking computer science, but do you think there would be a better option? I\u2019m not looking into getting a job with a company, team, etc. This would be purely for myself. \n\nIf you're making videogame engines, where else would you go but computer science with a videogames emphasis?\n\n> 2) I\u2019m assuming that a desktop would be better than a laptop for this. What are some must haves, for a desktop, that you recommend me get for it/with it?; Whether hardware or software. \n\nIt's not as big of a deal as you would think. Hardware has gotten pretty cheap. If you're going to college, you're going to want a laptop for taking notes and bringing your code to show teacher aides in the labs.\n\n> 3) I currently have a laptop that I plan on resetting for the sole purpose of using for developing on the go. What would you say would be the best storage for my projects so that I can access them from both computers?; Whether a cloud, external storage, etc?\n\nGood question.\n\nIf you only have a few gigs of files, you can get by on any of the free services like Google Drive, OneDrive, or Dropbox.\n\nGitHub is great for code version control. If you really want to develop your sysadmin skills, you can also set up your own bare metal Apache Linux server and run git on it.\n\n> 4) Besides the obvious time, money, scale of project, stupidity of my ambitions.. are there any other considerations I should keep in mind? Any recommendations that may make it easier for me?\n\nMake sure you have clearly set out your goals. Take time to outline intermediate steps to achieve them.",
            "Making an MMORPG as a newbie first time game dev is a meme, I hope you\u2019re aware. Game devs toiling away endlessly building an engine and never making an actual game is also its own meme.\n\nYou\u2019re shooting way way WAYYY too high. Start simple, literally figure out how to create a blank window on a desktop and draw a square, then go up from there in complexity step by step.\n\nI wouldn\u2019t bother spending time documenting full blown MMORPG ideas at this stage, it would be a far better use of your time to pick up an engine, get hands on with it and start building concrete game dev skills.",
            "Your choice of engine is usually driven by your technical requirements, not by the game genre. So when you write \"like Civ\", do you mean \"Civilization\" from 1991 or \"Civilization VI\" from 2016?\n\nAnyway, 4X (eXplore, eXpand, eXploit, eXterminate) games like the Civilization series are really complex projects. Especially if you want AI. They are really not for beginners. \n\nBut a good learning path to such a project is to create some simpler turn-based games first. \n\nFor someone who never programmed before, I would recommend Tic Tac Toe as a first goal. It will teach you the basics of programming in general, turn order, game state, win conditions and an AI that can win every game by simply calculating all possible moves in advance and picking the route on which it can't lose. \n\nIf you already know how to program, then you can probably skip Tic Tac Toe and go to the next step: A turn-based game with more complex rules and game-state, but still without information hiding and with only one action per turn. Like Chess, Nine Men's Morris or Checkers. Recreating a game that already exists in thousands of implementations sounds boring to you? Good, then just make up your own game in that style. That will be a good practice for your game design skills as well. Now you have more complex game rules, and the search tree for the AI is too large to simply think ahead until every possible end-state. Which means you need to use the [MiniMax algorithm](https://en.wikipedia.org/wiki/Minimax) with a rating function to decide which game-state x moves ahead is the best one for the AI even if it hasn't won yet.\n\nWhen you managed to do that, then the next step would be to create a turn-based strategy game where each player performs more than one action per turn, and where you have information hiding in form of random results and fog of war. Like XCOM or Advance Wars. Here you will notice that the MiniMax algorithm from your Chess-like game no longer works. There are just too many possible moves to do on each turn and too many uncertainties. So you will have to look for more heuristic approaches to game AI. I could now give you a couple search phrases, but it's probably still too early for that, because we are talking about what's probably years ahead.\n\nIf you pulled that off, then you will still not be ready to tackle the true complexity of a 4X strategy game, but you will at least be on a level where you will be able to even grasp it. Which should be enough to know what to learn and how to approach such a herculean project.",
            "As a junior programmer, your portfolio is going to be more impressive than your work history. Make something cool, put an HTML5 build on Itch, and link to it in your CV.\n\nC# is more useful for mobile because Unity is dominant there. C++ is more useful for PC and console games because Unreal is dominant there. Many studios use in-house engines or other tools and don't care so much about engine experience.",
            "I'd strike Godot off in your case since you want to learn rather than do.  I'd heavily lean towards Unreal since you have a C++ background (although I heard unreal c++ isn't quite the original, in a good way?).  I'm on Unity and that's obviously a solid option also because of the incredible tutorials they provide to beginners.  Anything would fit, but the real question is if there might be some other non-generic game engine that's quite close to what you want to make.  I can't answer that for you without doing research and that sounds like something you should be doing :P\n\nMaybe AI models can point you in the right direction by copy pasting your question for which game engine fits your game goal and see what they suggest.  Then most probably ignore them because it's likely they'll. go way off on that one lol.\n\nGiven what little you mentioned though I'd suggest jumping straight into 3D.  If you want 2.5D, 3D will be the easiest way of doing that.  If on the other hand you value the fact you're inexperienced, you'll likely find more success by cutting scope (forget about 2.5D) and go for pure 2D.  It will make everything much simpler and help you really consider the gameplay loop you're going for.  If a novel makes a game idea sound great doesn't mean it will be in practice.  Testing it out is the only way to know and 3D presents a lot of hurdles for beginners and solo devs to progress through on their own.  Still, there are plenty of free usable assets if you opt to go down that route.",
            "I would suggest you try and using Unity for your game as there are lots of tutorial available on the internet for Unity which is free to access.\n\nI am a student for game developer course and I find out Unity is more beginner friendly when you are new to the gamedev (this is my opinion based on my experience, other may have vary opinion).\n\nUnity is also encouraging coding while Unreal Engine have alternate way of using Blueprint and still encourage coding (This depend on which way you prefer)\n\nAs for Q3, I usually create several environments assets and rearrange them in the game engine to create the map environment. (I would suggest you create sketch of how the map will look before apply it on game engine.)\n\nThe char models and animation are create on the blender first then import to the game engine.\n\nMaybe for your next future project you can try explore other game engine too as Unreal Engine is also good especially when involving 3D.",
            "[Minimum viable product](https://www.youtube.com/watch?v=UvCri1tqIxQ).\n\nStart by prototyping the very core of your game idea. Keep it as simple as possible. Get it to a playable state as early as possible, so you can test if the core idea is technically feasible and so you have a test environment to try out any of the more sophisticated aspects of your game idea.",
            "The issue you're facing likely is having to address the fact that game development, at its very foundation isn't really about developing games (the technical skill that makes games) but rather product and resource management (as is the case for any \"project\" you'd embark on, regardless of the field).\n\nProject manager your learning, project manage your tests and experiments, and project manage your first simple forays into small projects.\n\n- Learning Story (tasks below)\n  - Game Engine Choices (2h of research / vids)\n  - Chosen Game Engine Basics (A tutorial to follow, max 4h)\n  - Couple of Tutorials matching my preferred genre on that Game Engine (about 8h each tops)\n  - Some experiments / extensions / modifications on the above tutorials (2h max messing around for each tutorial completed above)\n\n- Game Choice Story (tasks below)\n  - What genre do I want to make, and which is simplest (2h)\n  - Drill down to the absolute core of what my chosen genre requires.  Make core points (2h)\n  - Game Design for MVP (others mentioned this as replies to you) (2h)\n \n- Game Development Epic for your chosen genre and MVP (tasks below)\n  - Camera Setup (2h)\n  - Player Controls (1h)\n  - Basic mock of whatever your genre requires - story / platforming / physics (2days)\n  - Finishing Story (tasks below)\n    - HUD / UI (2d)\n    - Init / Splash Scene / Menu / Game Over Scenes (3d)\n    - Audio background music and SFX (2d)\n    - Build process to target platforms (1d)\n  - Publish (1d)\n\nModify the above to suit your needs and strengths / weaknesses.  I allowed for some beginner rust / friction but it's completely normal for all these estimates to either take you no time at all, or an eternity (to the point you'd need to abandon that approach and do something else)\n\nHopefully it puts into perspective how much work is involved for a shoddy minimum \"viable\" game that will almost guarantee a result that's not particularly fun.  But that's how we all start.",
            "How good are you at drawing and painting? You can get textures off of sites like https://opengameart.org/ but editing/creating them yourself is a good skill to have. I'd recommend /r/krita to get started. Also see /r/SketchDaily\n\nLearning materials probably requires you to pick up shaders. Modern engine have material graphs to hook those up in a very visual manner, but you may want to read up on HLSL/GLSL coding. https://iquilezles.org/ and https://www.shadertoy.com/ are great resources.",
            "I'd say do it in JavaScript and HTML Canvas if it's really as simple as an original Tomagochi. If you know C#, Godot is a great place to start (or Unity, but its future is uncertain right now.)",
            "Unity C# is an obvious choice for you given the background (Also a former C# Cloud Integration / Engineering dev before switching to game dev btw!). I would really emphasise two points for you and your buddy:\n\n- Game design is where great ideas are born, and also where they are killed.  Proceed with caution and don't bite off more than you can chew\n\n- Coding is one of many tools you must employ.  Don't skimp on audio / visuals / animation / UI and UX.  Go broad, rather than deep.  Few games are great because they do one thing well, and everything else garbage.  You need a little bit of everything to match the same energy and give a consistent vibe to the player.",
            "Unity will be nice because of the head-start on C#.\n\nGodot also supports C#, and in my opinion it's a lot faster to add features to your game with Godot.",
            "You already know c# and already tried Unity.  Make a simple game with it solo.  If you get stuck then revisit that claim.  Keep things incredibly simple and go for breadth over depth.  Make several simple things (simple splash scene that moves you to the main menu, a start new game button that loads the actual game and throws you in there, and a win / lose condition that takes you to the score scene and back to the menu scene.\n\nAlmost all games need something with the above structure.  The gameplay can be kept simple and improved / varied upon between the various games you make.  Just don't go into too much depth to start with and you should be fine.",
            "I'm a programmer (not games though) for my day job and I would recommend learning programming separately from how it relates to games. Sure, some concepts are going to be different, but having solid coding fundamentals is probably better than only knowing game stuff.\n\nI say pick a language (Python, C++, and C#) are popular for game development, and find a tutorial somewhere. I think Python is going to be the most accessible language for a beginner, but if you want to put a little bit more work in, the object oriented and statically typed nature of C# might make be a bit more valuable to learn. If you want to go completely balls to the wall, C++ might be the most useful for game dev, but it is going to have a MUCH steeper learning curve than the others.\n\nJust my 2 cents",
            "Honestly both are workable and have different tradeoffs.\u00a0 I'd say the biggest consideration I'd use is what kind of assets you have most access to that you like and if you think you'll want access to alternate angles for characters even if the camera stays locked.\n\n\n\n3d models from a fixed angle would certainly be the easier choice in general in my opinion, especially if you want to play with the depth.\u00a0 They also can tend towards a bit of a bland feel to them without significant work as there's more you can do with animation and artstyle if those assets are made specifically with the camera direction in mind.\n\n\nUsing 2d sprites in a 3d scene and scaling them as appropriate for distance\u00a0or just moving the sprite further away/closer from the camera can be easy and stylized, but you lock yourself into that single angle even for subtle things.\u00a0 In addition you have less easy options for more dynamic lighting and if you mix with 3d assets there is the potential to make things look flat by comparison.\n\n\nBoth can get good results so it just depends what advantages and challenges you prefer :)",
            "The problem is, that first games are not commercially sucessful. Most indie hit developers have made games for about a decade before releasing something great. So I think it's important to get your first bad games out quickly.  \nPersonally, that's why I wouldn't learn how to paint first.  \nI think you will find this video interesting. Just pick something that feels doable: https://www.youtube.com/watch?v=IgJBLXBG1Yc",
            "As a beginner, you can use stock assets. That allows you to properly focus on learning programming and Unity. Popular sources for assets are the Unity asset store and [kenney.nl](http://kenney.nl)\n\nAnd for a serious project, you don't want to do it solo anyway. You will want to specialize on programming and leave the artwork to an artist.",
            "With game jams, you are not \"put on a team\". You form a team before the jam. Most game jams have a Discord server specifically for that purpose.\n\nExpectations should be discussed with the team. But in general, game jams have a very lax atmosphere and are very friendly towards newbies. Pretty much everyone there does so it for fun and self-improvement.\n\n>Are there specific VSC extensions that I should know about that people who participate in game jams use?\n\nI couldn't think of anything except git. Which is a must-have tool for any team collaboration.",
            "I\u2019m working on implementing exactly this, and I\u2019ve got it functioning, so I can take a stab at explaining it in general terms.\n\nYou understand the general idea behind rollback netcode, right? When the server receives an input from a client, the input also has a timestamp or tick number or whatever on it, so the server can \u201croll back\u201d the game state to the exact frame that the input \u201cshould have\u201d been and re-simulate everything. I\u2019m just gonna assume we\u2019re using frames/ticks, as most fighting games do. This means you need:\n\n1. Every character or other relevant game object (projectiles, interactable objects, etc) needs to be able to reload its state at some arbitrary frame in the past. This state needs to be serializable as a payload that the server can send to all clients.\n\n2. All input needs to also be serializable as a payload that can be sent over the network. Each client sends the server its own input, and the server uses that to calculate (and replay) state.\n\n3. The server needs some way to know if a certain input should trigger a rollback. This is usually pretty simple, for a fighting game it kind of boils down to \u201cdid the player execute any new attack or movement\u201d.\n\n4. The server needs to store a history of inputs and states for every player / other relevant object. Then, when the server receives an input that triggers a rollback, it just reloads the entire game state for that frame and simulates everything until it catches up with the current frame again.\n\n5. The clients need to have some way to reconcile their own states with the state payloads they receive from the server, to prevent desync. Each client should also be storing input and state history, so every time it gets a frame state from the server it can compare to its own history and see if any desync is detected. If so, the client can also do its own rollback to the last confirmed server state and then re-simulate from there.\n\n6. Optionally, the clients can also implement client-side prediction. This just means that the client stores the last known input given for a certain player or object, and if the client hasn\u2019t received the authoritative input & state from the server yet for a given frame, it just runs the frame assuming the input is the same as the last known input and uses the resulting \u201cextrapolated\u201d state until it gets the authoritative server state. If the extrapolated state is wrong, the reconciliation from step 5 will correct it. Tl;dr \u201cif the last info I got about player 2 from the server was that he was running forward, I will assume he is running forward until the server tells me otherwise, instead of waiting for the server to tell me every single frame that he is indeed still running forward\u201d. Most shooting games implement this too. If you\u2019re playing a game and hit a lag spike, and everyone else keeps running forward for a few seconds and then instantly teleports to their \u201ccorrect\u201d position, you just watched client side prediction and reconciliation in action.\n\n7. Very importantly, everything in your game needs to be deterministic, meaning that if the server and client separately simulate the same inputs from the same starting state, they should always get the same result. No randomness allowed. If you do want to have something random in your game, you should have it use a precomputed seed or something that\u2019s randomized at the start of the game and then shared between the server and clients.\n\nIf you wanna think of it more in terms of pseudocode, any object that significantly affects the game state should implement a \u201cRollbackable\u201d interface (or something like that) with a \u201cProcessInput\u201d function that takes in an input payload and returns a state payload, and a \u201cLoadState\u201d function that takes a state payload. Ideally it should also implement a \u201cShouldTriggerRollback\u201d function that takes an input payload and returns a bool, and a \u201cDetectDesync\u201d function that compares two state payloads and returns a bool. Then for each frame, the general flow of logic is something like:\n\nServer: \n\n1. Check if we've gotten any new input payloads from clients since the last frame, store them in our input history.\n\n2. For all these inputs, check if any of them should trigger a rollback. If so, load the state for that frame and replay all inputs since then with the ProcessInput function of our Rollbackable objects, passing in the correct inputs for each frame and saving the resulting states for each frame in our state history.\n\n3. Once we're caught up to the current frame, process the current frame by calling the ProcessInput function on everything again with the current inputs. If there are any objects where we don't yet know the current input due to latency, just use the last known input.\n\n4. Save all the resulting states in our state history, and send all the inputs and states for this frame out to all the clients.\n\nClient:\n\n1. Check if we've gotten any new inputs and states from the server since the last frame.\n\n2. For the local player character, read the player's inputs and store them in our local input history for this frame.\n\n3. For every Rollbackable object, if we got a new server state, compare that server state to what we have in our local history for that frame. If desync is detected, roll everything back to that frame, load that server state, and re-simulate up to the current frame.\n\n4. Now process the current frame using the last known inputs from the server, or the player's actual input for the local player character.\n\nIt\u2019s important that the client is executing the local player\u2019s inputs instantly, not waiting for any confirmation from the server or anything. For a fast paced game like a fighting or shooting game, the input lag from waiting for server confirmation will feel horrible. However, it\u2019s still server authoritative because the server gets to \u201ccorrect\u201d the client\u2019s simulation if the server state disagrees for some reason.\n\nHopefully this all makes sense, I'm just an amateur but I've got it working in my game at least. I'm very open to any input or corrections. There are also tons of great resources out there, I based my system heavily on [this GDC talk on Rocket League](https://youtu.be/ueEmiDM94IE?si=HgMB1TiDt7Ain5zO) (the first half or so is about other things like the car controls and handling, but the second half is pure netcode gold) and [this tutorial](https://youtu.be/-lGsuCEWkM0?si=7vew4nK9a8ze1LJa) (it\u2019s Unity not UE5, and he doesn\u2019t go into actual rollback, just prediction+reconciliation, but it\u2019s fantastic for a base to build rollback on top of)",
            "So you\u2019ve installed Obsidian and Jira? Is that what is meant by \u201cfound productivity tooling?\u201d\n\nI don\u2019t mean this to be mean\u2026 but your goal of \u201ctrivializing\u201d game dev is unrealistic at best and simply ignorant and arrogant at worst.\n\nYou can\u2019t just \u201ckeep concepts simple and feasible\u2026\u201d complex behaviors often require complex concepts. But possibly you can break complex things into more bite-sized (but unavoidably complicated) ideas.",
            "Unfortunately, I don't think you'll ever get access to a major game studio's game's source code. Unless they take the deliberate move to open source it, you're dead in the water on that front.",
            "These should help:   \nhttps://www.youtube.com/watch?v=5jrq5rDI4dk   \nhttps://www.youtube.com/watch?v=TPYNmKmph7k",
            "Anything with a sky high cost in education scares me too.  Also in tech experience completely eclipses education. I'm a software dev graduate and progressed post-grad in Computer Science - local education is heavily subsidised to the point of almost being free of charge, which is why I pushed to learn more for my own competence. (And it did indeed help).\n\nWith Game dev, the experience beats edu is even more true.  The most \"accessible\" but also most competitive position in game dev would most probably be QA.  It's not easy to get in and often times QAs I know of are jack of all trades - they don't just play games, they make them and cover bits and pieces of everything.  And that's really going to be your primary goal:\n\nMake games.\n\nIt will have you consider design, programming, art, production and of course testing and quality assurance.  You'll only ever be doing a basic mockery of the full process but the more you do this when you're not working part time the more that process will sink in.  You're young which is considered attractive to many game studios.  It gets increasingly harder to break through the industry the older you get, so spend the next couple of years driving hard towards creating your own simplistic games with a variety of genres.\n\nAlso spent a handful of minutes each week perusing job postings in your local area for game dev if any and look through their requirements.  Anything junior should be achievable in a few years of dedicated focus.\n\nIf you think doing this all on your own is going to be too difficult (I know it was for me, education was a much needed guide to grind in my case) then you'll want to look at some paid courses.\n\nBut given you're also looking into a CS degree, there is a decent \"cash free\" option: [CS50: Introduction to Computer Science | Harvard University](https://pll.harvard.edu/course/cs50-introduction-computer-science)\n\nI've followed some of the video courses on that and I must say it was a higher quality than what I went through.  If nothing else it will teach you plenty and it doesn't cost a dime (getting a verified certificate is not free but peanuts compared to the cost you quoted).  Feel free to msg with questions, although I take a while before I answer :P",
            "Without a tutorial is probably a bit asking much",
            "Yes, that sounds like a feasible goal to me.\n\nBut it does of course depend on how fast you are learning, how efficiently you are learning and how much time per week you are able to dedicate to this project.",
            "You were doing great up until the end:\n\n> without the help of a tutorial\n\nDoes that include official docs?  Sometimes pros will also use video tutorials just to see what an outcome might be and get ideas.  It's also foundational to researching what works and what doesn't, what's culturally intuitive and what's not.\n\nI gave a reply to another about starting out at game development which breaks down the process a fair bit, take a look: \n https://www.reddit.com/r/gamedev/comments/1agdesg/beginner_megathread_how_to_get_started_which/l0uz1lx",
            "Potential option - if your game mostly fits a niche of top-down jRPG - take a look at RPG Maker. Costs very little (and there's a free trial) and doesn't really require programming (although benefits from it). Imho a good starting point.\n\nUnity is a much larger beast and while perfectly capable for 2D games it will take a long time to understand it well enough.",
            "You might want to try Godot. It's very popular for making 2D games, open source with good documentation and tutorials. It's very beginner friendly, I think it might be easier to pick up than Unity, though I haven't tried the latter.",
            "RPG Maker was mentioned, so I'll mention GameMaker. \n\nI've seen a couple of farming sim tutorials floating around for GameMaker, so there are resources out there.",
            "To start developing, you first do some tutorials on your engine, to get an idea how coding works, what node exist. Whether that's godot or Unreal. Be careful to not do that for forever, like 5-10 hours. Try and vary things a bit, don't just follow if you can.  Make another enemy, change some values.    \n    \nThen you make another game. For this one, you don't watch a tutorial \"how to make a platformer in godot\", you watch a tutorial \"how to make a 2D player Character\", one \"how to make 2D enemy\", \"how to make main menu godot\" and so on. It is important that these are seperate, because then the pieces don't work together magically, but you need to think about it, while still having guidance. If you get any errors, you ask on the subreddit of your game engine.     \n   \nThen you make another super simple game like this, and maybe this time you can already omit the tutorial on how to make a main menu, you see how you did it last time :)    \n   \nIt never stops. I am making a tower Defense game now, I am probably more than 400 hours in and now I don't need a tutorial to make a new tower, a new menu, a new node, but I still had to look up some tutorials on saving games in godot.   If you want to do something with blueprints in Unreal or another engine, you do it the same way",
            "Give the ship a constant forward vector speed / velocity. Then assign the X and Y axis of the ship as a move impulse or movement component velocity manipulation and have it modified by the input from the mouse X and mouse Y axis.\n\nDoesn't seem too hard, ChatGPT can help guide you through it as well. You could even add replication and make it playable from a browser with Unreal 5.",
            "Outside of the memory and perf issues mentioned, there's a few other reasons that tiles might make life easier.\n\nOne thing to consider is asset reuse. One of the advantages of having more modular pieces of art is that you can reuse these elements as you go. It's easy to think that sprites have to be either 32x32 tiles or these massive 8,192 x 1024 background plates. But you can create (as an example) a tree prop that is 128x256 and place it around the scene, tinting it, scaling it, mirroring it, adding variety to the level as you build.\n\nModularity also makes it easier to make small changes as you build. Let's say you're setting up the scene and decide that you want that big tree in the background to appear later in the scene to match a combat scenario, if it's modular you can just adjust the x position in the editor. Otherwise you need to open your image editing tool, export the image, reimport the texture and see if the new positioning lines up correctly.",
            "If you have a really large scrolling background image (and I mean **really** large), then you might run out of GPU RAM. You can estimate the required amount yourself. Every pixel is 4 bytes. You just need to multiply that by the with and height. So 1024x1024 pixels are 4 MB (trivial), 10024 x 10024 is 400MB (notable, but OK) and 100000 x 100000 is 40 GB (breaks even high-end video cards)\n\nDepending on what technology you use, you might also hit a maximum texture size limit earlier.\n\nThere are technical solutions for that, like slicing the image up and only loading those parts that are on the screen. But that might require some technical expertise.",
            "Yep, you answered your own question",
            "Hmm, you might start your search by looking up \"Animalese\" or \"RPG dialogue blips.\" Not sure if the latter is an official name but it seems to be widely used.",
            "1. Break project down into small, deliverable and achievable milestones e.g. build a basic UI, or display an object, or implement animations for items that need it\n2. Separate them into features that can be done on their own, or have dependences \n3. Pick one that has no dependencies to do:\n   1. If tutorial needed, do tutorial\n   2. Implement / iterate it\n   3. Test\n   4. Does it work how we want? If no - figure out why, what needs to change and repeat.\n4. Move on to the next one\n\n&#x200B;\n\nI've only just started so spend about 25% of my time on tutorials or finding answers, 25% on actual implementation, 25% on testing and fixing, and 25% battling engine-specific limitations that I didn't know I'd have to work around.\n\nYou'll burn out trying to learn everything at once, and you won't learn anything if you try to do it all one after another. **Pick a small thing, and just do that thing.**",
            "Your'e right, it's overwhelming, game dev sounds easy, but there's a reason why a lot of games take 2 years to make with multiple team members.  If you're going solo, and you want to do it all, it will take time to get good at all those components.\n\nPrioritize making things, for every tutorial you watch, try to make 3-4 small projects off of that concept.  As you add more complexity, combine the new component you have learned.  It's really easy to get trapped in \"Tutorial Hell\" where you continually watch tutorials and \\*feel\\* like you're learning and making things, when you really aren't.  If you want to learn to make games, you have to make games.\n\nI suggest isolating a field and focusing on that for a several weeks.  I personally followed [Mizizzizz's roadmap](https://www.youtube.com/watch?v=5-iST0a69cI).",
            "Tutorials are a good way to get a first introduction into a complex topic by seeing one example of how one accomplishes something with a given technology. But for further in-depth studying, it's usually a good idea to dive into the documentation.\n\nFor example, if I wanted to become proficient in the particle engine of a certain game engine, then I would:\n\n1. Watch one (1) tutorial showing me the basic workflow to create a particle effect.\n2. Try to replicate the result by creating a particle effect in a new project\n3. Google the 3-5 error messages I receive and solve those problems\n4. Appreciate the result\n5. Look up the documentation of the particle engine on the official website of the game engine\n6. Go through each point in the particle engine documentation\n7. create some new particle effects to try out and demonstrate each feature from the documentation\n8. Figure out if I actually understood anything by trying to create some real-world use-cases of particle effects using some of the features I just learned.\n\nHowever, all that is just training. To become a master, you need real world experience. So before I would dare to call myself a \"master\", I would have to be involved in multiple game projects where I created not just one but a whole lot of impressive (and appropriate, of course) particle effects.",
            "Try a few different languages and engines and see which one you prefer working in. Don't listen to what others say too much, it comes down to personal preferences.",
            "If you're looking for something with a robust tutorial base (ie. Brackey's Tutorials - he's retired but he has a HUGE compendium of great tutorials) and are interested in purchasing premade tools/art assets, Unity is probably the best way to go.  Ie. if you really want to make a game fast, you can just buy a Unity toolkit that gives your a fighting game base that you can modify and add in the art assets you want.\n\nSo think about your goals... Do you want to make a game as fast as possible? You can drop $349 on the unity asset store to get the Universal Fighting Engine 2 (PRO) and build off of that.  Or are you trying to learn how to code/learn how to develop games?  Then go through tutorials and start building small projects and practicing.\n\nI personally hate C and love python (I never want to debug a ; again).  I wanted to learn more coding, and it was more important for me to find a fast engine that is quick for prototyping and iterating on projects, so I chose Godot.\n\nThere's no right answer, all the game engines are good, but it depends on what your goals are.  Think about what you want out of a game engine, try some out, and then try to stick to one engine for some time.",
            "I'll start thing by saying I have zero experience making games so my answer may hold little value to you but seeing as no one else has answered yet...\n\n\nThere is an engine called RPG maker that's apparently fairly newbie friendly. I'm not sure how well it would work for more modern type RPGs like SoS but there are lots of old school RPGs made in it. Might be worth a look :)\u00a0\n\n\nAlso, the best advice I've had so far is \"Learn what you need, as you go\".\u00a0",
            "If it's a skin to skin grab, a clap/slap with a modified pitch might do. If it's a clothy grab - something like a dufflebag or flag sound.",
            "When you lack the skills to execute on your project, then there are really just 3 options:\u00a0\n\n\n* A: Cancel the project\u00a0\n* B: Get someone onto the project who has the skills you lack\u00a0\n* C: Learn the skills you need",
            "I did a test with just drawing pixels with GameMaker. 500x500 was around 12 frames per second with an i5 and geforce 650 iirc. That's 250,000 sprites being drawn. Most performance cost is in the code execution, not as much the drawing. Better code, better performance. Simply adding one if statement to the draw code in that test halved the framerate. One main thing though, it is much more efficient to not use the GameMaker functions for collision detection, and instead use distance\\_to\\_object when possible.\n\nI'll soon be releasing[ Zeta Leporis RTS](https://store.steampowered.com/app/2445160/Zeta_Leporis_RTS/) into EA on Steam, made with GameMaker. It can handle more than 1000 units comfortably plus all the projectiles they're drawing and explosion particles. And most of the per-step cost is in the code execution, I think drawing is at most like 20-30%. Beyond that, most games in the RTS genre use smoke & mirrors tactics to simulate things off screen in a more efficient but not necessarily 100% accurate manner. Zeta Leporis RTS doesn't do that, but can still be made more performant than it is currently. I'll be working on improving efficiency probably as long as I'm developing the game; it's an ongoing process.\n\nIt probably is true, though, that GameMaker can't be made to reach [Rusted Warfare RTS](https://store.steampowered.com/app/647960/Rusted_Warfare__RTS/)'s unit counts.",
            "I'm still somewhat new, started around the middle of last year. \n\nThe getting started thread links to this:\nhttps://gamedev.stackexchange.com/questions/854/what-are-good-games-to-earn-your-wings-with\n\nPersonally though, if you haven't, I'd pick a small project and just do it. Go from beginning to end. If you really want to push, do a game jam. Even as someone a bit further along, I plan on doing more game jams this year since I tend to learn a lot during them.\n\nOne thing I would encourage is to work on a game design doc for the project. It's something I'm focusing on right now.\n\nI would encourage you to pick your own ideas/genres and to put the prototypes up somewhere like itch.io. Reason being you're going to have tricky stuff to solve, to me, if it's an idea you aren't as into, then it's going to be very difficult to continue. Ex. if you told me to make an FPS, it's not something I'm as into, instead if you asked me to make a Mirror's Edge like game, I'd be much more invested in something like that.\n\nIf you do that game design doc, you can see your overall scope, figure out what you know, what you may know, and what you don't know. From there you can create the base game and iterate on it. For example, say you want a platformer with gun based weapons and a grappling hook.\n\nI would approach it this way:\n- First pass, go through and implement the platformer basics, moving, jumping, colliding with the ground.\n- Second pass, update platformer mechanics to add some of the nice things like coyote time. Refine movement to make it feel better.\n- Third pass, pick grappling hook or weapon and start to work on that.\n- Fourth pass, if you went weapon, refactor the code to make a different type of weapon. If you went grappling hook see how the weapon code would be different.\n- Fifth pass, do whatever is left, grappling hook or second weapon type.\n\nFrom here, look back at your design doc, do you need enemies? If so do those. Alternately, look at everything so far, can you improve it? Does it feel good? You could naturally switch some of these up.\n\nIt also depends on your goals. My goal is to make my own games either solo or with a small team.",
            ">Currently approach is that i assign every tile to specific number, write a .txt table of with corresponding numbers and draw every tile one by one. Are there better loading and storing technics to draw map?\n\nIt's probably fine for now. In the long run you might want to think about creating a map editor (or using an existing one like [Tiled](https://www.mapeditor.org/)) and storing map data in a binary format.\n\n>I was trying to share current results with my friends and couldn't find best way to do so. My guess was to deploy game to .exe. Would it be runnable on devices without JVM installed?\n\nA Java application requires a JVM to work. The most idiot-proof way of distributing a game that requires Java is to distribute it together with a JVM (Minecraft does that, for example). If such a game has a .exe, then that .exe usually doesn't do much more than start the JVM and have it run the game's .jar file.\n\n>What is the best way to handle resource loading? Currently i am using instantiating new File to load a resource(sprite, music). Is there any better way of doing so?\n\nThere is never a best way, only the way that works best for you.\n\nAs long as you are loading all resources from files on game launch and then keep them in memory (as opposed to reload them everytime you need them) it's probably fine.",
            "It would probably be hard to use the code directly of Doom. I would use concepts from other more modern games, like FEAR, as a guide for how to design an AI system in a state machine, and then look up specific guides on how to write a state machine well in Godot.\n\nThere's some interesting stuff out there about FEAR's AI system:\nhttps://web.cs.wpi.edu/~rich/courses/imgd400x-b08/lectures/L-Planning.pdf\n\nNot directly related, but you might also find it interesting how The Sims 1 figures out where Sims decide to go, and how they decide what to do and whom to do it with:\nhttps://team.inria.fr/imagine/files/2014/10/sims-slides.pdf",
            "I don't think you will learn much from the source code. This will just show you how state machines are programmed. You shouldn't need to worry about that, you can just purchase a state machine package to use or find one on git-hub.\n\nWhat you need to learn is how a state machine works. This is controlled by the meta data you feed into it. In most environments, these will be graphical nodes.  You can find plenty of examples and training material online.\n\nHowever, I think Behavior tree's are a better for AI.  For an example, check out Opsive's Behavior Designer on the Unity Asset store.  Again, these are graphical tools, so you don't need to worry about the underlying code.",
            "> I\u2019ve also heard that unreal is better because it has stuff like jumping and characters built in whereas with unity you need to code moving and jumping from scratch\n\nYou've heard wrong. One of the standard project templates in Unity comes wit a humanoid character that can run and jump.",
            "3d games are always going to be more intensive on systems, that's the nature of a third spacial dimension. If you can get things like external Gpu's then you can delegate some intensive tasks to that gpu and you may get some sizable performance difference depending on how well you can code tasks to the gpu. \n\nHowever, i recall occams razor in this scenario, the simplest answer is usually one of the better ones.\n\nI'd just get a better computer. A proper desktop for a number of reasons, if you are able to afford it, and are ok with it being stationary most of the time. You could very well code on a laptop, then put that build on an external drive, and plug that external drive into another system to test it, but at that point, you might as well just code on the thing too. \n\nLaptops are powerful, but usually are less powerful than desktops because of compromises the laptops make to be portable. There are plenty of (expensive) laptops out there that can handle unreal, but desktops are generally just better. It's just up to you to do some research and find out which option is best for you. \n\nBest of luck!",
            "Unreal can take a lot of power, but this really depends on what your game is and how many \"draining\" features does it have. People have made mobile games with Unreal and very simple visual novel games. It really depends. Also people with older or \"bad\" computers can play PC games made with Unreal.",
            "Roguelike is a mechanic, not a genre. It *used* to be a very specific genre, but as it is understood nowadays it is pretty much any game in any genre that has a lot of input randomness and forces the player to start from the beginning when they fail.\n\nIf you are looking for learning resources, you need to focus on the technical challenges, not on the roguelike mechanic.",
            "Godot has pretty low barrier to entry as an engine, solid tutorials/sample projects and is plenty powerful to do anything you\u2019d need. Would suggest you give that a look!",
            "Try to break the mechanics into super small chunks. Doing this should help you prototype fast, which is pretty important when making games. For example:\n\n- Make a tile based map.\n- Make a player character that knows where it is on said map.\n- Player movement.\n- Create a target that you can use to test attacks.\n- Create an attack. Break this down into even further steps, like range and damage.\n- Health and mana.\n- Create turns.\n- Cooldowns for attacks.\n- Simple enemy that attacks you when close.\n- Pathfinding.\n- Enemy movement.\n\n\nAnd so on. You don't have to do it exactly like this, it is just to show the idea of breaking your idea into smaller chunks.\n\nGenerally, it sounds like you have a fairly clear idea of what you want to do, so the important thing is to start making it and not get stuck watching tutorials.\n\nMy advice would be to create a minimum viable product (extra credits youtube channel has a good video on this) and then build on that. C# in Unity is pretty different from ordinary C# so it really is best to just get started, especially when this is just a hobby.\n\nOnce you get to programming AI, look up finite state machines (FSM) for behavior and A* for pathfinding. These can be difficult for a first time programmer to implement, but they are definitely doable if you put in the time. Good luck with the project!",
            "I have been learning game development for a few months now.  I chose Godot, because it is Open Source, and because I find it easier to work with GDScript than C#.",
            "While the scripting language used by Godot isn't *quite* Python, it is very similar. And the amount of learning material for Python, especially that aimed at total programming beginners, is huge. So learning some basic programming in Python before jumping into Godot can be beneficial.",
            "I'd suggest you start off looking at RPG Maker first and foremost.  If that doesn't fit any version of what you're going for, you're going to have to do a lot more running around with a generic game engine like Godot to get it to where you want it to be.  It's not clear if you want to learn programming or just make your project a reality on matter what, but if learning programming is not out of the books then Godot would be a viable candidate, as would any other modern generic game engine.",
            "Starting small and builiding a prototype before jumping into a large project is often a good approach. Especially\u00a0when you don't yet have the experience and knowledge to fully understand all the technical challenges you are going to face or aren't sure if the idea works at all.",
            "Better for what?  The industry?  No - focus on one, and ideally go straight to a game engine like Unity.  It's unlikely you'll make sufficient progress by using raylib alone to then join .  Your own enjoyment and education?  Whatever floats your boat.  I can see a good argument for jumping around and broadening your area of knowledge.  I'm in the game dev industry and people at work have worked on Unreal Engine games but I've never touched it before... bit of an odd feeling, must say.",
            "Check out /r/inat. \n\nAlthough training with Fmod and Wwise are helpful, modern engines don't require you to use them. Usually you can get the job done by simply queueing up an audio clip when you need to play a sound or music.\n\nThe next Ludum Dare is April 12th, so if you can do that and find a group for it then you'll be set. Most devs use Unity, but Godot has gotten increasingly popular.",
            "> It seems like Godot is simpler than Unity, but I\u2019m worried about spending all my time learning it when eventually I\u2019d need to switch to Unity in the future if I ever wanted to work for other developers. I\u2019m not opposed to eventually learning both, I just don\u2019t know which I should start with.\n\nSeems like you're well-aware of the pros and cons of using each engine.\n\nIf you're working alone I'd recommend going with Godot, it's faster than Unity in many ways. You'll see progress faster.\n\nIf it's really important that you work in a professional environment on mobile games, Unity is going to be better here.",
            "Nitpick but you really don't need advise from anyone who has a lot of experience on this.  No one can read the future, the assumption is that Unity is here to stay and Godot will get ever more capable and popular as time goes by.  Right now it's not industry ready, and might not be for a few years more.  I got employed having only ever used Godot to create a game before I joined a Unity team, as long as you're making games it likely won't matter a tremendous amount but you're better off having made games with all engines (Godot / Unity / Unreal / RPG Maker) than omitting any of them.  It takes a few days to recreate a game you already made in another engine if it's simple enough and you got the hang of what you're doing.  Don't shy away from testing them out.",
            "MSDN (learn.microsoft.com) is the authoritative source for learning C#. Unity also has great tutorials for free and they only require a login.",
            "[To quote one of the links up there on getting started.](https://www.reddit.com/r/gamedev/wiki/getting_started/) \n\n>\"Your first game should be as big as Pong  \nSorry. You cannot make a grand RPG with branching decisions and advanced battle mechanics yet. It is simply too big for you to do. This is a rookie mistake that may leave you months or longer without having made your first game. Experience is important, success or failure, so rapid success and failure is much better than waiting months or a year to learn from an experience when you're just starting out.\"\n\nMake some smaller things first to learn the foundations of game development first. Also, can't really speak for RPGMaker, but Unreal has terrible documentation for beginners and is very hard to get into. Try Unity, see if you like that more. You probably will.",
            ">And there's SO MUCH left to learn and do. I don't think one person really CAN do it all.\n\nThat is correct. Which is why almost all successful games are made by more than one person. With each person specializing in their area of expertise. Assassin's Creed Brotherhood, by the way, [was made by 1,634 people](https://www.mobygames.com/game/49434/assassins-creed-brotherhood/credits/xbox360/).\n\nBut if your forte is writing and graphic design, then why not try making a visual novel? Ren'py is pretty easy to learn.",
            "Any of the three engines would be a reasonable choice for a project like that.\n\nMy recommendation would be to download all three, do the official beginner tutorials on their respective websites and then decide for yourself which one suits you and your project best.",
            "[removed]",
            "You could look into gamebooks/choose your own adventure stories. It sounds like you are fantasizing about managing a team, but currently have no members and no project that you are working on. So if you are not actively working on changing that, you might want to lower your expectations to something that can be done by a singular person with your skillset. In my mind, that is a gamebook or a visual novel.",
            "When you are comfortable with Godot and not completely new to software development, then I assume you already read [this article from the official documentation about multiplayer in Godot](https://docs.godotengine.org/en/stable/tutorials/networking/high_level_multiplayer.html)? Any questions it left open?",
            "1) It largely depends on your goals.\u00a0 Unity is a good game engine but so are several others out there.\u00a0 Unity scripts are going to be C# and there's no Lua support that I'm aware of so the\u00a0coding burden will likely be more challenging, though last I checked there is a pretty good collection of scripts and tools you can get for free/cheap on the Unity marketplace that you can then either use whole cloth or take a look inside to see how they work.\u00a0 I haven't used it myself but if you don't want to C# you could also look at something like Gadot.\n\n\n2) That's a difficult question to answer succinctly, I think it would largely depend on what you disliked on Lua.\u00a0 Lua is a scripting language that keeps you at a fairly high level and will automatically handle things like typing and collections in a lot of ways.\u00a0 If you go into Unity you'll be working in C# which will involve a lot more actual structure and syntax to learn, but simultaneously there's a lot of good resources for learning online. I generally would say if your frustration is in not knowing how to make things happen then that would alleviate over time and I wouldn't let that stop you so long as you get enjoyment around the end results.\u00a0 If however your frustration is around the process of tracking down bugs and the \"Aha\" at the end doesn't feel worth it then that isn't really going to go away even with experience so that might be a sign to aim more towards something like 3d modeling side of things or other technical aspects :)\n\n\n3) Game making is generally a team effort, especially if you think you may want to do so professionally.\u00a0 There are many roles that flex into multiple disciplines but very few projects are handled by one person covering for everything (coding/design/audio/art/UX/...etc).\u00a0 That being said there are different platforms that can cover for different skill gaps out there and you don't have to seek to be ambitious in every area.\u00a0 Clones of simple games that lean into what you most enjoy working on and learning about are great starter projects!\n\n\nI wish you the best of luck in your endeavors :)",
            "Github",
            "The usual three. (Unity, Unreal or Godot)",
            "> Should I just choose a game engine and start creating a 3D room and 3D drawers and tables and placing object inside them? And start making them clickable and create an inventory? \n\nYes.",
            "That really depends on the graphic style of the game. But yes, usually it's a mix of mouse and tablet.",
            "With any game you will want to practice by making simple little \"arcade\" style games first. I recommend flipping a coin, downloading one, and getting some practice in. Of what you listed, I don't recommend rpgmaker or gamemaker studio. They cost you money (though they may have free trials). Of any engines, I recommend Godot and Unity. Unity has visual scripting in the current version, while Godot had it in version 3. Of the two I think Unity has more \"out of the box\" elements you can use like a \"character controller\". I highly recommend trying multiple engines. Ultimately you ought to try those free trials of RPGmaker and gamemaker too.",
            "Seriously, just flip a coin.\n\nYou did your due diligence, tried them both and evaluated them. If either engine were clearly the superior choice for you, then you should be able to tell by now. The fact that you still can't tell which one is more suitable for you tells that they are both equally suitable. So just flip a coin to get out of analysis paralysis and start with the actual work on your game.",
            "What language was your HS experience in? Its OK if you don't know the name. Maybe just write out a snippet from your memory.\n\nFor what you described, I recommend using Godot. With the existence of Godot, there's no reason to pay for game maker. I highly recommend you develop some ultra simple \"tech demo\" games to get some practice in with programming regardless of what engine you use. I'm thinking of simple games like snake and minesweeper.   \nRPGs can be pretty involved. Turn based combat is effectively one big menu screen where the options loop back around. You might practice by making a VN type game, or a quiz game.",
            "This \"falling sands\" feature in Noita is such an unusual technical requirement that stock game engines are probably not a good fit for games built around this mechanic. This is one of the very few cases where I would actually recommend to not use an engine and code the game in a raw programming language. Probably something built for low-level-high-performance programming like C++ or Rust. But if you are just starting out and don't have any programming experience yet, then this is probably far too technically challenging for you to attempt right now.\n\nBut if you really want to do this, then one subject you might want to study is \"cellular automata\". Because a falling sand simulation is pretty much that. You might want to start with implementing the classic one: [Conway's Game of Life](https://en.wikipedia.org/wiki/Conway's_Game_of_Life). The internet is full with reference implementations, so building your own shouldn't be too hard. Then you might be able to implement one that has different rules that simulate falling sand (\"if pixel below is empty, free this pixel and fill the pixel below\"). Then you can add different kinds of pixels that follow different rules to simulate things like liquids, gasses, destructive materials and so on.",
            "The most popular choice of game engine for creating visual novels is [Ren'Py](https://www.renpy.org/). The engine is free (open source) and while it still requires you to write the flow of your game in a scripting language, that language is so simple that most non-programmers are easily able to learn it and create simple dialog trees with it.\n\nBut if you really, really don't want to type anything that looks like code, then two alternatives that allow you to create a game using only drag&drop are:\n\n* [Visual Novel Maker](https://visualnovelmaker.com/)\n* [Tyrannobuilder](https://tyranobuilder.com/)\n\nBoth are paid products. Still very affordable, though, when it comes to game engines.",
            "There is never just one way to do something in a game engine. There are always multiple ways to accomplish something, which have their advantages and disadvantages, and work better or worse together with all the different ways to accomplish other things.\n\nGood videos will explain alternatives and their pro's and con's. Unfortunately the majority of videos on YouTube aren't good. A video tutorial can be an efficient way to get a general intro to a certain technology by seeing **one** example of how **one** person accomplishes **one** thing with that tech. But if you really want to understand a technology in-depth, then you need to read the documentation and experiment with it yourself for a bit.\n\nIt generally can't hurt to experiment with different ways to do something, learn about the advantages and disadvantages yourself, and then form your own opinion on which option to use when.",
            "Learning enough coding to make what you guys have in mind, and then trying to make it is likely going to be a several-months long endeavor that, realistically, is going to be difficult to do as a group. Unless you are really committed to the idea of learning how to make games, I'd say it's more effort than it's worth just to make your own CAH client. It's like learning how to blow glass just so you have a particular cup to drink with.\n\nYou are better off trying one of the free alternatives and trying to get used to them. My girlfriend is a particular fan of [this version](https://xyzzy.clrtd.com/zy/game.jsp).",
            "It's possible you can find engines that make multilayer relatively easy, but as you mentioned, MMOs focus and biggest technically challenge is the \"massive\" aspect.\u00a0 That is strictly a backend challenge and requires dedicated effort. Some considerations would be load balancing, sharding and generally how the resources will scale when demand exceeds supply and how well they can fold down to save on expenses.\n\n\nOften times people mention MMO in substitution to just the \"Online\" aspect but that's a far cry from what an actual MMO demands. I happen to work in the industry as a backend game programmer, and must say the very idea of a designer coming up to me with the words MMO would be met with \"nope\". Not unless we would hire someone who already has a lot of experience with that type of work.\u00a0\n\n\nIt's unlikely that any out of the box solution would come even close to MMO requirements, beyond rolling out the basic infrastructure.\u00a0",
            "Regardless of which kind of football you mean, you shouldn't. Because that market is cornered by EA.\n\nBut if you really think you can succeed with a football or handegg game that lacks the official license, any of the standard 3d engines will do. If ball physics are important, then you are probably not going to get around implementing your own.",
            "About 42.7 kilodarksouls hard.\n\nSorry, but \"how hard is it\" questions are impossible to answer. It depends on how ambitioned you want the project to be, how much time you are willing to invest, what qualifications you already have on the team and how fast the team members are at learning the skills they lack.\n\nBut all the mechanics you mentioned, upgrades, weapon types, damage resistance, etc, aren't the technically challenging parts of a  game.\n\nWhat are the challenging parts? Well, \"roguelike\" is a very broad definition. It used to be very narrow, but in the past years the definition has drifted so it now describes a mechanic that can be used in almost every game genre. So \"roguelike game\" can mean pretty much anything nowadays. You didn't even mention if the game is going to be 2d or 3d. But the first challenge would be to obtain the graphic assets and make them appear on the screen. You could of course develop your own renderer to load and render those assets, but using a game engine would greatly trivialize this part.\n\nHowever, making all the assets is usually a very large part of the development of a game as well. Often it's more work than the programming part. Fortunately you don't have to start with making all the assets before you start with the programming part. You can start with placeholder assets and gradually replace them with proper graphics while you are working on the game.\n\nThen you need to implement the **core** gameplay. The things that actually happen when the player presses buttons, and how their environment reacts to those actions. All the gimmicks like upgrades and complex damage calculations come later. And they are usually a piece of cake compared to making the core mechanics work. And make them work well, because even the most interesting ancillary game systems won't motivate the player to endure sub-par moment to moment gameplay.\n\nRoguelike usually implies some form of procedural generation. So you need to learn what procgen techniques there are and which ones would be relevant for the kind of game you want to create. And then implement them. This is a pretty deep rabbit hole. How deep you want to dive into it is your decision.\n\nDo you want to have enemies in the game? Enemies that have some challenge to them? Then you need to get into AI programming. Another rabbit hole that goes as deep as you want it to be.",
            "I'm not super experienced, but I have some. The best thing to do is try to make a MVP (Minimum Viable Product). Seperate some of your items as required and the others as Stretch Goals (Implement after the core gameplay is what you want). \n\nYou have a lot of variables to take account for this list, I would start first with getting a car moving how you want around a race track. Once your car is moving how you want, figure out how to implement a system to keep track of who is in which place. \n\nTLDR: There's many ways you can go about what you want, but I'm just trying to say \"break it down into managable tasks that build on the core game\".",
            "Hey, lemme jsut give my two cents too. You probably want to start with the player car and race track first. If you make a mobile game UI elements come into play here already. If you make a pc game that UI comes after it's feeling good enough. Then probably a time keeping (records) or a leaderboard (for placements). Then comes the AI. Also gonna be a decision if you will make the AI have a predetermined path that it will try to follow or if it will be a bit more fluid with rubber banding to make it harder for the player. Only after all this should you think about car modification options.",
            "The splash screen literally says \"Made with Unity\". Can't say anything more about the game, because it doesn't get further than that in BlueStacks and the screenshots don't say enough about what the actual technical challenges are.\n\nIf you want more help from me, then you need to properly describe the actual problems you are facing.",
            ">What are the best \"entry level\" projects? I was around for the \"mod scene\", back in the day (Quake, Unreal, etc) but that no longer exists, correct?\n\nIt very much does. Many games have active modding community. To name some - Skyrim, Factorio, Starsector, Starcraft 2, Civilization 5. \n\n>Other than UE4/5 (and unity?), what does it make sense to look into? I was in the early stages of looking into fmod before I got sick, is that still relevant?\n\nFMOD is very relevant... for audio design. Both Unreal and Unity provide integrations to it, it's a very powerful middleware. But you can skip it at the start if you just want to play some sounds. \n\nWith that said - UE5 or Unity (or Godot) are all solid and popular choices.",
            ">This got me thinking, how am I supposed to learn how to program something like Pong or Space Invaders without looking at a tutorial?\n\nThe problem is with what kind of tutorials you are using. A literal \"build Space Invaders from scratch\" that just does all the handholding for you means you end up with a game but without understanding of how it was built. \n\nNow however a bunch of smaller tutorials/guides along the way is fine. \n\nGame like Space Invaders requires understanding of these concepts in Godot:\n\n- how to display an object on a screen \n\n- how to move object over time\n\n- how to take keyboard input\n\n- how to check if key is pressed and if yes, alter object's position to the right by X. What if time between frames differs and you want consistent movement rate per second (this is what we call delta time)\n\n- how to spawn an object (when you shoot a bullet)\n\n- how to detect a collision between two objects\n\n- how to delete an object from the game\n\nOnce you learn these concepts they will stay with you allowing you to build any game requiring them.  It also might be that a \"build space Invaders\" guide you find will also in fact do exactly that. But if it's one video that just drags'n'drops a bunch of elements and suddenly it works then it won't be the case.",
            "C# is usually seen as an easier language to learn compared to C++. If you understand C++, you shouldn't have any issues with C#. \nUnity does not natively support C++, you would need to import C++ .dll's and wrap them with C# which I would not recommend.",
            ">I had thoughts of taking like mechanics and areas and making them into mini versions of the game then putting the knowledge I've picked and build from scratch\u00a0 but I'm not sure if that's the best way to go about it either.\n\nYou can either consider this prototyping, or breaking down a large game into systems to tackle individually. Both are pretty much standard approaches to game development, arguably best practices. \n\n>Should I try recreating simple games like Pong, Pac Man, or space invaders first? With or without my idea in these?\n\nIt's usually a good idea because it will allow you to build experience for gradually building up to more complex problems.",
            "There is a lot of misinformation making the rounds regarding the Unity runtime fee. Before you make a decision for or against Unity, you might want to get your facts straight.\u00a0\n\n\nhttps://unity.com/pricing-updates",
            "A game that worked 10 years ago would probably also have worked today.\n\nSure, there are always new game ideas, and sometimes you see a feature in a newer game that you want to steal for yours. Advances in tooling often make things easier, but not necessarily better. When you made something that works, there is usually no reason to do it again just because there is some new library function that allows to do it more elegantly.",
            "sameone that made undertale, gamemaker",
            "There's a key question here - who do you want to develop games for?  Who is your target audience?  Do you want to develop a game for yourself?  Do you want to develop a game for to make money?  Or do you want to develop games to get a job?\n\nFor yourself:  There's game ideas that you would like to play, and there's games you think might be fun to build or make.\n\nTo make money: You need to learn marketing and find out what games people like to play, and that will help you decide on what to make next.  Ie. Vampire Survivors is super hot right now, make one of those games.\n\nTo get a job: Your audience are game developers and producers, what high level technical game or visually stunning art can you do to impress these people who might give you a job?\n\nIdeas can be confusing when there's no direction, but give a little bit of constraint as a filter or angle, and then the brainstorming juices take off.  \n\nThink about what you want to get out of game development as a hobby -- did you start it because you just wish there was a game out there that did X/Y/Z?  Or was there a game you played but you wished there was X or Y mechanic in it, or took away something you found annoying?  Or did you start game development because you love coding projects together?  If so, you may want to go to [itch.io](https://itch.io) and join some game jams and join a team, and tell them what skillsets you can offer.",
            "All three take 30% of your sale price, but you can make more complicated enjoyable games on PC, that people are willing to pay more for. Additionally, you have less strict hardware requirements, and, if you wanna publish on IOS, you have to deal with xcode, which is an annoying piece of shit, and doesn't even run on windows.",
            "If your game is really nothing but user Interfaces operating on abstract data models, then a game engine probably hasn't much to offer to you. You will probably be happier just using the general UI framework of your favorite programming language.\n\n\nBut if you really really want to use a game engine for this, then my advice would be to follow a good beginner tutorial even if it isn't the genre you want to go for. Just to get a feeling for the general architecture and workflows of the engine. And then dive into the documentation of the UI system.",
            "They're not guaranteed income, at least not anymore. I know of a couple of studios that started working on NSFW games a couple of years ago (usually under a different label, as to not damage their brand). The word that got to me was that the games are nowhere near as profitable as they used to be. Possibly because of market saturation, and the fact that you no longer have adult websites desperately paying through the nose for new content.",
            "There is a subreddit specifically for porn game development: r/nsfwdev. There you will probably find people with a lot more insight into the development and sales of porn games.\n\nBut when you are looking at games on Steam to estimate how much money you can make (regardless of genre), then make sure you don't fall victim to survivorship bias. Don't just look at the games that show up in your recommendations or when you click on a tag, because those are only the successful ones. Look at [the unfiltered all new releases list](https://store.steampowered.com/search/?sort_by=Released_DESC), and then check out how some average games actually perform after a couple month on Steam.",
            "[I've answered this question further below](https://www.reddit.com/r/gamedev/comments/1agdesg/comment/koghr3g/?utm_source=share&utm_medium=web2x&context=3).",
            "Of course you can, as long as you don't sexualize them. I would also avoid violence towards children. Not because it's against Steam rules, but because it's generally considered bad taste.",
            "Have you tried starting with [the official learning material on the Unreal website](https://dev.epicgames.com/community/unreal-engine/getting-started)?\n\nA common beginner mistake is \"I want to create a game in a very specific genre with a very specific theme, so I will ignore anything that doesn't look exactly like that\". But that's a mistake. Before you can turn your ideas into reality, you have to learn the fundamental basics of the engine. Which you can learn using pretty much any game genre.\n\nAfter that, your next step would be [the documentation](https://docs.unrealengine.com/5.3/en-US/), from which you can pick the topics that will be relevant for your particular game.\n\nMany people will recommend to just watch a ton of YouTube game development content. I don't. Because 90% of people on YouTube have no idea what they are doing. Watching them is a waste of time at best and harmful at worst. Yes, there are some youtubers who know what they are doing, but as a beginner it is very difficult to tell them apart from the quacks.",
            "I'd suggest adjusting your requirements ;) I believe there is not a single engine that features this all. It features the building blocks to create this, but you have to put in that effort yourself.\n\nI'd also advise for a first real game to not go straight into multiplayer, since that is a whole other layer of complexity you are adding. It's up to you ofcourse, but managing expectations is a real thing in this industry.",
            "This isn't really a beginner question, you should make a standalone post for this since not everyone will see it in here.",
            "As is often the case, it's easy to underestimate the work involved.  You typed out 3 lines so let's go through them.\n\n*Top-down, turn-based strategy RPG with customised builds*.\n\nSo this right here, is likely months if not over a year of work, depending on how clear of a picture you have in your mind.  It's going to be a lot more about game design and making sense of this mish-mash of elements rather than programming it in.\n\nTo break it down further: Top-down is easy.  That's just a camera angle.  1D of work with Cinemachine in Unity or whatever is equivalent in Unreal.\n\n*Turn-based* -  Now this would actually involve a lot of work.  Gameplay wise you have to make a dedicated pokemon-battle-style scene, have logic where two groups take turns, create dedicated UI for whatever options required and obviously make several design decisions and implement them iteratively to dial things in on the turn based side of things.  The ***good news*** is you can probably lift a pre-existing asset of someone having done this already (I'd be surprised if not) and run off of that.  That would eliminate a lot of the guesswork and hopefully bring down what would take months to develop to a few hours to gain familiarity and forge on ahead.\n\n*Strategy* - Could be anything so I'm skipping this one and assume you meant Turn-based strategy as a singular element.\n\n*RPG* - Oh boy.  Yeah... that's rough.  RPGs are typically ***content heavy***.  What do indies suffer to do?  Lots of content.  It's a bit of a design nightmare.  Are you any good at writing novels?  Creating characters?  Forging worlds and setting heart gripping and anxiety inducing scenarios?  If so, RPG Maker would be your best bet and really focus in on that story.  Otherwise very frugally pick what you really want from an RPG.  Adding a whole genre just because you think is cool is a bad idea in general.  And usually an impossible one for an indie.  Your mileage may vary depending on what RPG means to you, it's a broad term.\n\n*Customised builds -* Assuming you mean an equipment board this has been done and you should find reusable concepts.  It's still going to be likely somewhat content heavy and will require UI fine tuning to make it match the rest of your game.  If you mean deep gameplay options on how to specialise your class... yet another design nightmare.  This like many others could be eased greatly if you plan on copy pasting tried and true character tropes.  And I suggest you do, it's very hard to make multiple play styles balanced for gameplay content that is static in difficulty.  Obviously a lot of fun tinkering with it though.\n\n**That concludes you first line.**\n\n*Lots of abilities and gear* - Another content heavy goal.  What do we say to content heavy indie ideas?  NO! But if you wanna do it, make it procedurally generated.  Template it and construct a system that will assemble these for you.  I'd suggest you accept any \"jankiness\" that come with weird combos and move on.  If you're a competent programmer and don't plan to overdo it, it should take you about a week to bring this in to play primitively.\n\n*Multiplayer competitive mode in the future* - That's a problem for future you.  One that once faced, based on whatever decisions you made prior to get to that point, you'll likely not want to do it, have no clue on how to do it, or find it impossible to consolidate your historically inconsistent code-base to open it up for multiplayer.  Multiplayer is often underestimated.  It's easy to bring in, very hard to dial out all the weirdness that ensues however.\n\n*Competitive mode* - Putting it in its own line.  Also a problem for future you thankfully but making anything competitive adds a tremendous layer of complexity.  This is compounded further by the fact it's Multiplayer (I'm assuming live multiplayer) and an RPG to boot potentially with procedurally generated content.\n\n  \n-----\n\n  \nMy suggestion:  Go for it.\n\nI'm not joking, you'll likely have to abandon most of these lofty plans but it's going to be fun, educational and transformative.  I would suggest you choose between RPG story driven and turn-based strategy however.  Doing both at once to start off with is a bit insane.  I'd go for turn-based to begin with.  You'll be in a good position to bring in RPG elements later on, on top of your turn-based gameplay.  Best of luck.",
            "[Twine](https://twinery.org/) might be a good choice. It makes it really easy to create interactive text stories with branching narrative and optionally embedded images. It can also do some game logic. While I have seen Twine games with inventories, I haven't seen any with *drag & drop* inventories in particular. So if that's really a must-have requirement for your game, then it might require some tinkering to get it to work.\n\nIf you want to make sure you won't hit any technical barriers, then you probably won't get around learning a general purpose game engine like Unity or Godot. But those will have much longer learning curves.",
            "Unity or Unreal, depending on which one you like better.\n\n>how hard could be to implement this souls-like combat system?\n\nCheck out the animation system of the engine you are using. Hit detection can be done by temporarily attaching a \"hurtbox\" collider to the character that roughly matches their weapon.",
            "Maybe r/gameideas can give you some inspiration.",
            "It doesn't look like you explicitly stated your problem which will make it harder for someone to help.  If your issue is that of code architecture it might make sense for you to really tackle this issue as a Data Structure problem first and foremost.  A board (2d) is usually represented as a 2D array, and you would construct the Board object that would contain this data.  From there you can create functions that manipulate the board (Move Piece, Eliminate Piece, Add Piece) and each of those functions would run the necessary checks on the piece being operated on and the board itself (can the piece move this way?  Is it legal to add it to this square?)",
            "Your engine choice is mostly driven by your technical requirements and not so much by your game mechanics. You can have a \"narrative driven game\" that is just still-images and text (aka \"visual novel\") or one where the player explores a rendered 3d environment and interacts with animated 3d characters.\n\nThe first one is something a single person can actually pull off, and is something you would do in a specialized visual novel engine like Ren'Py. The second one requires a 3d engine like Unity, Unreal or Godot (pick your poison).\n\nAlso, I advise you to manage your expectations. Life is Strange had [over 300 people working just on chapter 1](https://www.mobygames.com/game/73529/life-is-strange-episode-1-chrysalis/). The Quarry [had over a thousand people involved](https://www.mobygames.com/game/185574/the-quarry/). And we are talking full-time professionals here working several years of their life. You are not going to pull off a project of that size on your own. And you are not going to pull off a project with that level of quality as a beginner. If you want to do a solo project, it will look and sound a lot worse and be whole lot shorter than those games.",
            "This is usually called \"paper doll animation\". There are many software libraries that support it. What game engine are you using? You should probably pick a solution that fits well with your game engine.",
            "You can remove this blocker by downloading and trying out these engines and find out for yourself if your concerns are justified or not.",
            "XBox is a lot.\n\nI would recommend picking an engine that can export to HTML5 (Godot or Unity), putting the game on Itch.io, and testing it on your phone as early as possible to make sure the touchscreen controls work. That will let her run it on the iPad. You will need to think about touchscreen-specific design and controls to make this work, but that's hardly an insurmountable obstacle.",
            ">Like set the Xbox up as a developer machine or something\n\nSo to to that you'd need to pay like 20$ to get into that creater something program AFAIK",
            "Game development is a ton of work. Much more than the average player realizes. So building a game for a loved one is usually not a very good way to use your time. Usually it's better to spend that time *with* that loved person. Perhaps building a game together?\n\nAnyway, if you want a game to be playable on as many platforms as possible with as little porting effort as possible, then nothing beats HTML+CSS+Javascript. Then the game runs on anything with a web browser.",
            "Enter the Gungeon.  If you were to do it as a **beginner solo game dev** you highlight the following elements:\n\n- Top down view (put a camera up top and have it point downwards). Depends on game engine, typically very trivial and can be completed in an hour or so.\n\n- Character Movement (WASD or joystick - game engines will sort this out for you typically) You can ask GPT for this and you're done in less than an hour.\n\n- Player Stats (health, stamina etc - a dedicated object that tracks this and accepts modification / fires events on changes). Likely 4hrs as a generous estimate.\n\n- Abilities (weapons / skills - this is going to be the meat and bones of such a game.  It's going to depend on how far you want to take it (time wise) and how far you can manage (code wise).  Could take a couple of hours or several months depending on how complicated you make it.\n\n  - I'd personally suggest hard coding 2 guns. A sniper rifle and a shotgun.\n\n  - No fancy shaders, no complicated multi project generating logic, just a single point of damage going far, or a shorter cone.  That's a couple of hours of work probably.\n\n- Level Design - Unless you're confident in coding procedural generation just create a single level manually with some static colliders for walls.  1day of work, another day of polish\n\n- AI Logic - Have a circular trigger collider around them.  If you step in it they'll chase you directly.  Using nav meshes will just slow things down, accept all the bugs that come with this. YOLO.  They can use Rigidbodies while your player uses a Kinematic.  2 hrs work\n\n- UI and scene transitions - probably a couple of days, depending on how new you are and how complicated you make it (don't)\n\nThat's less than 5 days of work estimates (6 hr a day).  Double it and add 10% = 11 days of work to get a simple shoddy looking Enter the Gungeon.  But it's your baby :)",
            "Any game engine can do this, though it requires custom assets and often a lot of custom shaders to get the style right. One thing devs try is fixed point precision on skinned mesh renderers to get verticies to pop in the right way.\n\nI think Godot would be your best bet because it's fast and easy to learn, followed by Unity because it has a lot of tutorials.",
            "Yes.\n\n\nJoking aside, pick an engine, follow a few tutorials and make a few games of different genres. If you want my first steps written out for you here's a sample (lots of alternatives are possible so others can give you theirs) :\n\n\n- Install unity latest LTS (non beta) version\n- Follow unity beginner tutorials for getting accustomed to the engine.\n- Pick a short unity tutorial that completes a simple game that would interest you\n- If you're feeling confident modify the result a bit and experiment\u00a0\n- Start a task board of sorts (Obsidian Kanban is what I use, Trello is what I'd recommend to most people)\u00a0\n\u00a0 - I'd create a platformer, top down strategy, shooter and rpg game variants to start with. Going one at a time.\u00a0\n\n\nAn examples for a platformer, start by creating and time estimating tasks (Pretty much what I'd write into Obsidian Kanban):\u00a0\n\n\n- Side view camera, static (2h)\n- Player movement (ask chatgpt) (2h)\n- Level design with static colliders for walls and platforms (1d aka 6h)\n- Coins to collect (4h)\n- Score system - tracks collected coins and show on screen (4h)\n- Traps - dead if you touch them, reset game (1d)\n- start screen and game over screen, transition between them (4h)\n\n\nMake it a 4d estimate - (6h daily) double it and add on top: 9d",
            "Then do it in RUST if that's what sounds most fun. Hobbyist game dev is about enjoying the journey to discovery and learning. Too much focus on the end result spoils the fun and the entire project becomes a burn out. I recall reading about rust graphical packages but I'm clueless about Rust so you probably already know better on that topic than I would.\u00a0",
            "A game like Palworld requires a whole company to make. It's not something you can do all by yourself, even if you knew what you were doing. For your first couple games, you should think a whole lot smaller than that. Collect some experience, build an audience, make some connections to other game developers. Maybe also get a job or take some contract work for other people's games, so it's not *your* time and money you are spending without any return on your investment.\n\nMaybe in 10 years or so you will have enough clout to find some investors, form a company and make a game like that.\n\nWhat engine should you learn to make your first forays into game development? All three are good options. The first place to look for learning material would be their respective websites. For Unity in particular, it can make sense to learn the C# programming language first by using the official learning materials from Microsoft.",
            "If you want to learn how to make music, then you better go to communities for music creators and not for game developers. There is nothing so unique about music for games that means that you need any game-specific learning materials. If you are looking for a free DAW (Digital Audio Workstation), then you might want to give [LMMS](https://lmms.io/) a try.\n\nBut... do you really need to? Music composers are really abundant. Making music is probably the one role on a game development team that is the easiest to outsource.",
            "just look into using tabletop simulator on steam",
            "Macbooks that are decent at game development are expensive. I am developing a 2D game and I ended up upgrading my dying aging laptop (I already have a decent PC) to 18GB Pro 14 which I considered a **minimum.** Apple has very competitive CPUs but in terms of GPU performance - even this model is frankly really not all that good. A 3050Ti can already outperform it and it's getting slaughtered by RTX 4050 in a laptop costing half of it's price. In theory it should be doing a fair bit better but hardware is one thing, software and driver support is another - and nobody cares about MacOS for desktop/laptop game development. \n\nSo if you have $2000 for one - it's not bad. Building times are great (I am getting 160s for a full build vs 140 I saw on my desktop's Ryzen 9 7900), RAM is okay for now (honestly I would recommend upgrading to 36GB since 18 is really not all that much with Unity taking 10 and IDE eating 4 but that rises the price to $2400 which is outside of sanity realm for most), 512GB storage should also generally suffice.\n\n>Is closs-platform compatibility in development working well between macos and windows?\n\nDepends on what specifically you are doing. I think in my entire Unity project like 10 lines of code differ compared to around 37000 that are identical. But you can run into problems too - eg. if you wanted an actual game window to be jumping around - that's OS specific. Want to access specific files for some reason outside of game directory - that's OS specific. Need to do some intrinsic function calls - OS specific. Want identical results from math operations (down to a single digit) - that's OS specific. \n\nSo it's not a problem 99.99% of the time for indie games. But there are exceptions. \n\n>Can I do most of game dev on my win laptop, but also work on them on MacBook, when I travel or on the go?\n\nAnswer is yes. \n\n>I'm new to gamedev, and am currently thinking of updating my laptops\n\nThis might be a silly question but... why do you need two **laptops?** I get buying a Macbook to be on the go. It's light, has great battery life,  you can pack it and take it with you anywhere, higher end models are fast enough to work on modern games in modern engines. \n\nBut then why do you need a second one? Why not a standard Windows desktop PC? Gives you upgradability, **way** better specs for the price, more screen space etc. A PC that will vastly outperform a brand new 2000$ Macbook Pro 14 in most metrics can be built (including a screen) for pretty much half the price:\n\n[https://pcpartpicker.com/list/mtfZ34](https://pcpartpicker.com/list/mtfZ34) (comes with 32GB RAM, 1TB storage and 2x GPU performance)\n\nAt least personally I would rather use my funds on a PC (since it's cheapest way to get performance) + laptop rather than 2 laptops so you overpay twice for performance in a small size factor.",
            "maybe your just not understanding what you need to make this game work. I suggest you go back to the design phase and see exactly how to make the features. there are so many engines that are free that will make an educational platformer, but if you don't have the skills its not really the tools fault is it?",
            "Performance. Hardware back then often wasn't powerful enough to render a whole 3d scene in real-time. At least not when you wanted it to look good. So you would usually render the scene offline (which took several minutes to several hours) and put the rendered image into the game as a static image.\n\nFor 3d models, this is often even done today. When an object is far away, then you can often replace it with a sprite without the player noticing it. This can be a great performance optimization. Google \"imposters\" for more information.",
            "That Guilty Gear art style requires tremendous skill and effort to pull off. Hope you got the budget to hire a bunch of really good artists, technical animators and graphic programmers.",
            "The question of which engine to choose is based on the technical requirements of your project and the skillset of the people working on it. What genres and mechanics you have in the game isn't very important.\n\nTechnical requirements are things like \"I need to render 100 animated high-detail 3d humanoid characters at once\",  \"I need a robust multiplayer system out-of-the-box\" or \"I need the game to run on PC, Mobile, VR, consoles and smart toasters with minimum extra work for each supported platform\". On the other hand, things like \"the player needs to be able to jump\" or \"the player must be able to click on buildings to see an information panel\" aren't technical requirements. You can do that in pretty much any engine.",
            "A tutorial for what engine?\n\nIn most engines you would define a plane for throwing things (either the horizontal plane or a plane perpendicular to the camera) and then do a quick ray-plane check from the mouse cursor to that plane to get the 3D point in space the user is pointing at.",
            "Don't think. Do.\n\nMake Flappy Bird/Pinball/Pong/Pacman. Preferably several ones. See what you enjoy and what you don't. Make the barebones version and see what you'll try to improve the most, etc.",
            ">Ren'Py is the standard answer you get when asking for visual novel engines to the western community, but well looking at some examples made in Ren'Py, apart from the windows port of doki doki, none of them seem to have a quality similar to Fate or Clannad or something.\n\nFate and Clannad are highly acclaimed because of their stories, not the engines they were made in. They would be good in *any* decently functional engine.\n\nReally, you should just use Ren'Py. It has good documentation, a wide community around it, and is perfectly functional for 99% of VNs right out of the box. \n\nKiriKiri is popular and used in a lot of great VNs, but the English documentation for it is practically non-existent, so it's a complete nonstarter unless you know Japanese (and I mean *actually* know, just the kana won't help you.)\n\nGodot is viable too, but unless you have a specific reason to go for it (like if you wanted to implement more complex gameplay elements) I wouldn't bother.",
            "Sound like a good plan to me.",
            "If you ultimately want to learn GDScript and use Godot, I'd suggest you learn GDScript and use Godot. Follow their tutorials and explore open source games",
            "I'd say to start with something a lot smaller at first, like for example following the new Brackey's tutorial, just to get a feel for things. After that, sure, dive into making a Pokemon clone. If it's something that interests you, go for it. It's better to do a slightly more complex project you are passionate about, than a small project you don't like.",
            "I think you're on the right track, your pros are solid, your cons are typical challenges for any game dev, depending on your level of progress and having some programming knowledge and plenty of tutorials already sets you ahead.\n\n\nIf you're already familiar with Godot you should get good mileage out of that.\u00a0\u00a0\n\n\nMy first game a few years back before joining the industry (backend mostly, very little frontend) was Action Pong on Godot, aka normal 2d ping pong with abilities like freeze, barrier, orbital slingshot etc. Very simple and really poorly done back then. It's very far off of what I work on day to day at work (Unity) and my hobby project nowadays is a bit broader in scope than Pong (simpler than pokemon in implementation but more complex to design to it being a novel idea)\u00a0\n\n\nMy suggestion would be to go for broad design first. Aka have shoddy \"everything\". Movement, UI, combat, levels and as you're experimenting figure out which area you'd like to focus more on, both be cause you have an interesting idea and also because you can see a potential solution.\u00a0\n\n\nBest of luck\u00a0",
            "[deleted]",
            "Assuming you have zero experience?\n\nRoblox.\n\nYes, I am serious. You get multiplayer out-of-the-box, it is relatively easy to find players and the technical limitations mean that the expectations for asset quality are relatively low. So you don't need to invest too much time and/or money into asset creation.\n\nJust don't try to make money with it. Children don't have much money, and you only get 25% of what they spend on your game.",
            "Im a beginner too so take what I say with a grain  of salt haha but I have 10+ years in Software development so I have some intuitions.\nAs far as I can tell you can probably do almost everything with any engine, some are better at specific things, but when you wanna get started the best thing is to just pick something up and experiment with it, personally I started with Unity since it can do everything quit well and have great support.  \nMy advice is to start even smaller, make couple of tiny projects that implement a specific feature \nAnd it will be like a library of references for your bigger projects.",
            "The best language is the one you are comfortable with, the one you can use without constantly being slowed down by other problems(dependency hell for example). \n\nC++ is not an easy language. C# is a little more approchable. Pygame and l\u00f6ve2d are even more beginner-friendly solutions to learn gamedev\n\nOnce you are comfortable with gamedev, you can easily switch to an equivalent solution.",
            "So first and foremost - you VASTLY overestimate performance requirements needed to run a game server.\n\nLet's put it this way - back in the old, old times of around 2008 there were private WoW servers that managed to support 1000-1500 people **at once** using a Phenom II x6 CPU and 8GB RAM. Now, do you know what kind of computer easily beats that Phenom II? Raspberry Pi 5. And it's not even close, it doubles it's single threaded performance. \n\nSo I wouldn't worry about hardware. You can rent 2-3 VPS-es for $20/month each if you want to support multiple regions and they can easily scale to thousands of users at once, more than most games ever need.\n\nThe problematic part is software and writing your server code. You are effectively building two projects at once - a game client and a server application. You need to handle user registration/login etc. Now that will take MANY workhours.",
            "If you're wanting to start off with 2D, you shouldn't use Unreal because it has very little formal support for 2D. However, basically any other engine would work, so Godot, Unity, and Gamemaker could all be good semi-professional options. If you want something easier with no text-based coding, you might want to try Construct or Scratch. Good luck!",
            "The truth is that it doesn't matter what programming language you start out with. What most people don't realize when they start to get into software development is that they are actually learning two skills at the same time: The syntax of a programming language and the skill of thinking like a programmer. The second skill is actually the much harder one. But beginners can't really tell the difference between the two. So they think that when they spent years to get vaguely competent in language A then it will take the same time to learn language B. But that's not the case, because the skill of thinking like a programmer transfers. The more programming languages you know, the easier it gets to learn new languages.\n\nSo bottom line is: It does not matter what language you start out with to learn how to think like a programmer. And after you grew those programmer synapses in your brain, you should know enough about your personal goals and preferences to make an informed decision for yourself about what language to learn next.",
            "Absolutely. Once you know one language it's very easy to learn another.",
            "this seems very doable. just take some online tutorials on python. you should be fine. for game engine, try to learn pygame. i don't know much myself, but for python just go the biggest and easiest route.",
            "Check out Allegro or SFML tutorials. They won't show you how to make a complete game but they will show you enough to get started. \n\nThere's also Monogame which fits the same niche - it's not like from \"absolute\" scratch but I wouldn't call it an engine either. It provides basics like parsing your inputs, playing sounds and displaying primitive shapes on the screen.",
            "I'd start with sdl2. It's a small C library that deals with creating windows, getting input, drawing graphics and playing audio. It has all you need in a quite low level but not low enough that you'd have to care about dealing with platform specific stuff like win32, etc... it's easy to learn and portable. It will run everywhere.\n\nThe resources I like the most for learning SDL are the Parallel Realities and Lazyfoo tutorials. The Parallel Realities one goes through all the steps of making small games, which is perfect to see how things work together (and I really like the fact it uses pure C). The Lazyfoo one is also a pretty good reference and a very easy to follow tutorial to get the basics of the library.\n\nSDL has a 2d renderer that is enough to draw pixels on the screen and loading textures. which is enough for simple games. Though if you want to go 3d, understand the lower level graphics pipeline, deal directly with shaders, fancy effects... you can still use sdl for window handling, controls and audio, but you can do the graphics related stuff in a opengl context instead of using sdl's renderer. The learning curve for opengl is way bigger than just sticking with sdl's renderer. You'll have to deal with a lot of linear algebra and understand how your hardware render graphics, but this journey is worth it. My favorite tutorial is the learnopengl by Joey de Vries. It teaches you a lot about computer graphics in general and you can transfer this knowledge to a lot of other things so I really recommend it.\n\nThere are other alternatives to SDL2. A popular one is SFML. It's C++ only and it has a clean and easy to use object oriented API. It's very easy to approach if you are used to C++. Honestly I prefer SDL2 because it has a bigger community, it's very stable and backed by Valve. And for being pure C, I can choose if I use it with C or C++.",
            "I think the term you are looking for is \"procedural generation\".",
            ">would it be better let it be free?\n\nBetter for what purpose? To get more players to play the game? Yes. To earn some money? No.\n\n>should a focus in this as a 100% my project, from art, code and music?\n\nAgain, what is your objective?\n\nEarn the \"solo developer\" bragging rights? Then do everything yourself, acquiring the skills you need on the go.\n\nEnjoy the process? Then do the things yourself that bring you joy, and use free stuff for the things that don't bring you joy.\n\nMake money? Then you should consider to spend some money to make money. You can't be good at everything, so focus on your strengths. Paying people to do the things you can't or don't want to do well is an investment into the game that can really pay off.",
            "Sounds like a 2.5D kind of game? Paper Mario plays a lot with the idea of a 2D character in a 3D world tho that may not be what you are looking for. If you are looking for a classic Sidescroller imo you could look at Kingdom Two Crowns. Or maybe fire emblem could be something to look into too? Not entirely sure",
            "Using Unity for a text adventure is certainly possible, but kinda cracking a nut with a sledgehammer. And it won't help you to practice C++, because Unity uses C#.\n\n\nHave you considered RenPy or Twine? Those are specifically designed for illustrated \"choose your own adventure\" style games. But they won't let you practice C++ either.",
            "1: When you are trying to do a piece of pixel art in 1080x1080, you are going to make over a million clicks. And that's just one frame of one object. You sure you have time for that? Pixel artists usually work on much lower resolutions and then upscale their sprites in-engine. For 1080p sprites, you would usually use a vector -based workflow\n\n\n\n2: What you are describing is called using \"Tiles\" and it is a very common technique for 2d environments.",
            "You might want to check out Unity or Godot. Both are pretty popular engines for 2d platformers.",
            "The problem is that people have no idea what they actually want unless they play it. So multiple choice surveys as a game design tool are pretty much worthless. That would be as if you were a chef who wants to create a new dish by asking 100 people how they feel about certain ingredients and then just put the top 5 answers into a pot and stir. Do you think that this will result in something edible? No, because a dish is more than the sum of its ingredients. It's about how you combine different ingredients to create a certain flavor profile and how you prepare them.\n\nYou can look at games which use a mechanic and see what the reviews say about it, but even that isn't very useful, because it only tells you how well that mechanic works in the context of that particular game and in the way the developers implemented it. A mechanic that works in one game might have a completely different effect in another.\n\nThe only way to find out if a mechanic works is to prototype it and get some playtesters.",
            "Unity supports several code editors, and which one you use to write your C# code for Unity doesn't make much of a difference. You might have to teach yourself how to enable auto-complete and debugging, but you should be able to figure that out using online resources. I recommend doing that before you start the course by trying the beginner tutorial on the Unity website.",
            "I believe there is a difference between art and style. You don't have to be good at art as long as you can nail the style down. For example take Hylics: [https://store.steampowered.com/app/397740/Hylics/](https://store.steampowered.com/app/397740/Hylics/) It's not great high quality or realistic art or anything, but when you have it all mixed together in the finished product it looks awesome.",
            "I would recommend to try to plan your scope and schedule so you have something you could theoretically submit for a passing grade when the semester is half over. You will probably run into a ton of problems you didn't anticipate (like every development project), so a generous time buffer is important.\n\n\nShould it turn out you don't need it, then you have the rest of the semester for polishing and adding stretch-goals. Which is a lot less stressful when you know that you already have a working game to submit.\u00a0\n\n\nSo bottom line: First priority is to make a ***playable*** game, second priority to turn it into a ***good*** game.",
            "Most game engines should have an official tutorial on their website, which is usually a great starting point.\n\nIf you never programmed before and the game engine uses a common programming language, then it can help to learn the basics of that programming language first before you try to learn programming in the engine. Everything will make a lot more sense that way. There are tutorials for absolute programming beginners for most programming languages available.",
            "Why not try both by making the official tutorials and then decide which one fits you better?",
            "The game industry is an industry that offers many different professions.\n\n\nWhat exactly do you want to do on a game development team?\n\n\nFor an overview of what kinds of job titles there are, check out the credits of some AAA games, or check out the second half of the article [the door problem](https://lizengland.com/blog/2014/04/the-door-problem/).",
            "Github is a website that hosts git projects, kind of like a really cool Google drive. Git is the program that allows you to make commits, or checkpoints of your progress as you go along. You'll want to watch a tutorial for installing git if you are unfamiliar, but it's somewhat straightforward. You can then navigate into the directory your project is in and run `git init` to start tracking it. You'll need to create a remote repository (code storage place) on github, and then set your project to acknowledge this as the remote. Then you can add your files to git `git add .`, and `git push` your changes to the repository. \n\nAlternatively, if you creat a repo on github you can clone it locally and then just copy your project folder into it and work from there.\n\nDisclaimer: this is not perfect advice, I'm typing on mobile, etc. I'd recommend just watching a YouTube video to learn git, ans then start getting github setup. When you run into issues, chatgpt is really good at helping with figuring out which command you need. Also, my instructions were from a Linux/unix perspective, windows should be similar but may have slight differences. Good luck with your project :)",
            "Your hardware requirements depend on what kind of games you want to make (technically, not thematically) and what technology stack you want to use. So there is no one-size-fits-all answer to what hardware to use. There is no special \"game development hardware\" you need (except for some really niche areas you don't need to concern yourself with as a beginner). If a computer can run a game, then it could probably be used to make that game. So the hardware recommendations for game developers are usually the same you would give to a gamer.\n\nAlthough I would in general recommend a bit more RAM and two if not three external monitors if you want to do serious game development.",
            "If you want them to run in the browser and you want to optimize for a minimum amount of bloat, then you should learn HTML and JavaScript. After learning the basics of the language syntax, check out [the Canvas API](https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API). It's what you need for drawing 2d graphics in the way you usually do it in game development.\n\nAnother possible road to take is to learn any other programming language that has a mature toolchain for compiling to WebAssembly. But you are then going to use the same APIs as you would use in JavaScript, and you still need a bit of JS glue to load and run WebAssembly modules. So you probably still want to know some basic JS beforehand.",
            "Godot is fine for a game like that.",
            "Yes, that should be possible in Godot.\n\nThe building blocks you need to create a visual novel or point&click gameplay are available in any general purpose game engine.\n\nYou could create the wavy screen effect with a custom post-processing effect.",
            "\"Tycoon game where you are a software developer\" doesn't really tell us anything that's related to engine choice. \"Tycoon game\" can be interpreted in many different ways.\n\nBut the standard answer to which open source game engine you should use is Godot.",
            "The same game engines as for any other 3d game: Unity, Unreal, Godot.",
            "If you want to really learn multiplayer game architecture I'd suggest using a framework rather than an engine, but I know people have had some success w Unity.",
            "I'd ask this on a more musically-based subreddit? You might find it easier to get an answer there.",
            "You *can* do 2d games in Unreal, but it's really not designed for that kind of game.\n\nHave you considered a general purpose engine with dedicated 2d tooling, like Unity, Godot or GameMaker?",
            "For anything 2D I'd direct you to Unity 3D - It is fully equipped for it, it has a complete 2D template. I have a lot of experience with both Unity and Unreal, and Unity is pretty much perfect for anything Android. You do need a bit of C# knowledge, which may set you back a few months depending on your previous experience. I heard Godot is a good one too, but I don't have first hand experience with it. Godot uses its own programming language that apparently is easy to learn. I'd personally not pick Unreal, which is more for 3D \\[photo\\] realism and heavy rendering \\[PC\\].",
            "Oddly enough, it was the Game Jam that reignited my desire to learn. I randomly found a video covering the Dungeon Crawler game jam for this year, and I thought the designated limitations (genre, themes, time limit) were perfect (Detailed instructions and parameters are amazing for ADHDers), so I decided my goal is to eventually participate in one of those events.",
            "I wrote that because the UI tools in most game engines are pretty *meh* compared to what you have in the non-game space. WPF in C#, Qt for C++, JavaFX for Java, the trillion frameworks for JavaScript... those are far better and far more fun to use than what you have in Unity, Unreal or Godot. You also don't have to haul the huge engine runtime around which you don't really make any use of. And you don't have any licensing/royalty/runtime fee concerns.",
            "Thanks man for reply \ud83d\ude03\n\nI will take it into account as I am working on it, about 2.5D thing I don't mind even using illusion of 2.5D on a 2D map if I can just figure out how to use shadows and lighting combined with 360* movement to make it look like as if it has 3rd dimension as I work out things.\n\nOr like u said focus on 2D for now and then come back again on same idea and try it with 3D like a isometric game.",
            "Thx Fae , this is quite helpful and will start working on it.\n\ud83d\ude06\ud83d\udc4d\n\nYea will look into 3D once I get familiar with concept of animation and movement.",
            "I've heard this too and that does make sense. Almost to the point that maybe I should just keep a scene with a base player model and FPS controller, floor, and a couple objects with collision on them just as my \"default\" project template?\n\nI guess it's similar to any other programming project in which I also have trouble with the blank canvas issue. It's knowing WHERE to start, but getting to the very core is the best place and then just adding one piece at a time.",
            "As a staff DevOps Engineer, this really helps a lot actually, haha. Thanks for the PM approach!",
            "Thank you for this setup. I \"lost\" crucial points for my learning path. You really helped me!! =)",
            "That's super helpful, do you have any tutorials you can link right off?",
            "Oh I see, for the longest time now I've assumed that 2.5d was mostly about the camera placement, like using the 3d models of the newer mario games but doing a sidescroller level, but I guess what it now means is using a sprite in a way that it can move in space, just always faced at the camera?\n\nMy thoughts were that even though I don't plan on giving alternate angles on the models, the slight perspective shift as objects approach the edges, and also since it feels like there are a lot of cool lighting things 3d seems to be able to do, should look better? At the very least I won't be getting access to quality sprites to match that.\n\nThanks for the insight, that was surprisingly productive for me",
            "Thanks! Great write up, really appreciate it.",
            "Thanks for the response!\n\nMy productivity tooling so far has been Google and Jetbrains Android and KMM docs and training, DALL-E for AI Image generation for art, ChatGPT for quick information I don't know and resource searches, Trello and Google Drive docs for organization, sharing, structure, and priority of work. It's created in Android Studio and builds an iOS and Android application.\n\nI think you may have the wrong idea on what I am considering trivial or maybe I have a skewed definition of it. Trivial and feasibly are almost the same for me in the sense that I have a straightforward path to success and can make regular progress. I'm \"trivializing\" the process for me by having tasks that are the right incremental challenge with structure and support to keep me focused and moving forward regularly.\n\nI can't make a complex first game. I can't make a large and complex first ANYTHING. I can create an entirely simple and enjoyable world for gamers to play in and later when I have more expertise and capabilities I can bring out the more grandiose. Realistic is the scope of the work.\n\nSo far, I have had to scale back a lot of ideas and keep to a simple Choose Your Own Adventure style game about space travel and harvesting resources. There's a large focus on immersion and fun with the story and events. A big part of the simplification is the breakdown of anything complex to make it easier to understand, code, and continue to use.\n\nI am still trying to release my first game. Keeping it small, simple, and feasible will make it harder to give up on, it will be more satisfying, and I will continue to grow from here. Far too often I fail on some idea and then am too crushed to continue work on these larger dreams. Now I am stepping up one at a time to get there.\n\nI was wondering how I keep the mindset and continue the wins to then move onto bigger and better things. The tools I am using have helped me so far and I wanted to expand on the success and maybe move into a proper gaming engine (Godot/Unity/Unreal).",
            "Thanks for the answers, everyone.\n\nYeah this is my first game, no scrolling, and just 320x180, so I figured that would be fine to paint, but this is good to keep in mind if I try anything more ambitious.",
            "thx, i think im going to try and take my time with this and just use a bunch of tutorials",
            "Any advice on how to do C in a time efficient manner? I've identified a number of skills I need to improve. This is a nonexhaustive list:\n\n3D Modeling\n\nAnimation\n\nMusic Composition\n\nMaybe drawing? Would be good for making topographical drawings for 3D modeling.\n\nStory/quest/character writing",
            "Thank you for this.\n\nThis may be insightful for my future endeavors.",
            "Good to know, thanks",
            "thank you <3",
            "Thank you so much for your thoughtful and informative reply. It is exactly what I was looking for.",
            "oh man, I absolutely used RM2k as a kid... definitely going to give this a look, thanks!",
            "[deleted]",
            "Thanks for the insight! I didn't realize Unity rolled back their pricing changes. That was my only real apprehension with using it.",
            "ty for this answer this will really help me on my journey!",
            "GitHub only lets you upload 100 files at a time and the project it well over three thousand files =/",
            "You make a good point! Thanks for the feedback!",
            "I believe the languages were JavaScript, C and C++.\n\nIt's been a WHILE but I remember a whole lot of If statements. Again it's been a very long time\n\nI will look into godot! Thank you for the guidance. a visual novel to start sounds like a good plan. Especially like trying to deal with learning how to do save data or stuff like that.",
            "Thank you so much you legend this is exactly what I\u2019ve been looking for thank you so so so so much!!",
            "Yea, i figured it would be some insane tech to keep it managed and stable.   \nLikely why more and more modern MMO's are opting for cloud servers over dedicated data centres.   \nLike even small scale MMO's like Sky, where each area only really has at most like 8-10 players sharing a zone, but the balancing and on the fly server merging to keep zones as populated as possible would require some mad net code.\n\nI imagine there would be some teams out there exploring some level of out of the box solution for it, i did see some people working on the front end framework, but its generally plug ins for existing engines like Unity.",
            "Wow that's a lot of great info, thank you so so much!",
            "Thanks, i haven't stop to think in my real objetive. I'm more of a enjoy the process type, so i guess i will give my all in the next project and try make the arte and music to see if is something i enjoy or not.\n\nAnd i think i will put my first game in the \"name ur price\", seen more fair to me, as is my first real project and soo",
            "Kingdom Two Crowns! I completely spaced on that one, I haven't played in forever. But yes, that's sort of what I mean with side scrolling. Not as wide (overall), but the same in terms of interaction & back & forth movement.\n\nI'll check out Paper Mario then. I'm not a big Mario fan, but I've been studying more than playing games for almost a year now.\n\nI'm familiar with Fire Emblem in name only, but my husband does have a Fire Emblem switch game so I can try that some time.",
            "Well, you just missed Ludum Dare 55. Check out Itch.io, they have a big list of community-managed jams.",
            "Have you played games done that way? I have, and it's really not pretty. Severely limits your player base and some things are a lot more work. Ok, I guess the more modern frameworks might be better, but something like WPF? Hell no...\n\nFor example if you want to have a world map or something with pretty borders you might need shaders. If you want to juice up your UI it's a pain. Then you have too many sprites for your UI or something and start running into performance issues and start to wish you had the asset pipeline of proper game engines. Then of course there are the multitude of other things an engine does for you. Input system and rebinding, options like Unity's ECS or jobs system, editor tooling, ability to view and modify data while the game runs, porting to mobile/consoles, sound and music, error reporting/analytics, step/time system, scene management, pretty fonts, multiplayer framework, asset store , etc. This is just off the top of my head, the list is huge. Just rendering 3D on the screen is actually a pretty small part of what an engine does.",
            "I don't really have any off the top of my head that I recommend, I learned C# in college via coursework and once you know one language intimately it makes it much easier to learn others\n\nI just googled real quick:\n\nPython has official resources: https://www.python.org/about/gettingstarted/\n\nC# does also https://dotnet.microsoft.com/en-us/learn/csharp\n\nC++ from W3schools (known and reputable source for tutorials) https://www.w3schools.com/cpp/cpp_intro.asp",
            "There's been a lot of ways people have experimented with 2.5d over the years, glad to hear you have a good path forward to explore! :D",
            "Best of luck!  I recommend following Mizizzizz's recommendation on how to become a pretty good game developer in one year:\n\n[https://www.youtube.com/watch?v=5-iST0a69cI](https://www.youtube.com/watch?v=5-iST0a69cI)\n\nRemember, if you want to learn quickly and efficiently you don't want to just put in 10,000 hours.  You want to put in 10,000 hours DELIBERATELY.  \n\nThis guide helps you focus on game development in pieces - chiefly the most important to learn is 1st get the technical skill of putting things together with code and your engine.  THEN, 2nd is to learn game design.  \n\nOnce you can combine game mechanics and make something fun, then afterward you can go in the deepdive of learning art, animation, music composition, marketing, etc.\n\nIf you're not interested in learning coding, then GameMakerStudio is the next best option.",
            "3d modeling and animation: Start with Blender Guru's Donut Tutorial series and then go from there.\n\nMusic composition: I would really advise to outsource that. Beginner music composers often offer their services really cheap. And if you don't want to pay anything, there is plenty of creative commons music you can use.\n\nWriting: Seriously, just try it.",
            "You're welcome! A quick note on the scope. Given that you are new to this, alone, and only working in your free time, I would expect an MVP to take 2 weeks to a month to create, and 6 months to a year for something somewhat \"finished\" that you will be decently happy with. Of course depending on how fast you learn and how much time you put in.",
            "I used to work Cloud Integration, everyone was all about the Azure Certs... I suppose they can be useful, but it's not the cert itself that matters.  Rather the deeper understanding you hopefully gained that has a slim chance of being applied to a broader environment, not just for that specific tooling.  Alas in Cloud it's all too specific and a lot of the skills are useful but not directly transferable.",
            "Use Git (desktop client as CLI or a GUI variant) with LFS ideally for the binary files. Look up some setup guide for unreal. Maybe try https://www.anchorpoint.app/blog/git-with-unreal-engine-5\n\n\nIt boils down to the following :\n\n\n- install git\n- create repo on github\n- git init on the project root (locally)\u00a0\n- git remote add github (instructions on site)\u00a0\n- copy over an lfs attributes file and install git lfs\n- git add -A\n- git commit - m \"first commit\"\u00a0\n- git push\n\n\nEverything goes upstream. Your friend can then git pull.\u00a0\n\n\nThe git process is:\n\n\n- Pull latest\n- Make changes and add commits\n- Push them\n\n\n(Then find out you need to pull something more, there's a conflict and everyone burns)\u00a0",
            "Oh! nice! You can totally use C and C++ with Godot. The workflow is a little different than when you use the engine-specific language, but it should work great.\n\nRandom word of advice I wish I had learned sooner: Don't worry about performance while you're typing out your code. Worry about that on a loose design level beforehand, and on a nitpick level afterwards (if it actually runs poorly). When I say beforehand I don't even mean the whole project. Just like random little things.",
            "Tbf I haven't played the newer fire emblems. Last I played was awakening (3ds)or the phone gacha game. But hey, if I could help you thats great. Tho more on the gameplay side of 2D vs 3D,The legend of Zelda a link between worlds has *some* ideas tho probably not what you are looking for.\n\nBut overall yea sounds like games like Kingdom Two Crowns or RPGs like Triangle Strategy can help you with some art ideas"
        ]
    },
    "FEEDBACK MEGATHREAD - Need feedback on a game mechanic, character design, dialogue, artstyle, trailer, store page, etc? Post it here!": {
        "title": "FEEDBACK MEGATHREAD - Need feedback on a game mechanic, character design, dialogue, artstyle, trailer, store page, etc? Post it here!",
        "score": 46,
        "url": "https://www.reddit.com/r/gamedev/comments/1cqt2so/feedback_megathread_need_feedback_on_a_game/",
        "content": "Since the weekly threads aren't around anymore but people have still requested feedback threads we're going to try a megathread just like with the beginner megathread that's worked out fairly well.\n\n&nbsp;\n\n### RULES:\n\n- **Leave feedback for others after requesting feedback for yourself**, at least for two others if possible otherwise do it later once more comments have showed up.\n\n- Please respect eachother and leave proper feedback as well, short low effort comments will not count.\n\n- Content submitted for feedback must not be asking for money or credentials to be reached.\n\n- Rules against self promotion/show off posts still apply, be specific what you want feedback on.\n\n- This is not a place to post game ideas, for that use r/gameideas\n\nSee also: r/playmygame and r/destroymygame\n\n&nbsp;\n\nAny suggestions for how to improve these megathreads are also welcome, just comment below or send us a mod mail about it.",
        "num_comments": 251,
        "comments": [
            "hey, looking for feedback on my store page [https://store.steampowered.com/app/2640570/Fantasy\\_Senate\\_Simulator/](https://store.steampowered.com/app/2640570/Fantasy_Senate_Simulator/)",
            "Hi, I recently uploaded a [Demo](https://store.steampowered.com/app/2676270/Teo_Dove_Am_Skater_2/) of my skateboarding game to steam. Looking for feedback on controls and also general feedback.\n\nDoes the skater fall down too easily e.g is the game too hard? Is the skater too fast? I want to encourage careful skating.\n\nLink : [https://store.steampowered.com/app/2676270/Teo_Dove_Am_Skater_2/](https://store.steampowered.com/app/2676270/Teo_Dove_Am_Skater_2/)",
            "Feedback Needed: Overall game appearance, concept\n\nHello everyone!\n\n\n\nI'm making a game called \"Combat Ace\" that's similar to \"Ace Combat\".\n\nAt the prototype stage, I'm focusing on gameplay and physical behavior, and it has the following features:\n\n- Capable allies (they can shoot down enemies and help you play)\n\n- Capable enemies (enemies help each other and are tough)\n\n- Realistic behavior (enemies avoid missiles honestly)\n\n\n\nI look forward to your suggestions and opinions on improvements and additional features!\n\nThanks :)\n\n\n\nLink: [https://www.youtube.com/watch?v=U2ihVO7JRzY](https://www.youtube.com/watch?v=U2ihVO7JRzY)",
            "[Have a new trailer for my mobile game based on my kiddo's art!](https://youtu.be/hwWRogQ87uc)",
            "With Next Fest coming up fast I havent updated the store or trailer much in the last few months for my game HardAF.  Trying to figure out best use of my time and would just like to know if there's anything that stands out that needs to be reworked in either.  One big thing I'd like feedback on, alog with the trailer, is the screenshots I'm showing.  The game is a precision pixel art platform game.  Thanks!  \n[HardAF on Steam (steampowered.com)](https://store.steampowered.com/app/2679880/HardAF/)",
            "Hello! New here, and new to development as a whole. I've been experimenting with pixel art, and so far this is my characters animation for unfolding their wings and flying. I don't know why but I'm just not the biggest fan of it. I'm not sure whether its because of my design, or the colours, or what, so I'd appreciate some constructive criticism for it :) Attached is the gif, the 'unfoldings' a bit quick, and also perhaps just the head and depth. Not sure why it looks so small also, will try and figure out a way to make the image bigger so anyone can see it clearer, thank you! [https://pasteboard.co/JXX3U6tWtPbA.gif](https://pasteboard.co/JXX3U6tWtPbA.gif) P.S. I get that art of any sort is practice makes perfect. Just checking that I'm not missing something at my level. It might even be something as simple as needing a greater resolution (was only 32x32)",
            "Just finished a new trailer for my retro-inspired RPG, Starlight Legacy!\n\n[https://www.youtube.com/watch?v=CSnQ1MDml2A&t=1s](https://www.youtube.com/watch?v=CSnQ1MDml2A&t=1s)",
            "Hey! I made my first small game, and I want you to try it and give some feedback. It's short platformer/bullet hell combo that could be fun to play around. I learned lots of things, from making my own character controller to using tile maps and animations. If there's anything off-putting or unintuitive in terms of game design, please let me know! Thanks again!\n\nhttps://oily-razor.itch.io/dungeon-king",
            "Looking for feedback on an intro video for the game I'm working on.  Any pointers, hints, dislikes or hates to share?\n\n  \n[https://www.youtube.com/watch?v=SZwvUjgQW9g](https://www.youtube.com/watch?v=SZwvUjgQW9g)",
            "I'd like some feedback on the marketability of my Steam page. Is it appealing? Do you get what the game is about? Would you wanna play the demo or wishlist it?\n\n[https://store.steampowered.com/app/1304530/SlingAThing/](https://store.steampowered.com/app/1304530/SlingAThing/)",
            "Hey All,\n\nAny feedback on our store page for our music festival game would be grand:  \n[https://store.steampowered.com/app/1849940/Festival\\_Fever](https://store.steampowered.com/app/1849940/Festival_Fever)",
            "[https://imgur.com/a/MgeuHsD](https://imgur.com/a/MgeuHsD)\n\nI've been working on this little game for a while now, and I'm finally ready to share little teaser of it! It's called **CROPATOP**, and it's a #*time-managmenent* #*permadeath #action* game about living-crop revenge to a Chef.\n\nI'm really proud of how it turned out, and I'd love to hear what you think! I'm especially curious about graphic and palette mood and feel. \ud83d\ude05",
            "I've been working on some changes based on feedback I received. One of them is the\u00a0**mouse-hover effect**. What do you think? Isn't it too strong?\n\n[https://imgur.com/a/wTsdASy](https://imgur.com/a/wTsdASy)",
            "[Link to gameplay!](https://youtu.be/EH85GxOrIJI)\n\n  \nHey everyone! Here's a short clip from a game I'm working on. I'd appreciate some general feedback on how appealing the game is. Does the main character look like someone you'd want to play as? Does the general aesthetic appeal? How's the dialogue - is it too amateurish?\n\nAppreciate all comments! Thank you",
            "We have released a trailer for our up and coming Horror Escape Room-Style game! How does this trailer make you feel? We would love some feedback! It is being developed for both VR and Desktop.\n\n[Trailer](https://youtu.be/_1v4okbo36I)",
            "I'd like to get some general feedback on the visual style on the game we are currently working on. We are going for a classic comic-book like feel but did not like the flat shaded look of many toon shaders. Here we have gone for a halftone effect by detecting lighting source directions and applying halftone dots on the highlight and shadowed sides of objects (most noticeable on the character, This is \\*not\\* pixel dithering). We've also applied a restricted color palette and depth+normals outline shader.\n\nThis is the brightest one of our scenes will ever be, most of the game environments will be much more dark & moody as the story progresses. (This area will become a player introduction on to how to ride the hoverboard, including hoverboard combat with swords and other weapons)\n\n  \n[YouTube gameplay example](https://youtu.be/OPCfsbbibnI)",
            "Hi,\n\n\n\n  \nAfter 5 months of post-release, I'm interested in continuing to invigorate my game project on steam and bring in new customers.\n\n\n\n  \n[https://store.steampowered.com/app/2697640/Djikstras\\_Enigmatic\\_Puzzle\\_Cube/](https://store.steampowered.com/app/2697640/Djikstras_Enigmatic_Puzzle_Cube/)\n\n\n\nCan I get feedback on the presentation of the store page?\n\n\n\nAre you a person who likes puzzle games? If you are, does this look like a puzzle game you'd want to try?\n\n\n\nIf you aren't a puzzle gamer, would you be willing to try a puzzle game like this? What about buy it?\n\n\n\n  \nThanks.",
            "Published our game's Steam page pretty early on to have something to start marketing and directing links to - don't have enough content for trailers etc. yet, but tried to explain what we're building and what you should expect from the game. Is there anything we could add to the page without having more screenshots / video / gifs? [https://store.steampowered.com/app/2953070/Star\\_Child/](https://store.steampowered.com/app/2953070/Star_Child/)",
            "Hey Guys!\nI just finished my second semester in uni as cs student. My homework was a very simple 3D game where you can move and jump around. It's written in C++ and using OpenGL. Now in the summer I want to continue game dev in C++ with OpenGL, and I want some feedback on it to improve.\nhttps://github.com/csnorbi11/Hazi_OpenGL3D\nThe comments are hungarian, but I think basicly the code isn't that hard, so I hope it wont be a problem to understand whats going on in the code :D\nThanks the feedbacks :D",
            "Hey Guys,\n\nI am a \"Game Production and Management\" student currently in third semester in Germany. My current main focus is building and finishing my portfolio-website before GamesCom/DevCom this year.  \nI am currently in a state where I'm satisfied with my current website design. Now its time to let people see it and give feedback on it so I can imporve it further on.\n\nCurrently the site is only set up for Desktops, so please dont conisder the mobile design within the feedback.\n\n[https://yoshimoeller03.wixsite.com/yusufmoeller](https://yoshimoeller03.wixsite.com/yusufmoeller)\n\nThanks!",
            "Just finished my first game Slidin' Bridges - [https://woodedge.itch.io/slidin-bridges](https://woodedge.itch.io/slidin-bridges) - It's a geometric top-down shooter. Not that in-depth, but it proved a good opportunity to get learn Unity and things like UI management, Singletons etc. Family have enjoyed it and I'm pleased to have made something/anything. But I'd appreciate some constructive criticism on what to focus on learning next. Thanks in advance.",
            "So how long is too long for art assets?\n\nI've been making games off and on as a hobby for 10 years or so, and I've recently decided to do it for real. Well i was drawing an building (A cathedral/church), and it took me 10-12 hours to have a completed sprite, most people I've shown thinks it looks great, and I know I can be hard on myself, but even after all that time there is still so much i would like to add to make it complete. But that would mean spending another 4 hours or so just on some extra details that no one but me would really noticed on a single set peice. Is this normal? 15 hours for one set peices too long? If so have pictures of the entire iterative process, if there are things i could cut out or do better. What are some realistic deadlines for art, I've probably spent 80% of my time making art assets and 20% coding and the such. (I know i should use shitty art to test it, but i figure it get the heavy lifting done now)\n\nTdlr: It take long time for big assets, what is a realistic deadline for them?\n\nBut in your guys experience, what is the expected work flow and process.",
            "Hi everyone,\n\nI'm excited to share that I'm about to release a demo of my game on Steam! I've been housebound for the past 8 months due to long COVID, which forced me to stop doing sports, seeing friends, and even losing my full-time job. To keep myself motivated, I started working on a project called\u00a0**Equiverse**.\n\nI spent a lot of time in bed, writing out ideas on my laptop and thinking about the core gameplay loop.Although I'm only about 30% recovered, working on this game has been a huge help in getting me through this tough time.\n\nI've been designing games for five years now, and I thought it would be fun to start a devlog series. In these devlogs, I plan to dive deeper into game design theory and how I've applied that knowledge to Equiverse. However, I have no experience in creating devlogs and would greatly appreciate your feedback.\n\n* What do you think about the quality and structure of my devlogs?\n* What would you like to see in them?\n\nAny comments are welcome! Thanks for your support.\n\nHere is the link to the devlog:\n\n[https://www.youtube.com/watch?v=xUANrC-qZ10&lc=UgxKqZ9UDQSEP3MP3il4AaABAg](https://www.youtube.com/watch?v=xUANrC-qZ10&lc=UgxKqZ9UDQSEP3MP3il4AaABAg)",
            "Hi! We are developing Vegangsters.\n\nA turn-based combat deckbuilding game, with some Roguelike aspects. We've changed our entire Steam page and wanted to see what you think of it  \\^\\^\n\n[https://store.steampowered.com/app/2449390/Vegangsters/](https://store.steampowered.com/app/2449390/Vegangsters/)",
            "Hi, I have been working on my first game project since starting to learn Godot a couple of months ago, and I am looking for some feedback from folks to help me get a sense of whether the game is fun or interesting.  \nThe game is called Go Casino and is essentially a Roguelike game that is built upon the card game of Go Fish. Inspired by stuff like Baalatro, but with a different approach in a lot of ways.  \nWindows:\n\n[https://drive.google.com/file/d/11ERPLohOdpjLgmnhaUPu6vRzmR0ah7qQ/view?usp=sharing](https://drive.google.com/file/d/11ERPLohOdpjLgmnhaUPu6vRzmR0ah7qQ/view?usp=sharing)\n\nMac:\n\n[https://drive.google.com/file/d/1SnV\\_DJLoqxnk6GrmCYP6uRPp\\_zm-E2cO/view?usp=sharing ](https://drive.google.com/file/d/1SnV_DJLoqxnk6GrmCYP6uRPp_zm-E2cO/view?usp=sharing)\n\nJust let me know after maybe a couple minutes of trying it whether theres anywhere to take this or if its too uninteresting. The look and the art is all just placeholder right now.[](https://drive.google.com/file/d/1SnV_DJLoqxnk6GrmCYP6uRPp_zm-E2cO/view?usp=sharing)",
            "Hello, I need feedback on my store page!  \n[https://store.steampowered.com/app/2488500/Katubas\\_Poacher/](https://store.steampowered.com/app/2488500/Katubas_Poacher/)",
            "I've never released anything on Steam before, and honestly feel like I have no idea what I'm doing. Does my steam page look alright? Anything missing? Anything off-putting?\n\n  \nSteam page: [https://store.steampowered.com/app/2479210/Swarmsign/](https://store.steampowered.com/app/2479210/Swarmsign/)",
            "\n\nHi! I've made a logic puzzle game on iOS and Android and would love any and all feedback :)  \nSpecifically on the gameplay mechanics if possible. Thank you!\n\niOS: [https://apps.apple.com/us/app/crowns-logic-game/id6504047514](https://apps.apple.com/us/app/crowns-logic-game/id6504047514)  \nAndroid:\u00a0[https://play.google.com/store/apps/details?id=io.github.benmiller3.crowns](https://play.google.com/store/apps/details?id=io.github.benmiller3.crowns)",
            "I've just updated the Steam page for my passion project eXoSpace Combat Engineer and am finally getting somewhere. The big thing missing is a trailer. \n\nI would really appreciate some feedback. Is it clear what the game is about? What is appealing, what is offputing?\n\nLink: [https://store.steampowered.com/app/2876200/eXoSpace\\_Combat\\_Engineer](https://store.steampowered.com/app/2876200/eXoSpace_Combat_Engineer)\n\nThanks in advance!",
            "I updated new hit reaction. What do you think?\n\n[https://youtu.be/yQbe3O\\_9tug](https://youtu.be/yQbe3O_9tug)",
            "[https://store.steampowered.com/app/1986290/Countryballs\\_The\\_Heist/](https://store.steampowered.com/app/1986290/Countryballs_The_Heist/)\n\nLet me share some numbers with you: The Steam page for our game has now been up for 46 days and we gathered 1782 wishlists so far. We had a strong start with 520+ wishlists at the announcement day BUT that flattened out within a week, resulting in a 38 wishlists per day avarage (cut the first day and we're around 20).  \n  \nIt makes me think that our external redirects from YouTube (main promo platform) is good, but the actual Steam Page doesn't attract that much attention. I am therefore kindly **asking you guys for your opinion on the game's Steam page**. I will not share more details \u2013\u00a0except the top 5 tags we used \u2013 as I'd prefer you to see it without much prior knowledge about the game. Thank you in advance!\n\nTags: Singleplayer, Stealth, Funny, Cartoony, Adventure",
            "Hey, we just released our thesis project, a virtual museum about game game design, and we're looking for feedback on the itch.page but also overall game as we go forward. \n\nYou can play the game for free, here: https://nickpreveza.itch.io/museum",
            "Hi All! We've decided to integrate the Twitch API into our upcoming spot-the-difference horror game UNHEIM. It allows stream viewers to actively participate and score points for spotting anomalies, as well as warning the player of possible dangers. We also wanted to give streamers a bit of an extra goody to play the game live, so we've decided to add a Wildcard button to ask the chat for help, and some fun events in response to new subscribers on their channel - mainly things that won't alter gameplay, but there is one or two events which will hopefully trigger some fun responses. Would love some feedback on the feature and the way we decided to integrate it into the game. The free demo can be found on [Itch](https://lovelybytes.itch.io/unheim), and will also be available on [Steam ](https://store.steampowered.com/app/2686110?utm_source=reddit_gamedev&utm_campaign=pre-release&utm_medium=social&utm_content=development&utm_term=twitchApi)during Next Fest next month.\n\n(Also feel free to critique the store page or any details about the game itself! Feedback is always welcome and super helpful!)",
            "I'm currently building an Active Time Card Battler called Arcane Drifter.\n\nHere's some gameplay footage: [https://www.youtube.com/watch?v=GZfwJjh9U1g](https://www.youtube.com/watch?v=GZfwJjh9U1g)\n\nHere's the demo: [https://hardresetgames.itch.io/arcane-drifter-prototype](https://hardresetgames.itch.io/arcane-drifter-prototype)\n\nEssentially players draw two cards at a time from a deck, play cards into a queue, those cards resolve after charging up and then resolved cards go into cooldown before returning to your deck.\n\nIn this game, players do not build decks, but rather they equip gear (like you would in most RPGs) where each piece of equipment has cards attached to it and your deck is the collection of cards provided by the gear you are wearing. (Eventually I want players to be able to craft gear more meticulously, this way they can have fine-grained control over there decks)\n\n**QUESTION:**\n\nCurrently the game drops loot like a traditional RPG might and you can review your findings and keep/ignore individual items.\n\nHowever I'm starting to think that it might be better if, instead of just giving out loot drops, after a successful battle, I let you pick from loot. Similar to Slay the Spire, in how you get 3 options and you select the one you want. The advantage of this approach is that players will get more of a say in what items they are handed and can better synergize with there existing decks... Also it may be easier to make the RNG smarter and I can generate loot containing cards that synergize well with your current equipment.\n\nWhat do you guys think?",
            "[Short gameplay](https://youtu.be/WxY0stbUzzY)  \nLooking for both feedback and people who'd like to playtest it, got some keys to spare.  \nIt's a puzzle game where you play as an Interrogator, you're given case file, evidence and the suspect, by talking to him you're supposed to get down to the truth.  \nAppreciate all feedback.",
            "[deleted]",
            "[removed]",
            "Got a demo and teaser out on Steam for Oversleep (first person puzzle game) and looking for feedback as we have complete tunnel vision: https://store.steampowered.com/app/2618540/Oversleep/",
            "Looking for ideas. I made a super simple JS-based web game; the only game mechanism is jumping. I intended it to be easily playable on mobile as well. As you can tell, the goal of the game is 'being silly.' For this reason, the game is super easy and repetitive, but I've received quite a few requests from users that they want a bit more challenge. So I'm looking for ideas to make the game a bit more challenging. Could you share some ideas? Thank you in advance! [https://lab.aizastudio.com/officeslacker](https://lab.aizastudio.com/officeslacker)",
            "I am working on a DM simulator game. I am still in the early prototype phase but the basic mechanics are similar to a sims game. You need to keep players happy based on needs that vary in importance from one virtual player to the next. For example,\u00a0 one player really wants combat,\u00a0 another really wants social interaction. These needs drain over time.\n\n\nRight now I plan to have the character's do something disruptive if values get too low (something like effort balanced by need). For example a combat starved character may attack a random npc just because they haven't been able to fight something for 3 sessions (which would annoy other players).\n\n\n\nWhat I am trying to define right now is,\u00a0 what should a fail state look like? How do I say, game over, try again?",
            "Hello, I have an idea for a classic solitaire game, with free cell, solitaire, and spider solitaire. I've built a demo that has solitaire playable you can try here [https://eguneys.github.io/solitaire23/](https://eguneys.github.io/solitaire23/) . I had some feedback that the art isn't very good. That got me disinterested in making me this game. So I am asking for constructive criticism, on what to work on to make this at least sell-able, for 3$. Something like, High fidelity art, Better Audio, Better Game feel over animations, something like balatro, Better visual effects, overall idea isn't amusing, hard to compete with micro soft solitaire, or something else? And here's a video of gameplay:  \n[https://www.youtube.com/watch?v=yYtB6sAcKbg](https://www.youtube.com/watch?v=yYtB6sAcKbg)",
            "Hi guys !\n\nCan i have feedback on my steampage ?\n\n[https://store.steampowered.com/app/2857380/Tentacuddle/](https://store.steampowered.com/app/2857380/Tentacuddle/)\n\nI didn't receive many wishlists on the first day and very few in a month.\n\nYet I find it quite full, a music trailer and so on. \n\n\n\nMaybe it's just the game itself that seems lame? Ahah! Too bad!",
            "Hi guys! \n\nI am wanting to get my foot into the door in the gaming industry as an artist and I'm wondering if there's any advice you can give me and what I need to work on my portfolio to get in. \n\n[Portfolio ](https://waigoing28.wixsite.com/website) \n\nThanks!",
            "I am working on a simple Deckbuilding Tower defense roguelike. In order to differentiate myself a bit, I am going for a handdrawn-paper aesthetic. Does it look bad? UI is still placeholder, but is there something that stands out to you? \nhttps://new.reddit.com/user/emmdieh/comments/1cx7v7o/hand_of_hexes_wip_screenshots/",
            "Good evening, I would love to get feedback to a video I made showcasing the verticality of the parkour MOBA im working on. [https://www.youtube.com/watch?v=\\_qyMQV7rYXo&ab\\_channel=MonarchsDawn](https://www.youtube.com/watch?v=_qyMQV7rYXo&ab_channel=MonarchsDawn)",
            "[removed]",
            "[removed]",
            "Hey, give me some feedback on my steam page. \n\nI'm thinking on releasing a demo previous to launch. \n\nWhat do you guys think?\n\n[Steam Page](https://store.steampowered.com/app/2901570/Footages)",
            "\ud83d\ude80 Feedback Needed: Lighting Effects and Thruster Animations \ud83d\ude80   \n  \nHello everyone!\n\nWe are excited to share the latest progress on Ignition Arena, our top-down 2D spaceship arena battling game. We\u2019ve been working hard on the ship lighting effects and thruster animations during the prototype phase, and we are particularly interested in:\n\n- Your thoughts on the visual quality and realism of the lighting effects.\n\n- Feedback on the smoothness and responsiveness of the thruster animations.\n\n- Any suggestions for improvements or additional features you'd like to see.\n\n  \nWe can\u2019t wait to hear your thoughts! Thanks :)\n\n  \nLink: [https://imgur.com/a/Jyfcyhy](https://imgur.com/a/Jyfcyhy)",
            "Hello, feedback needed on player sprites\nPlease help: \n[sprites](https://drive.google.com/file/d/1a2pFsIK-xrypGyFrb99o2DVqdzN6ZQaH/view?usp=drivesdk)\n\n\n*This is my first time making a sprite, I decided to make it have a floating animation because I was having trouble animating legs\n(it\u2019s 64x64 pixels)*",
            "Hi, I'm making a retro styled Car Park simulation game!  \nI would love feedback on my Steam page.\n\nWould you wishlist it?  \n[https://store.steampowered.com/app/3031880/Car\\_Park\\_Capital/](https://store.steampowered.com/app/3031880/Car_Park_Capital/)",
            "Hi there,\n\nWe are making a anime styled prop hunt game\n\n[https://drive.google.com/drive/folders/1tLVXL-cvYLhRHoagyr9wudGLMiZ9MqvV?usp=sharing](https://drive.google.com/drive/folders/1tLVXL-cvYLhRHoagyr9wudGLMiZ9MqvV?usp=sharing)\n\nHow would you evaluate the current art style? What additional features other than classic prop hunts would you like to see if any? Would you play it?",
            "Hello!\n\nI am working on a browser game (Text based) developed in PHP/HTML primarily. At the moment the 'Map' is only search able through drop down menus 10 x 10 with 15 players per area. I want to spice this up, I would love to move towards a graphical interface for users to move around on an actual map and find things (other players, NPCs) .  This is a bit beyond anything I have done and want to know if anyone has any experience doing something similar ?\n\nThank you!",
            "https://play.google.com/store/apps/details?id=com.boredleaders.pillage\n\nFeedback requested on our first board+strategy game released on playstore. Details below\n\n\nGame title : BGMB (Board Game Mahabharata)\n\nGame Link : https://play.google.com/store/apps/details?id=com.boredleaders.pillage\n\nPlatform: Android \n\nDescription: This is a board game having elements of Ludo (luck) as well as power cards (strategy). There are different characters in the game (taken from the Indian lore of Mahabharata), each with their own set of power cards. There are 7 different layouts, and have 2p and 3p modes. Additional meta element is in the form of jigsaw puzzles.\n\nFree to play status: free\n\nInvolvement: developer of the game.\n\nHave also created reddit sub for this https://www.reddit.com/r/bgmb_boardgame/s/mp2M6Jo3mu",
            "I made a city generator and now planning to further add some game mechanics, any ideas on what features I can implement that is simple and fun?\n\nVideo here: [https://www.youtube.com/watch?v=6dbCiWgJjuc](https://www.youtube.com/watch?v=6dbCiWgJjuc)",
            "Just fixed an AI bug in this Cover Up #2 JAM entry but is it too hard now?\n\n [Commando by Arowx (itch.io)](https://arowx.itch.io/commando)\n\nAny and all feedback welcome, thank you.",
            "I'm working on updating the short description for my game Seer's Gambit and I could use some impartial feedback on which of these 3 options sounds most interesting:\n\n1)Embark on a magical adventure where your skills change and grow depending on the companions you recruit to join your quest. Explore and upgrade the world for powerful party-wide buffs and save Emalon from certain destruction.\n\n2)You and your trusty loot cat embark on a bite-sized RPG adventure to save the world. Recruit adventurers and create powerful synergistic builds to take on the evil about to consume Emalon.   \nThe world is your skill tree!\n\n3)Embark on a bite-sized RPG adventure where your skills change and grow depending on the companions you recruit. Upgrade the world for powerful party-wide buffs and create synergistic builds to save Emalon from certain destruction.   \nThe world is your skill tree!\n\nNot sure if it will help give feedback, but here's the Steam page: [https://store.steampowered.com/app/2219450/Seers\\_Gambit/](https://store.steampowered.com/app/2219450/Seers_Gambit/)",
            "Hey all! I just published the store page for my 2nd Steam game \"Number Stomper.\" (link to the store page here: [https://store.steampowered.com/app/3029260/Number\\_Stomper/](https://store.steampowered.com/app/3029260/Number_Stomper/) )  \n  \nSo far, I've been told that the moving background was too much, so I stopped it from moving. The other feedback I've gotten is that the background might be too detailed and makes it harder to see the tiles. \n\nIf you have any other feedback for the store page (trailer/description/about section/etc.) or would like to elaborate on what you think could make the background better, please let me know!",
            "[removed]",
            "It looks really good. If you want to add something to make it better, you can add gifs or images to \"about this game\".",
            "Please remember to leave feedback for others if you want feedback for your own game.",
            "Maybe some links to a discord page or something like that?",
            "I feel like you should mix in some gifs with the body text - that usually helps to break the monotony of reading.",
            "looks super interesting and boring at the same time :-) \n\nI can be an excel player myself but you might show more juicy stuff to support immersion",
            "needs a bit more animation love.  Put in some anims that compress him when landing to start with.  just some overall flair in that department will go far.",
            "It's hard to know how much feedback to give about the appearance knowing it's a prototype. But visually it's a bit hard on the eyes--I think the environment could be softer (less contrast between sunlight and shadow, maybe more fog/haze) and darker so that the HUD and UI pop more against the 3D visuals. The combat itself looks pretty good, I really like the replay(?) system you show at the end!",
            "I'm assuming \"Combat Ace\" is way too close to \"Ace Combat\" and will get you in trademark trouble.",
            "Hi, the HUD looks unthemed (looks like a placeholder more than an actual HUD UI). Personally as a UI Game Artist I will go with something similar with Apex Legends and I will group the UI elements because right now, the elements are all over the place.\n\nIf you have more questions, just DM me.\n\nCheers,  \nClaudiu",
            "I like the look of the game a ton.  The black screens with text tho are a little stark, maybe use something else as a backdrop for them that matches the game art.",
            "Love it!  My daughter loves MS Paint, and I'm trying to work her stuff into my game for fun, but this is next level.  Could there be a way for kids to get their own art into the game?",
            "The use of your kid's art works really well - maybe replace the sky with a hand coloured blue texture though. Makes me think of yoshis Island - just need to use the art better in a few places. The path also needs a better work around, maybe bigger sections rather than small tiles",
            "I would honestly play this it looks fun and trippy",
            "Great execution!",
            "Minor thing, I might move some of the screenshots of different colored worlds more to the front as third & fourth to show visual variety and make it visible you have a lot of content immediatly upon opening the page. Maybe throw one in of the pink world that's only in the trailer",
            "An advice I've read about trailers is to jump right in the action. I wonder if it would be better to cut the first 10 seconds completely.",
            "Can I suggest looking at videos of larger birds of prey (vultures in particular) unfolding their wings? You tend to notice they curl up, then out, with a rhythm that I feel is missing a little bit.",
            "Perhaps a little more exaggeration with the initial stretching out of the wings would be good, with more movement in the upwards direction to give it some more impact. Also, perhaps a little easing in the transition to the unfolding state would be good, it feels a little bit linear at the moment and some variation in the pacing could be the trick to making it stand out more. Making the character's body a little more readable might help the overall animation too though that could just be down to this background in particular. Overall, a great experiment and I encourage you to keep iterating and practicing your art, it's really good!",
            "Will the character be that small in the game? Is it an icon? It can be good to give details of your choices and design limitations. Personally, I always think about the purpose of a design.",
            "it might be cool but seeing way too much of this kind",
            "Please remember to leave feedback for others if you want feedback for your own game.",
            "I like the visuals and the music. But the trailer does not make it clear what the goal of the game is or what is expected of me as a player!",
            "the graphics and music are both pretty awesome - it has the 90s vibe that I like.",
            "Hey there! I played your game right now, and I wanted to share some thoughts with you. Overall, I really enjoyed the graphics, but as a 2D/UI Artist, I noticed a few areas where there could be some improvements in the UI consistency.\n\nFirstly, the main menu gave off a bit of an amateur vibe. It could benefit from having buttons that are more distinguishable, and when hovering over them, the text almost disappears, which might confuse players.\n\nIn the game scene, some assets, like the hearts, appeared to be of lower quality, and the life bar seemed stretched, which slightly detracted from the overall aesthetic.\n\nLastly, when I died and the menu appeared again, it was in a completely different style, which felt a bit jarring.\n\nI hope you don't mind me sharing these observations! I believe these small adjustments could really help the overall experience of your game. Keep up the great work! \ud83d\ude0a",
            "this is a super fun concept! Definitely love the gameplay concept and could see this becoming a full-fledged game.\n\nFeedback:  \n\\* I wish to be able to crouch or fast fall with WASD but maybe that defeats the purpose of switching into the bird.  \n\\* The jumping was a bit unintuitive but I think your overall platforming was not bad.  \n\\* The game was hard and there wasn't a ton of movement options - wondering if there could be more there  \n\\* The art is nice! Cool pixel art style :)\n\nOverall I think this has some real potential. Great work!",
            "Looks iteresting, but for me the audio is simply too much talk and bores me out halfway through. A bit like a \"wall of text\" that is hard to comprehend because there is no pause in the talking. The video may even be better without the (pleasant but unrelenting) voice. \n\nIf I understand it correctly the \"magic\" of the game is: write some code, and stuff happens. I can totally relate to that being a developer myself, but this does not come across really well. The first shot is actually nice: you write some code, then the bot does something. Can't you simply repeat this a few times with different actions / results? \n\nAnyway, really nice concept but the presentation is currently much too intimidating for simple gamers I think :-) I'm curious how this will work out!",
            "I only looked at three things: the space ships in the center of the screen (almost nothing happens), the robot that is being programmed and the console. As I assume the robot is being programmed in the console the fast-forward there is too fast for me. I'd rather see a simple command like MoveForward() written in the console and the robot moving forward to make a connection between the two things. \n\nThe other UI text never changes. If you wanna convey that there's a lot to do and explore make a short cut showing different planets where there actually is some minerals you mine, otherwise the numbers covering the entire top quarter of your screen staying at 00000000 are unnecessary. \n\nI love the idea to learn Lua by playing this game tho - good luck!",
            "I think your trailer is great. It plays well on mute and captures the concept of the game really nicely. The art direction is cohesive and executed nicely.\u00a0\n\n\nDon't take this the wrong way (especially if you didn't use an LLM for writing), but your description is very Chat-GPT coded.\u00a0\n\n\nEverything has a modifier and it leans into alliteration \"quirky challenges\" \"whimsical world\" \"satisfying solutions\". I also feel \"mind-boggling\" in the first sentence is an oversell and takes the wind out of the game descriptors \"comedy action puzzler\".\n\n\nTake my feedback with a grain of salt. I'm not sure potential players are picking the written portions of Steam pages apart. The video is really good at getting the point across.\n\n\nI wishlisted it - it looks fun.",
            "Looks really charming. The video is well done, the only thought I had on that was that the first shot (where you shoot something in a flower) seems a bit pointless, as unlike the other shots it does not seem to achieve anything. The other shots in the video all communicate clearly \"you can do this and the goal is that\".\n\nThe \"laugh-out-loud\" in the description comes across a bit overdone for me, since I was not laughing out loud while watching the video. I was mildly entertained and interested though :) Better *be* funny rather than shout out how funny you are. The video, gifs and screenshots already say plenty about how funny it is.\n\nAnyway, really good work, keep it up!",
            "Really cool idea, good work on the trailer! Some thoughts I got while going over the page: \n\n* The short description is nice but makes it sound like a sandbox without a goal \"whichever way they want\". Maybe some inspiring goal would be more powerul, e.g. \"\\[...\\] and tasks them to build their festival into the biggest on the planet!\" \n* Maybe a few more sreenshots on what you can actually do in the game? I can place some tents and a podum and magic happens? But perhaps you are not there yet.\n* The capsule is nice but I find it hard to see that I'm looking at a stage. Some shots in the video would be more clear (e.g. a lit stage with flame effects), but perhaps that would make the logo less readable.\n* The small capsule for in the search results is a bit vague with some dude/dudette and an unreadably small logo. Perhaps make the logo a bit bigger and add some podium flames?\n\nIn all a really nice start!",
            "Hi there, Tycoon are totally my type, I played Festival Tycoon (in which I did not find my flow to be honest)\n\n* The title hyped me and I immediately understood the kind of game it is\n* The Trailer has a good mood but feels a bit empty to me: it is smooth and predictable, making it somewhat unexciting. It doesn't really match the \"fever\" promise.\n   * Except the bin wars. The bin wars made me laugh\n   * + the guitar pick animation is truly amazing\n* As a management game player, the page lacks gameplay views. I cannot project myself playing, and so far, the game screenshots don't suggest much gameplay, variations or big decisions making. I would fear not finding enough management in it, similar to how Festival Tycoon left me disappointed\n\nI'm looking forward to seeing how the game evolves, I wishlisted it! I wish you the best!",
            "It looks adorable, and quite original and fun! I'm not an artist but everything is clearly recognizeable and nothing jumps out to me as out of place.",
            "It looks adorable. In my honest opinion I didn't get the hook when I only looked at the provided link. for me it was simply a chef and enemies. I would suggest you work on getting that really cool idea communicated a bit clearer. Additionally Idk why you carry the crop outside the visible rect? Is that part of the game to 'clean' everything on screen? Keep going!",
            "I would say that it is not strong enough.\n\n\nDepending on your tilesets, you might also encounter the \"brown on brown\" problem in some situations.",
            "I like the characters and the dialogue seems fun and playful. The scene reminds me of Undertale.\n\nMy immediate feedback would be to indicate which character the dialogue is coming from, perhaps through movement from the speaker.\n\nNot sure what I think about the light surrounding the characters & whether it's supposed to resemble night or a dark forest. Consider an ambient blue light in case it's night.\n\nThe artstyle is pleasant. Keep going!",
            "The number one thing I'd fix in this video is the collision of the trees - you got stuck on/bumped into them a bunch of times, which looks super frustrating. It also gives you the added bonus of adding some feeling of depth to the scene if the player can walk \"behind\" the trees, even if it's just a little bit.\n\nAlso your main character looks super jittery - especially when the camera pulls away from him. Feels like you're trying to go for a pixel perfect look, while the character can move fractions of a pixel, which messes with the camera system and makes the player sprite jitter. That's probably also why the bandits do not jitter, as I assume you've placed them at full pixel coordinates.\n\nSpeaking of the player sprite; what's the hair style supposed to be? It looks like he's got a different haircut in his front and side profiles. From the front it looks like \"normal\" hair pointing to one side, but then in the side profile it looks like a mohawk. Also from the back, I'd add a few skintone pixels to the bottom - his hairline seems a little too low.\n\nAll the other pixel art is great! The house, trees and dirt/grass/flower tiles look very good. If you can, I'd make 1 or 2 more variants of the trees though, to make parts where half the screen is filled with them look a bit more natural.\n\nThe UI feels a bit blocky, and the text boxes seem overly simple, and a little tight. Also would be nice to see who's talking.\n\nThe dialogue seems fine, I'd have to see more context/get more of a feel for the game to judge that.\n\nHope that's some useful feedback!",
            "Hi there! I find it difficult to understand the core gameplay loop from your video alone, so I'll only focus on your two main questions.\n\nThe art style itself has proven to be successful, so I wouldn't worry too much about it. I feel like it's a little generic and could use more unique atmosphere. Maybe you can play around with your color palette and see if you can find something that creates a more individual, unique mood.\n\nThe dialog in the video happens pretty quickly and is a little too repetitive. But I also think \u201camateurish\u201d dialog has its own appeal and can be quite charming if that's what you're going for.\n\nSomeone else mentioned it's difficult to understand which character the dialogue is coming from, but for me it was relatively clear as the camera panned onto them for the dialogue.",
            "Sequence of events is well executed and has a nice twist. As for writing, depends on your target audience, if it's meant for young people then it'll work fine. It doesn't look amateurish, it's fits a certain style and does it's job well.",
            "Love the music.\nIt definitely had the creepy vibes, you definitely have evoked a sense of unease with your trailer.",
            "It makes me feel like an evil clown is going to pop out at any moment and give me nightmares. I don't usually play these kind of VR games because I get jump scared easily enough just by people just saying hello while I am working. That said the voice work is a great touch to complement the dark atmosphere, and I'd hope the gameplay would continue to capture that with more little creepy whispers and similar nursery rhymes to keep the creepy factor cranked up. I felt different about the trailer with sound on vs off, much \"more scary\". Keep up the good work.",
            "I like it overall, something about the cut away text fade in/out seems a little off, maybe too quick",
            "Trailer is cool, the song itself with the rhymes is really-really good! Having said that the gameplay is underwhelming compared to this, or at least I didn't really realise what the goal is, and what I would be spending my time with while playing.",
            "I really like it! The only specific thing I can add is to apply some texture to the ramps, maybe some simple arrows pointing up",
            "Check the players velocity, and have the camera look forward X amount based on that.  There seems to be no reason to see behind you.   Also, add in some animations for when he jumps and lands, turns, etc...",
            "I don't play non narative puzzle games. Some feedback:  \n- Trailer two starts way to slow with the studio logo and the drawing od the cube. General advice is to not have a studio logo until the end if you need to put it in, unless you are absolutely well known. I guarante, everyone will skip to see the gameplay.   \n- It is important for steam players to see that you have different content/visual variatey. So I heard a lot of time, that it is important to show at least three visually distinct worlds/levels/stages in your game. From the page I can see, that you have some space level and a beack level. In the first trailer you only have one of these, also i would change the order of the screenshots to show more of both biomes interchanged   \n- The animation when you move some tiles looks a bit janky.  I don't know how to explain it, maybe it's the animation curve, but a lot of times it looks more like when you drag something in an app, but not far enough, so it snaps back to the last position very quickly rather than moving all the sets. Maybe I didn't understand the mechanics very well too, but it is the thing that stands out most to me as unpolished",
            "The graphics seem like it can't decide if it's 8-bit or 16-bit, but since it's closer to 16-bit, if I were you I would use more colors with the sprites to make it more confidently 16-bit/SNES-like.",
            "To make repo more presentable, you can add a [README.md](http://README.md) file with cool screenshots and a \"How to Run\" section.\u00a0\n\nI think the class DrawableGameObject is redundant. The name itself is misleading, and you have Material class, where you can add setShaderParameter(...) and draw(VertexBuffer&) somewhere else. Also, you can add a Resource template class to hold and reuse named resources, like shaders and textures.",
            "Hi. If i where looking for someone to colaborate with or hire. I whould like to also \"see\" what you have to offer. You should probably insert some images and videos showing some of you projects and skills.",
            "Great work on all the essentials, just a matter of personal preference on my end: I think the landing page is a bit too chaotic. Or rather, with the text overlaid on top of it it can be difficult to see your work as it scrolls across and instead I can get only glimpses. Perhaps the teasing of the content without the full reveal could work as well but I think it would be better to show off your work as well as possible and let the text accent and compliment it rather than hide it. Also, the links in the navbar on the header should be larger and easier to understand as links to separate (and important!) pages.",
            "looks good though I think it would be better if your projects were more prominent. I feel like they should be almost the first thing we see when landing on the page. You could find your best project and highlight that with a button to see the rest of them",
            "It's an interesting website, I like it. 2 things I noticed. \n\nYou wrote art is not my strongest skill, but we see it first. Showing your best first is always a good idea. I think you should put the art last. People might not look at everything. Sometimes they look at the first few and if they are not good enough, they pass. Writing that I am not good at this but I am trying to improve is good. \n\nIn \"Reaper's Judgement\" the videos are black and there is no sign of a game icon on them. Someone with limited time may think it is a fault and pass.",
            "I just gave it a blast, enjoyed it! had a little chuckle, the music is almost demanding the player to have fun XD. Congrats on getting it to a presentable stage. There are a few avenues you could go down to maybe expand upon the game as it exists now, here's a few ideas that spring to mind for your consideration.\n\n1. Multiple platforms? - Maybe give the player the ability to jump, this would open up the possibility of shrinking platforms that are shrinking at different speeds so the player has to be more calculative. Could be in the later stages to add further difficulty as the player becomes more skilled at the game.\n\n2. Character models - pretty self explanitory ofc.\n\n3. Different firing types? - maybe give the gun the option to be upgraded by collectibles in the stages, kind of like how a lot of the old arcade space shooters operated.\n\nJust a few initial thoughts, hope they are helpful!\n\n:)",
            "12h+ is ok for the **first building**, because you don't have anything to copy from. I think it's okay to spend another 4 hours iterating and making it as good as possible. But then, the **next buildings** should be done quicker because you already have something to look at and copy from (like color palette, design patterns, etc.).",
            "Your game looks cool and make me curious.   \n  \nMaybe you don't have to talk that much about your personal life though, I don't find that stuff engaging as a player/dev, and it sound like a filler for the videos/logs. \n\nIf you just focus on ideas, I might follow :-)",
            "Looks like you've got something cool going, but I'm not sure is the constantly rotating camera part of the game? Or like a \"demo\" mode for making videos and content? Just, for me seeing the world spinning around constantly for the better part of 5 minutes honestly made me start to get dizzy, and I'm absolutely not usually someone that has issues with that kind of thing!",
            "Hi! It\u2019s looks cool, but what I think it can be less gifs and the features makes it longer :/",
            "It looks really cool! Some notes: \n\n1- I can't really grasp the \"speed\" mechanic associated with the cards. It seems like that would be a really unique selling point, but I don't really know how it works. Is it kind of similar to the Legends Arceus battle order, in the sense that you can play mutliple moves before your opponent if you/your move is fast enough?\n\n  \n2- Under \"Choose your cards wisely and build your deck,\" it says you will have a different initial deck depending on the character you choose to play as, but later under \"The Atitas Brothers join the battle,\" it says that you will play as Patt. A bit confusing and sounds like it is contradictory information, unless I am missing something",
            "My advice is to record a video. Many (me included) are hesitant to run an \\*.exe file from the Internet :)",
            "Definitely catches my attention and looks interesting. First instinct is that it would play similar to Cuphead boss fights and the art style/general vibe is similar to Epithet Erased. That said, even after reviewing the page I am still a bit unsure what gameplay looks or *feels like* to play. It is enough ambiguity that it would make me cautious to buy the game even though it looks really good, as I just am not confident I know how the gameplay will feel. That said, I still wishlisted it because I am interested to see how it turns out!\n\n  \nOn a seperate note, regarding the video I found the drop down at 19sec (after defeating the Bee boss) to be confusing and distracting from the overall video. After watching it twice, I still was not sure what it meant. I think lengthening that clip to more than a second would be really helpful for clarity!",
            "Ok giving you everything I'm thinking straight from the dome. \n\nI open steam page up: image looks very bland and sand coloured. I can't even work out what the focus is on. What is that thing... The blue text is very unreadable, especially with the logo behind it.\n\nMy first thoughts of what I'm looking at are those machines from Incredibles that Syndrome built, but a sand version. Is this a Robot fight game in the sand? Overall the quality feels poor so you've lost my interest at this point.\n\nI scroll down to the trailer. I can see ants attacking someone in a farm or something.They look so small on my phone screen it took a second look to work out that they are spiders I think.\n\n The graphics feel very blocky. My thoughts change to a survival game where you fight hordes of ants. \n\nI have a quick glance through all the screenshots. They all look the same. The environment is the same every time so I'm not interested. The last screenshot shows me some things with symbols on it. They don't inspire or make me feel curious .\n\nI scroll down and see the price; seems a little high for the level of quality I'm perceiving it as. If I wanted it, I think I would wait for a sale. \n\nI read the description; it's a survival game but there's nothing catchy or unique for me. Just text asking to buy an extra copy. The images in the description have actually caught my eye a little bit. I actually think they should be made one of the main screenshots; they are more dynamic and exciting.\n\nI watch the trailer with no volume because my girlfriend is sleeping next to me. It gives me a slightly better idea of what to expect, and it matches my idea of what I saw before.\n\nI would suggest changing your capsule art and screenshots, making sure to include various environments. I lose interest very quickly because of the perceived quality of it based on what I see.\n\nSorry if it is harsh but hope it helps! You got a game on steam, which is more than I and a lot of people have done, congrats!",
            "I tried it on iOS. Found it confusing, didn\u2019t get the game mechanics and the tutorial pages didn\u2019t help. I ended up just getting x marks in all the squares (and only 1 crown). Also there was no app preview video on the app store page. I think rather than forcing players to read pages of tutorial text, it\u2019s better to integrate game education in to the game itself, layer in concepts one at a time, over a number of levels, so people learn as the they play the game. Hope thats helpful feedback, good luck with your game dev!",
            "For me it's: It's a space ship builder with a decent variety of parts whcih I can combine freely (I love games where I can be creative with my character / my gear). I am missing a info about: Is this a fast bullet-hellish game or is it a idle game where I simply create the space ship and the battles are being held automatically? Or do I steer the space ship and perform charged attacks, special power-ups during the fights? \n\nA trailer would probably answer all those questions :)",
            "I am big into Vehicle building games, I will wishlist this!\n\nI will say when i first saw the page i was hoping it  was multiplayer, imagine designing ships and then battling friends or people online, that would be fun.",
            "For me, it's very clear! \n\nAt first, it seems to be a beautiful space fight game. Then, I understood you can build your own spaceship with geometrical shapes and it hooked me up. The catchphrase \" - Design - Fight - Survive - \" is very precise and appealing, don't hesitate to highlight it more in your coming trailer or on the screenshots.\n\nThe only other things I learn by reading the body of the page (which has nice gif) is the progress with resources, modules and factions to discover. I don't know if it is good or bad, just so you know my though process.\n\nAlso, on the second gif, the ship seems difficult to move. I am not sure of this because I may not be your exact audience, but a hard to control ship would make me feared I am not skill enough to play it",
            "I can tell the game premise from just the image, which is great; however, the first slide should be more of a hook. I think the cover works great as a first slide/ as an attention grabber!",
            "I didn't see enough gameplay to know what to expect. I can't tell whether the game is real-time or turn-based. The trailer does show the player distracting characters by throwing a bottle, but I want to see much more of what's possible in the game.",
            "Im not sure generic tags like like some of those are recommended.",
            " Unless every reward is going to be run-defining drop, I'd go with a choice. Gives the player feeling of control.",
            "Are you familiar with Baten Kaitos? The card battle system (and loot system IIRC) in that game were really cool and novel mechanic and is card-based. You gathered cards from enemies and from areas in the world, similar to Final Fantasy 8's draw system but better IMO. There are some interesting things to explore with dynamic loot here, such as combining the elements/cards of the enemies with the elements/cards the player used to defeat them. You could give additional drops from a higher \"level\" loot table for exploiting enemy weaknesses or general good performance in the battle. As I'd always recommend - spend the most time thinking about what is most likely to \"wow\" your player when they see it - i.e. that cool super rare card, strong ability or interesting dynamic result based on their choices.",
            "Please remember to leave feedback for others after requesting your own.",
            "Seconded the other responder - unless there are specific gameplay concerns with allowing player choice here, I think it's preferable as it gives the player more agency",
            "I couldn't gather a massive amount from the trailer about what the game is, or what you do. But, It does give that old retro text adventure look, and I've always loved games like that!",
            "The gameplay video moves very fast. I understand that people don't watch long videos, but it would be great if the video were a bit more informative.",
            "Some suggestion:  \n- different font for the text in the lower left.   \n- Putting a frame/Background around pictures to make them seem less like cutouts, think polaroids.  \n- Some text felt really long and would probably put me off.   \nI am probably not your target audience, but it looks like there are definetly some vibes going on :)",
            "Please remember to leave feedback for others after requesting your own.",
            "Please remember to leave feedback for others after requesting your own.",
            "I'd say no to sharing devlogs on here. IMHO, they're entirely self-promotional and should be banned by Rule 4 -- **unless** they contain something insightful or helpful to the community. But they never do, and I'm bored of developers convincing themselves that a diary slapped onto a link to their wishlist benefits anyone except themselves.\n\nNow, I don't know or care about Unity so I don't have any opinion at all on *your* devlogs, but if you're writing specifically about Unity then--IMHO!--your best audience is probably on those subreddits rather than this one.\n\nGood luck with the game!",
            "r/devblogs is where you want to post",
            "You may want to review your tags. While the game is first person, it's very unlikely that the person searching fps is looking for this.\u00a0\n\n\nFrom the trailer, it was good at demonstrating gameplay but a couple of things stood out. There were a few times when it felt like the art direction suddenly changed. If the changes are intentional,\u00a0 you may want to slow things down for a \"woah things changed \" effect. As it stands,\u00a0 they just feel out of place for no reason which gives players a reason to cry asset flip or w/e.",
            "Couple of suggestions:  \n1. Add a variable jump height (hold space longer to jump higher)  \n2. Add obstacles of different heights  \n3. Speed up the game over time  \n2 and 3 may be there - I didn't play long enough. I somehow just kept dying almost immediately - couldn't get the feel of the jump right - and stopped after 5-6 tries.",
            "Agree with the other feedback! I also think that it's be nice for it to have some kind of good, catchy music to get you more into the feel, and maybe a greater force of gravity because the jumping seems (to me) too much. Just my thoughts though :)",
            "DM here is short for dungeon master? How do you win the game? Fail state should logically come from there.",
            "Can't hear any audio in the link.  \nAdd music + game feel + a nice background(s) maybe. Among other things, you can draw a custom cursor, add particles and SFX on interaction and card movement.\n\nAs for it being hard to compete with microsoft solitaire...well yes, so if you're looking to make money off this then don't continue. But if you yourself are not satisfied with the game right now, since you already have listed your own points of improvement, you can continue working on this to learn.",
            "You have a super professional steam page, good screenshots, a clear description, and a great trailer. I feel like I have a good understanding of the game, so big kudos on that.\n\nThe game itself feels very 1 dimensional, though. As far as I could tell the main gameplay loop, the combat, is very very limited. Essentially, walk up to things and spam the same attack over and over. I haven't played it, but it looks a bit like a chore instead of a fun time.",
            "The song in the trailer is quite nice, so is the editing of the video. Gameplay looks absolutely boring, as in, I wouldn't even play it for free. I don't understand the mechanics and the gameplay loop at all, it looks like moving and pressing 1 button?",
            "website and art look good. I didn't realize you had character sheets on the page for each character. I nearly left a comment saying you need character sheets. Since most people won't spend too much time digging around the website I think you should make these sheets more quickly visible.",
            "At first glance, I like it. \n- I like the choice of characters (plague doctor, toad), it gives the game a dark atmosphere that reminds me of Darkest Dungeon. \n- The cards are also nice (I assume there will be some text below the picture about what the card does)\n- It might also be cool to make the gold color shiny (some other elements as well) to show more depth (I'm thinking something like the coin cards in Stacklands for comparison).\n- The wooden paneling of the arena looks unique, but I don't understand the graphics of the trees at the bottom\n- I think the color palette is a bit pale, it would be good to make it more colorful (for example make the toad dark green) to differentiate the characters/items from the environment\n\nBut look at this opinion as an \"outside/first glance\" as I'm not familiar with the genre, so I don't know what other similar games look like.",
            "I think it looks really good! The aesthetic carries over well between all your drawings, and I feel like it could it's a great idea to make it stand out to other Tower Defence games, which generally all looks the same to my eyes :)",
            "I like it, but I am also a big fan of Don't Starve and it kind of gives those same vibes.  I would agree with Michael\\_Witch to look at your colorizations as you go.  For instance having a white plague doctor, I would make the toad another color.  Essentially isolating character colors from NPC color choices makes it a quick to decipher visual aide for players.  Nice Job!",
            "Hi. 1. I dont quite get whats 'parkour' about the level. If my understanding of parkour is things to run and climb and jump off of. 2. I think the colors and lighting are nice and bright. 3. Are the shadows and the angle of the sun rays miss matched?",
            "I can tell you are out of your realm, do something simpler.   This will either never get done, or will be terrible.\n\nYou are showing a level blockout that has no defining factors about parkour at all.  It tells us absolutely nothing about your game.  I would guess you are a budding 3D guy more than someone who can make a whole game\n\nA Moba?  a moba... seriously?  please...   pick something simpler.\n\nSomeone who is really qualified to make this game would be angry if someone on the team showed this.\n\nPlease, choose a smaller scope.. then come hunt me down later and thank me.\n\nYour welcome.",
            "For beginner questions please use the beginner megathread instead:\n\nhttps://www.reddit.com/r/gamedev/comments/1agdesg/beginner_megathread_how_to_get_started_which/\n\nIf you'd like an invite to our discord you can find it in the sidebar.",
            "Please use the beginner megathread for these kind of questions:\n\nhttps://www.reddit.com/r/gamedev/comments/1agdesg/beginner_megathread_how_to_get_started_which/",
            "It's hard to understand the content of the game from just the trailer, so I think releasing a demo is a great idea!",
            "The thrusters are flickering a lot. Is that because the player is performing control inputs in that gif? If no, then I think it's too much flickering. If yes, then I think it's not enough flickering.",
            "Looks nice:- the only criticism I could give would be the colours clashing harshly, unless it's intentional and goes well with the background.",
            "Is it a floating ghost type of character ?\nSome feedback is that the eyes are a little hard to see.",
            "Love it, but it's a bit hard to see!",
            "I like the graphics you chose and the layout looks good.\nThe grammar seems a bit rough in your description though. The sentences didn\u2019t flow well and there were punctuation errors. After a cleanup of the text portions I think it will be a nice page.",
            "Looks nice, could use some audio to spice it up.  Wishlist is spelled wrong at the very end of the video and I know that would throw some people off.",
            "Really like the art style to be honest! Wouldn't change it and would play the game.",
            "Feedback != idea brainstorming.\u00a0\n\n\nIt seems like you are facing the same problem as Introversion Software when they made Subversion. They invested a ton of time to implement an awesome procedural city generator, but without ever designing the actual game mechanics. And then they realized that they had designed themselves into a corner. They had procedural cities, but nothing to do in them. In the end, they trashed the project.\u00a0\n\n\nThe lesson they learned from that: **First** design the game. **Then** prototype the game with static content to playtest and refine the game design. **Finally** develop the procedural content generator that makes content specifically for that game.",
            "What about something like:\n\nWelcome hero, you adventure to save Emalon begins here.  Along your way choose your party carefully to ensure you have the skills to battle the evil that grows within our realm.\n\nPS Could you try Commando (see below).",
            "Check out [Josh Strife Hayes](https://www.youtube.com/watch?v=EteKvR5PnXQ) on YouTube - he plays hundreds of MMOs with retro graphics. Some are great and some are not. The genre/art/concept has no bearing on quality. If you are good at making games you'll make a good retro MMO. If you are new to making games, you won't make a good one.\n\n>Do you think it could be successful?\n\nYes it could.\n\n>Is it even worth trying to do games with these retro graphics?\n\nDo you have alternatives? If the alternatives have better outcomes for you, then its not worth doing this. If the alternatives don't, then it's worth it.",
            "Due to the recent success of games with such graphics like: Ultrakill and Monument, I would say that you should give it a shot :)",
            "Graphics would not be the issue. The amount of work an MMO takes would be a much bigger hurdle.\u00a0\n\n\nAlso keep in mind,\u00a0 retro doesn't mean bad. The style still needs to be coherent and intentional.\u00a0",
            "For game ideas please post in r/gameideas",
            "Thank you!\n\nI'll take your feedback into consideration and make some adjustments to the visuals!",
            "Regardless of copyright laws, I feel like it\u2019s too close of a name and will hurt you in the long run. If someone recommends combat ace and ace combat is a big game in the industry people will assume their friend meant the bigger one",
            "Thanks!\n\nI am prepared to change the title!",
            "I'm working on a exploration/ platformer with the same art and characters and when I Kickstarter it, that will be a stretch goal; an app that allows parents to photograph and rig characters to put in game. (With the caveat I'm not responsible for giant walking penises)",
            "Thanks! Been thinking a few things were off!",
            "Aww thanks! You just made my day!",
            "Hey - since you liked my mobile game; I just squashed a persistent game breaking bug. If you have an android device and know how to install .apk files; I'd love to have some playtesting feedback, if you're interested!",
            "Thank you!",
            "Thank you, that's a great idea! I'll check them out and see if I can mimic them :)",
            "Thank you so much, very much appreciated! I shall take that into mind and see how it goes, thank you again :D",
            "Done, will keep that in mind for future reference.",
            "Thanks for the feedback! The game takes place in a fictional kingdom called Evaria, and the goal of the game is to collect the four Starlight Relics scattered throughout the kingdom. This was just meant to be a teaser trailer and there will be a much more in-depth trailer later this year.",
            "i saw it again and saw elements of pokemon, early FF games, and a lot more - really looks good.  wish you the best of luck on this - I can see this being a pretty solid game.",
            "Thank you for the feedback! I really appreciate it and will improve on it!",
            "Thank you very much for the well thought out response.  Things look great when only one set of eyes is involved, but that is a great perspective to help me out.\n\nYes, it's a gather/explore/craft/survival type game, the catch being you can only use bots for most tasks and you have to program them.  One of those \"I wonder if I can\" that just kept going.  I'll try another video and lean more into some of the simpler programming like you said, to emphasize that it actually starts out pretty slow and easy for the basic steps.",
            "thanks a lot for the feedback, I will go over the description with a fresh mind :)",
            "aww \u2665\ufe0f\n\nI will post mo' sneak peeks there in the future!",
            "Actually, I put away objects to make gif loopable \ud83e\udd74\n\n\nThanks for the feedback!",
            "Thank you! Good point re indicating who's talking.",
            "Thank you! Yes, definitely super useful. Appreciate you going through in detail.",
            "Thank you! Great feedback, will def keep this in mind.",
            "Thank you!",
            "This is great to hear! Exactly what we wanted from this trailer. Thank you for the feedback.",
            "Ohh, wonderful! There definitely will be some creatures popping out at you! \n\nI undertsand, VR Horror Games are on a completely differnet level. Some people like horror, but not the horror that literally freezes them with fear lol. \n\nThank you for the feedback on the voice work, and the idea of having whispers or nursery rhymes in the game world. A fantastic idea.\n\nThank you so much!",
            "When you say too quick, do you mean the fade into the text transition? Or do you mean the text isn't on screen for long enough?\n\nThanks for the feedback!",
            "Thanks for the feedback.\n\nThis is more of a cinimatic trailer as opposed to a gameplay trailer, but your feedback has been taken into account!\n\nWe are really happy that you like the song! It was one of our favourite things to put together.",
            "Thanks for your time giving feedback! Arrows on the ramps are definitely a good idea,",
            "Thanks, I appreciate your feedback! While I primarily wanted feedback on how the scene is read in motion but you've raised an interesting point. Mechanically, players can attack in any direction independent of movement, and enemies will come from behind and fire projectiles at you (or a car) which a player would want to dodge so reducing visibility in that direction could be problematic. I agree a bit of camera lead using velocity makes sense when on the hoverboard. Current plan was that when projectile weapons are equipped the camera target leads slightly in the aimed direction, so it will prototyped to see what amount of blend between them feels right. There is no animation for riding the hoverboard included this this video, weapon animations are exact same as the ground ones. However, there is a custom Foot IK driving the legs, hips and feet to up down, as well as rotating to bank and pitch the board to reconcile the shape of terrain + jumps/disturbance. But more animations (such as jump reactions and switching to goofy foot, etc.) are coming.",
            "Thanks for the feedback.\n\nBullet 1 & 2 make a lot of sense.\n\nBullet 3. I think it looks fine personally ((BUT)) if I consider it from your point of view, I find it hard to imagine what the polished version of the animation would be. Would it just be a \"smaller\" bounce? I think a \"smaller\" bounce would stand out less and look less interesting visually. Possibility: there isn't a version of the mechanics that \\*would\\* look \"polished\", or I don't see how it would look.",
            "Yeah. My teacher said that it isn't the best, but I have already started my own project which is gonna be a Quake like FPS. Btw thanks the feedback :D",
            "Mhh thats interesting.\n\nDidn't you see the \"Projects\" or the \"About\" tab on top? Or do you mean in addition to that, direct github links to projects of mine or something like that?\n\nI'm a bit confused right now, because I'm pretty sure half the website is exactly that. Pictures and Videos of the projects I created.\n\nBut already thanks for the feedback :D",
            "Thanks so much! Really glad you got a laugh out of it. \n\nI\u2019d originally planned on it being multi platforms at different levels and you jump between them. So I am pleased to hear that feedback that I was on a reasonable path. Now just got to figure out how to do it! :)\n\nMy kid suggested the geometric shapes as an art style. I\u2019d originally planned on Demon Hounds, but I hit a wall with animating it. Currently just trying to upskill my art so I can do more characters.\n\nLots to do, lots to learn.\n\nThanks again for the feedback, has really made my Friday :D",
            "Fair enough! Thanks for the feedback :) I wanted to make the first devlog a bit personal but will dive deeper into game design in the next episode. I probably want to talk about tutorials and how to keep a player engaged in your tutorial.",
            "Thanks! We have that same feeling of wanting to put so much information",
            "Thanks for having a look at the Steam page! \ud83d\udc96 Here are the answers to your questions:\n\n- The speed in combat has to do with the cards you use, the items you have and the effects that enemies cause you. You can only act once per turn, but depending on these variables, you will go before or after the enemy.\n\n- We are going to change this section, because you are right, it generates a lot of doubts. At the start of the game you will be able to select 3 variants of the protagonist Patt, which have different stats and decks. The brothers section is to explain the role of Patt as the protagonist and Sweet as a guide in the city. But as we said, we are going to change this structure and text, to make it more understandable.",
            "Wow, that was really helpful.\nI take your opinion seriously.\nI'll have to think about it.\nThank you!",
            "Thanks! That's great feedback.\n\nThere are definitely some things I can address here. I appreciate the honesty, it's exactly what I needed.",
            "After rereading the tutorial, I tried it again. The mechanics made sense this time.",
            "Thanks a lot for your feedback :) You pilot your spaceship and combat ranges from bullet-hell to more tactical shooter (depending on how you design your ship), but you are right that this is not yet clear looking at the page. Good point!",
            "Great to hear! I agree that multiplayer would be awesome and I thought about that quite a bit but I do not expect that to be realistic in the time frame I have. So lets keep it at maybe :)",
            "Thanks! Thats is valuable feedback. The controls are quite smooth, but I'm still balancing the impact of design choices (i.e. where do you place thrusters) on the controls. Controlling the ship should be painless and easy, but I'd like the design to impact it (at least a bit).",
            "Great, I have not considered focusing more on the first screenshot, so thanks for the tip!",
            "Good point. Thx a lot",
            "You mean Cartoony and Funny? Or all of them?",
            "  \nYou're right, the post lacked some crucial information, added short explanation and sent a key!",
            "Hey there, thanks for the reply! That's basically what I figured and I appreciate a second opinion",
            "Got it, appreciate the response!",
            "Dm is dungeon master, yes. My victory state is currently completing a campaign. Going off your suggestion i suppose it could be that all players quit the campaign.\u00a0",
            "Awesome thanks for the advice!",
            "Thank you for the advice :)",
            "Thank you for the feedback! It acutally started out as a pixel art game, but I wanted to differentiate myself",
            "Thank you, those are some great points that I will pay attention to. The white was actually a hit-flash, I really grabbed a bad screenshot there :D",
            "1. its a specific kind of parkour that you can use, wall jumps and climbing walls. The map needs to reflect that but also be a good moba map, which was definetly tricky.  \n3. yes, they are a seperate vfx that ill have to work on",
            "I know, it looks like usuall, jung programmer that sets way to big goals.  \nFunnily enough, its not, I have worked on this project since years, dedicated, not starting another game, what my friends usually do.\n\nThe reason why it is blocked out is that parkour moba is newground.  \nNobody has ever done it and so we need to learn how to do it with playtests before we can invest time and money in actual probs.  \n  \nDo me a favor and look at the youtube chanell [https://youtu.be/blKjyeDBtZA](https://youtu.be/blKjyeDBtZA) .   \nWe just recently had a playtest where we checked that all the usuall moba elements work.\n\nI surely have thought about quiting a bunch of time.   \nI wound. My love to the genre is too great.",
            "Thanks!!  i'll do my best to set a demo on steam until the end of the month",
            "Hello PhilippTheProgrammer! Thank you for your observation!\n\nThe flickering of the thrusters in the GIF is meant to showcase the effects of our thrusters and lighting, and it was not created by player inputs. We appreciate your feedback and will take it into consideration to ensure the effects are balanced and visually appealing in the final version.",
            "i chose a green-red contrast because im trying to go for an elemental theme, all my background assets and mostly dark so i wanted the player to pop out.\n\nany comments on the animation frames..?",
            "Yes it is a floating type character,\nFor the eyes I can make the darker or like give them some accent I guess",
            "Oh ok, thank you so much",
            "Thank you! I'll try to improve it, although English isn't my first language.",
            "Thank you! Fixed the typo.",
            "Thanks man, I appreciate it. Got some negative feedback recently (at r/DestroyMyGame, so I know I should take it with a grain of salt since I literally asked for negative feedback), that combined with the low wishlist count on Steam has been a little depressing, so hearing comments like this that understand the intent (cross between Pokemon and FF) is motivating!",
            "You're welcome. If you need professional help for the game, don't hesitate to contact me. You can take a look at my portfolio [https://claudiurentea.com](https://claudiurentea.com) .",
            "Ah, gotcha. \ud83d\ude04",
            "I don't know if this helps, but many tetris games have really cool effects. \nFor instance tetris effect:   \n- The game \"wobbles\" a little when a row/piece falls to really stress that there was a shift/impact   \n- If a row gets eliminated, that doesn't happen immediatly. I feel like this is the most relevant. Instead, it stays for a little bit while kind of pushed down to the maximum, gets brighter, maybe a little bigger, then gets destroyed with particles. This is where I feel like if you push something over the edge of a cube in your game just snap right back immediatly. For instance at 0:12 in the trailer without the cube, when compared to tetris effect: https://www.youtube.com/watch?v=oVdp-9ZwLJQ   \nI am sorry for not being able to explain it very well, maybe other people also feel different :D",
            "Hi, I'm a Games Master student from Hamburg and I'm really impressed with your portfolio :) I also didn't notice the \"projects\" tab at first, even though i clicked on the \"about\" tab right next to it. Maybe making the tabs stand out just a little more could help :)",
            "https://howtomarketagame.com/2020/11/12/steam-101-how-to-tag-your-game/\n\nThis article makes sense, but I also see your more like this section also seem to make sense so maybe the tags are OK.",
            "Is there any drawback to this/reason you weren't will to do this? Let's solve for that.",
            "Aaah ok. You could try ChatGPT or even hire someone on fiverr to go through it for you. It\u2019s totally readable, just not as polished as the rest of the page in my opinion.\u00a0",
            "I went through the entire course. It\u2018s a really great source! I\u2018d like the game to be listed as similar to other games with the \u201ecountryball theme\u201c. But those games are local multiplayer, platformer whatsoever\u2026 All things that don\u2018t match my genre. So I kinda can\u2018t do that or it would be straight up lieing about the content of the yet unpublished game.",
            "So quitting I think is good. The hard part is finding the trigger for someone to quit.\u00a0\n\n\nYou put me to task on brainstorming this which is helpful!\n\n\nThe hard part is I want the dm to have a chance to recover after a player does something drastic. Additionally, one player quitting probably shouldn't be game over on its own since people leaving doesn't always end a group.\u00a0\n\n\nPerhaps losing is hard, you need all players to quit from repeatedly having their needs not met before you can\u00a0 find a replacement. However at the end I generate some sort of score for how good of a dm you were. That could be the real motivation to do well.\u00a0\n\n\nMaybe this leads to a strategy of bullying out a problem player so you can focus on the good ones. Do you see any pitfalls with this approach?",
            "The pitfall would be that theoretically I could just pick one guy, bully the rest out, and satisfy only my one guys condition to win. Then the game wouldn't be fun. Assuming here that the fun comes from balancing different players conditions. Trying to do some balancing act here (setting a minimum of 2 players instead of 1) is also going to be a band-aid, not a solution. I, as the game player, would still get into the \"cull these chums out of the group\" mentality.\n\nWith that in mind, I'd suggest (at least initially) making it so that if even one player quits, the game is lost. I (the game player) have to account for everyone's needs.\n\nPractically speaking, as long as you're clear on the general idea of \"if players quit, trigger fail state\", it's also a very simple adjustment to change the number of players who need to quit to trigger the fail state. So you can iterate over time.",
            "Thank you for reminding me that players will optimize the fun out of a game if they can!\u00a0\n\n\nMy thought right now is to have a table socialization meter which is harder to fill with fewer players. So if they don't replace the player quickly, they may snowball into a loss. On top of that having someone leave would result in a big score penalty for the end of the campaign. Hopefully this is enough to mitigate the issue!\n\n\nI appreciate your help!"
        ]
    },
    "I just played Monopoly Go for a while and am in shock. This is now the highest grossing digital board game of all time by a wide margin. There are almost no strategic decisions, it's basically candyland. Even the dice are automated as rolling the dice is apparently too tedious.": {
        "title": "I just played Monopoly Go for a while and am in shock. This is now the highest grossing digital board game of all time by a wide margin. There are almost no strategic decisions, it's basically candyland. Even the dice are automated as rolling the dice is apparently too tedious.",
        "score": 271,
        "url": "https://www.reddit.com/r/gamedev/comments/1dlgnmy/i_just_played_monopoly_go_for_a_while_and_am_in/",
        "content": "I've spent years of my life crafting a delicate balance between strategic decisions in our board games and trying to add layers of depth and interaction. This clearly shows that is not what the larger market wants. I understand they have the Monopoly brand and millions in user acquisition money, but the gameplay itself is just abysmal. They already have billions of players that know and love Monopoly rules, and yet they chose to throw those out the window and make a simple copy of coinmaster, rolling dice and earning money. And they are clearly spectacularly successful in doing so. As digital tabletop game designers, how do we process this? Granted this is the casual mobile market and not the hobby gaming market, but I'm still shocked that it is so addictive and profitable while using an IP originally from the hobby gaming world. Is the simple idle game really the pinnacle of mobile board gaming?",
        "num_comments": 95,
        "comments": [
            "Want to know the secret?\n\nIt's a ding ding ding machine. People love that.",
            "Monopoly Go is not a board game and it's not trying to be. It's more of an idle game in the style of Pirate Kings or Coin Master as you say, and it's aimed at an entirely difference audience. It's hard to adopt a lot of board games into a F2P model, which is why they don't do as well on mobile, and tend to be more premium experiences along the lines of Uno or Ticket to Ride.",
            "You deal with it in many ways. Some of them from my experience are below.\n\n- Realize that not only do different people want different things, but they also want different things at different times. Someone who loves deep, complex strategy games may also enjoy some mindless shooter games, idle phone games, etc as well. \n\n- Genres like \"digital board games\" are super wide. The existence of more casual games does not automatically cannibalize the audience for deeper, more complex games. In many cases the opposite can be true, new players are drawn in through casual, easy games and then end up looking for more and growing the audiences of other games. \n\n- Realize that compared to \"all games\" or \"everyone playing games on a phone\" you are in a small niche. This is ok! finding your niche is the best way to be successful as a small developer when you can't complete with the money and reach of large ones. \n\n- Stop worrying about games you are not actually competing with. The indie game movement really started to come into its own when both players and developers stopped looking to it like AAA-lite, and started looking to it for the unique games, stories, and experiences they could provide. \n\n- Stop making blanket assumptions on why things were done. Things like \"Even the dice are automated as rolling the dice is apparently too tedious\" is jumping to a conclusion that almost certainly isn't true, and is designed to paint both the game \\_AND\\_ its players (**many of which likely overlap with your players**) negatively without any substance.",
            "The \"Shut Up and Sit Down\" crew touched on this in a review of Rummiukub. It's the distinction between a game and an activity. Monopoly Go is an activity that is intentionally simple. It's primary goal is to facilitate a group of people enjoying each others company, and it supersedes the goal of creating interesting systems to grapple with.\n\nI think it's a little arrogant to just assume that most people are stupid and so they like stupid games. Rather, I think it's likely that when groups of people get together many/most of them do it to enjoy their company, more so than solve a systems puzzle. And a game that requires too much attention won't give them what they want from the night.",
            "it's not your audience. You and the indie market in general do not exist for them. Heck, these people don't play the AAA, either",
            "Keep in mind, the Monopoly license is also incredibly popular with slot machines. This an entirely different market segment. \n\nMy grandma enjoys Monopoly licensed slot machines but would never play any kind of board game because she's not into any of those aspects of interesting decisions and strategic thinking. People are looking for different things from their games and you just have to be able to put yourself in their shoes somewhat. \n\nThere's absolutely a market for digital board games. Monopoly Go doesn't really represent any of that, one way or another.",
            "Years ago, before smart phones existed, a friend of mine who is no longer with us pitched his game idea to me. He called it Press A, Get Points and the concept was that as you press the A button, you get more points. We would laugh about it at the time but he was completely serious.",
            "its a skinner box",
            "The gameplay isn\u2019t abysmal, it\u2019s brilliant. \n\nWhich means you\u2019ve identified your first problem - you don\u2019t understand the single largest and BY FAR most lucrative segment of the game player market.\n\nSo either don\u2019t try to sell it, or find a niche that thinks like you do.\n\nAnd viewing this massive market disparagingly\u2026honestly\u2026dude, if you want to sell anything to anybody, you need to learn how to read people better. Or partner with someone who can, before you start building.",
            "its a slot machine",
            "It preys on addictional. Daily quest, pop up deal, leaderboard, you name it. Once it fades, you will never hear about it again. Highest grossing cause it's a whale game, doesn't mean it's good or has and valuable qualities like classic board game.",
            "Slots are the ultimate in human expression",
            "It honestly has nothing to do with the gameplay and literally everything to do with the Monopoly name. Monopoly is a household name and the most popular board game in North America, potentially the world? When the average person thinks about a board game, they think of Monopoly. \n\nIt'll change over time, but don't try to follow what looks like a trend. You'll only hurt your games more by dumbing down the mechanics. You'll then not only have a game no one knows about, but it'll be a bad game no one knows about.",
            "Farmville, Flappy bird, Clash of Clans, Candy Crush, Pokemon Go!, Monopoly Go, [You are here].",
            "You might find this [GDC talk](https://youtu.be/E8Lhqri8tZk?si=dEO0KUUigRx4hVGV) cathartic. It\u2019s two guys who released their respective dream games, and they flopped horribly. So, jaded as hell, they met each other and decided to release the most cookie cutter slot game that they could\u2026 and it was (moderately) successful. The story gets better from there.",
            "Hyper casual games work bc people just want something to pass the time without putting their mind to it. There is no learning curve per se and that's why it appeals to the general mass you just click a button and the rest of the action is done by the game. \n\nWhile the surface of it sounds simple the backend is probably more strategic with lots of api hooked up for telemetry. The strategic triggers for in-game pop ups to tempt the user to spent with limited time offer wall and pack recommendations etc. Game monetization strategy is an art of its own. \n\nThere is also an entire market of retired elders and house wives that has a dominant market presences see candy crush/ pogo games / gardenscape\n\nBut that's why we have player demographic. So its super important to understand who your audience is and how much market your audience capture.",
            "Yea... that garbage game hooked me. I played for maybe two months and gave them entirely too much money.",
            "It's literally an obfuscated slot machine. I'm not being facetious, that's actually how it was designed from the bottom up. It even has the big red button... Compare it to other digital slot machines, and the design direction becomes very obvious.\n\nOnline gambling apps for mobile users, are not our competition. They have muscled their way onto our platforms, but they don't target the same markets. Think of it like a weed that invades a garden; nobody wants it there, but it's going to be sucking up all the water and nutrients it can before the gardener finds the right herbicide",
            "Scrabble mobile used to be EA and purist. No pay to win. I forget what they monetized.\n\nBut it failed. Now Scopely has it, and it's monetized like Words with Friends and it's successful.\n\n$10/month for no ads. But they still want you to pay for gems and watch more ads for more stuff and pay for more tiles etc.\n\nMobile is the wrong market for games with integrity unless you don't mind having a small market.",
            "Lol \"pinnacle of mobile gaming\" now this is the true example of a sentence that should be saved for the ages, first of all there is no mobile games, there is mobile apps disguised as games designed from bottom up to be the most aggressive, predatory, deceptive, addictive ways know to mankind of scamming people of their money.\nThe pinnacle then of those apps is the one that earns more money that's the ONLY metric people judge mobile \"gaming\" aps therefore for now Monopoly Go is it, don't worry someone will make one even more greedier and take its place.\n\nMobile gaming is the cancer that plagues the gaming industry that will eventually kill gaming as an art form down to a money squeeze machine.",
            "The ratio of people that love textured decisions to people that are fooled by random actions with bells and whistles is heavily in favor of the latter. Think about the average intelligence of a person, half the people in the world are dumber than that.",
            "I saw the ads that is was the number one game so I played it for an hour or so.  Absolute brain rot.  No strategy, skill or anything other than going down a predetermined path.",
            "here's an in depth video about it: [Monopoly GO's EVIL Strategy to Make You Poor (youtube.com)](https://www.youtube.com/watch?v=p1CfKgYuMjc)",
            "Guess people want mindless fun, not strategic depth.",
            "They harnessed the idea and image of Monopoly and made a **medium** for enjoyment. That's all it is, don't worry about it too much.",
            "its basically an idler? heh. perfect game design",
            ">Is the simple idle game really the pinnacle of mobile board gaming?\n\nIt's probably the pinnacle of mobile period.\n\n>This clearly shows that is not what the larger market wants.\n\nYes.\n\nWhy are you surprised by this? Genuinely? Never heard of casinos? Loot boxes?",
            "This thread made me download Monopoly Go lol it\u2019s quite fun",
            "The market wants what it wants. I think too often we (creatives, game devs, etc) forget that. If you\u2019re going to spend time making games you need to understand why and pivot towards it. There\u2019s a huge difference between a labour of love and chasing $$$. If you try and do both you will probably fail. So make games for fun and be happy with small audience and money or make games you probably wouldn\u2019t play yourself to try and earn money.",
            "Scopely are really good at this kind of game. Take a massive IP, wrap a game around it, market the absolute balls out of it and then keep it fresh with live operations. They are happy, the studio is happy, share holders are happy, IP owner is happy and millions of players are happy.  It\u2019s a completely different world to hand crafted Indy and small team projects.",
            "Welcome to 21st century",
            "I mean that is partially just F2P design but even the most popular premium digital board game series, Mario Party, is more or less gambling. The choices don\u2019t really matter, which to me shows most players are uninterested in pursuing any kind of strategy beyond \u201croll dice and win\u201d and they care far more about having dynamic matches with lots of big upsets.",
            "So if I understand this correctly, you are complaining that Monopoly Go has a larger target audience than your game?  This reminds me of the metalheads who complain endlessly about pop music.",
            "Maybe this is something to do with the company we keep, but I spend a lot of time around ***super***-casual people. Folks who thought Wii Sports was a little confusing. For whom Uno is a game they just barely understand, and need to be reminded the rules literally every round.\n\nThese people are the majority of the population! So when you intentionally design a game where the level of electronic engagement is custom built for them, what on earth do you think is going to happen?\n\nIf you read the above few paragraphs and thought that the people surrounding me are not very intelligent, then you have some serious game design and usability issues to work through, and any success you may have gathered up until now has only been because you managed to dodge this issue.\n\nWe are technical people. Which means, we are the deviants of society that actually \"enjoy\" exerting our brains. We do it for entertainment, frequently. Each of us has our desired flavor, but that is the common denominator.\n\nThe vast majority of people are non-technical, and find literally 0 pleasure exerting their brain an inch further than is required to do what it is that they actually wanted to do.\n\nThe fact that a game so accurately captured this second group's interests is not a failure by the developers or designers. By all means, take issue with their predatory behaviour, but this is not lack of design, just a design that is not targeted to either you or me.",
            "Yeah. As simple as possible while still being enjoyable. If you can do it with 1 button don't think twice.",
            "It makes me think of this:\nhttps://en.m.wikipedia.org/wiki/Cow_Clicker",
            "The key is not just lack of depth, it's marketing, a well established franchise and a simple game that anyone could enjoy. It's kind of like music, pop music isn't the deepest but it's easy to enjoy and remember, so the masses can enjoy it together.",
            "A game doesn't need to be good, it just needs to be fun.",
            "It's just a different market. Removing the cringe elitism from the wording, gaming is like, 5 completely different hobbies/activities under one name. I consider mobile different in the way I consider MMOs different or even people who only play first party mega hits every few months vs people who play 4 hours a day (Once again not saying any of these are better or \"true gamers\", just different groups).\u00a0\n\n\nMobile also now has such stigma around monetization and such deflated prices (even deep traditional games that port well usually can't go past $10.00) it becomes self fulfilling. If you make the world's deepest worker placement Eurostyle game, can you recoup costs with how that market functions as is?",
            "Its just a fun time waster, like virtual slot machines. Not everyone wants \"well balanced strategic decisions\", or any strategic decisions. Considering the board game community's snobbery with Monopoly I'm kind of surprised this is the app that you expected \"more\" from.",
            "Yep. There will never be as many people playing AAA masterpieces as there will be playing slot machines.",
            "Yep. It really lights up the ol' medulla oblongata. \n\nLizard brain like ding ding, like when ding ding make bright light!",
            "They have monopoly branded slot machines in Vegas. This is just an extension of that.\n\n(Fun fact, monopoly was designed as a cautionary tale about private land ownership and inequality by the Georgists. Somewhere along the line we lost the plot.)",
            "One should never underestimate the ding ding machine.",
            "Made with 100% *real* fruit juice *flavor*",
            "People have argued with me about Balatro leaning heavily into these tricks",
            "Slay the Spire is also very successful though, so there is some hope for humanity.",
            "Our brains were wired to love the ding ding.",
            "I remember when Words With Friends was a bona fide hit game. And it was just scrabble. Simpler times we had.",
            "> Things like \"Even the dice are automated as rolling the dice is apparently too tedious\" is jumping to a conclusion that almost certainly isn't true\n\nI mostly agree with you and I think the reason Monopoly Go does it probably is different from most serious strategy games, but I would actually argue that rolling dice \"by hand\" in a video game is pretty tedious.  If I'm playing your strategy game and I have to click a button (or worse, do a gesture or something) and then watch an animation of dice rolling to find out what my roll is, all you're doing is making me sit back and do nothing for a few seconds instead of actually engaging with the game and making the decisions that people play strategy games to make.",
            "I think this is probably a really good take",
            "Exactly. \n\nPeople talk about the death of the third place. \n\nBowling alleys.\n\nPubs. \n\nEverywhere wants you to spend money and get on out for the next group. \n\nFree to play games are trying to create the space where you still hang out, some people are willing to spend money, but not everyone has to, and you never gotta leave.\n\nThat's the way it's built, not as a subject of conversation but simply to be the place where conversation can take place. \n\nBefore the awkward silences between topics of conversation were filled by cheers for strikes or whatever sports game was on the telly. Now it's idle chat about what happens in monopoly, but no one cares so much about the monopoly, as long as they have folks to share it with",
            "^ yes! It fills a role like Mario Party",
            ">The \"Shut Up and Sit Down\" crew touched on this in a review of Rummiukub. \n\nNow I want to know what they thought of Rummikub. \ud83e\udd14",
            "But then how can I arrogantly feel like a glorious game designer who shits gold",
            "yeah.  it's not a game; it's a toy.",
            "You are describing [Cow Clicker](https://en.wikipedia.org/wiki/Cow_Clicker).   The game was made as a joke by the developer and to his surprise/horror it became hugely popular.",
            "> The gameplay isn\u2019t abysmal, it\u2019s brilliant.\n> \n> \n> \n> Which means you\u2019ve identified your first problem - you don\u2019t understand the single largest and BY FAR most lucrative segment of the game player market.\n\nSeriously. I feel like I am losing my mind reading the original post.",
            "> You'll only hurt your games more by dumbing down the mechanics.\n\nIt depends a lot on the game and what the game's trying to be: Buckshot Roulette, for instance, is designed around an extremely simple core mechanic: shoot the dealer or shoot yourself. It introduces a few more mechanics as the game goes on, but the mechanics themselves are very simple and pretty obvious. In some cases, they're even more simple than they appear: the Dealer's AI is borderline moronic, but the interactions of the systems and the way the human mind engages with them (boy are humans *really* bad at probability), combined with the atmosphere, make the game extremely engaging.\n\nIt's simple because it was *designed* from the ground up to be simple, not because things were dumbed down from a more ambitious and complex concept.\n\nIt's also, interestingly, an example of a game that uses a lot of the same \"just one more pull/go\" and other psychologically manipulative techniques we usually talk about in terms of gambling, gacha, and other predatory money-grubbing stuff ...while being a cheap one-time purchase game.",
            "This still feels a bit unethical to me, but it's insane and unbelievable that it's still much better than free mobile games nowadays. They didn't really do anything wrong. Weird and sad I guess.",
            "This is a useless video. There was nothing said beyond the blatantly obvious.\n\nIt\u2019s literally packaged in the same way as the substance-less mobile games it\u2019s covering.",
            "she's just spewing buzzwords with dramatic music for 15 minutes. and people watching this pretend to be smarter than monopoly go players lol.",
            "Yea a good and important watch.\u00a0",
            "Give yourself 30 minutes and review that thought",
            "And also it doesn't mean that crafting casual, simple games or pop music is easy.",
            "In that case I gotta ask: is the indie game market drowning in slot machines and if not why not?",
            "There will never be as many people playing AA masterpieces as there will be playing AAA graphics orgies.",
            "It lacks kick ass fighting games with action missiles",
            "[No, Colonel Sanders. You're wrong.](https://youtu.be/rOTd39Vruns?si=LkB-1dDg0eG0bHP9)",
            "> Somewhere along the line we lost the plot.\n\n\n[When the game was stolen from the woman who originally designed it.](https://www.womenshistory.org/articles/monopolys-lost-female-inventor)",
            "And then Fortune Street came along and added stocks, promotions & dynamic board.",
            "> Somewhere along the line we lost the plot.\n\nPeople started making up stupid house rules to stretch out the game time.",
            "> Fun fact, monopoly was designed as a cautionary tale about private land ownership and inequality by the Georgists.\n\nI tell people this whenever they ask me to play Monopoly. Nobody has ever asked me to play monopoly after that.",
            ">  If I'm playing your strategy game and I have to click a button (or worse, do a gesture or something) and then watch an animation of dice rolling to find out what my roll is, all you're doing is making me sit back and do nothing for a few seconds instead of actually engaging with the game and making the decisions that people play strategy games to make.\n\nI'm with you.  \nThis really irked me in BG3.",
            "What a haunting, soulless replacement. \n\nRather have no 3rd space than it being this predatory bullshit  masquerading as a game.",
            "My first thought on reading your comment was Bingo! There is little skill other than the ability to listen and mark numbers and yet it was a hugely successful social event for decades. As you say, it just filled a mental gap while doing something else and acted as an excuse to get together.\n\nIs socialising the ultimate F2P game, with some monetisation aspects tacked on by an increasingly greedy society? A night out has players, rules, objectives. People with money can pay for cosmetics, unique locations and even favourable rules.",
            "This is a great explanation. I almost want to try out Monopoly Go.",
            "mario party contains real games you play",
            "feeling bad about money you spent on a mobile game or something?",
            "it is a barrier to entry / capital issue. \"ding ding ding\" games make massive amounts of money so you won't stay indie for long. BUT because they are such cash cows, there is a lot of competition there with very little differentiation. so you need to take the risk and spend massive amounts of money on ads to gain any traction. your competitors probably have deeper pockets so they can out-ad you. So you need to risk massive amounts of cash upfront, but if you succeed, you can make a lot of money. if you don't you lose it all.\n\nSo the initial capital requirements are high, you need to risk a lot of money. Which disqualifies most \"indies\". The indie loophole is making up for the lack of money by creativity, targeting smaller niches and using your free labor as a substitute for money that you don't have. Once you gain traction with a \"ding ding ding\" game though, you will make a lot of money and will need to spend strategically to maintain any kind of lead you might have so you will quickly have a team to do the job, which will no longer make you an indie, but a larger company that makes addictive games.",
            "Yeah, it is, there\u2019s been a tsunami of indie studios making these types of games. Mostly badly. Almost always unsuccessfully.",
            "Vampire Survivors was made by someone from the casino industry and has a lot of influence from slot machines.",
            "Monopoly Go spent an obscene amount of money on user acquisition. Because they're targeting an audience that can't tell the difference between products, they're competing on who can spend the most marketing money",
            "It is. I know a few people who got their start in slot games or hypercasual before getting into a \"real\" game studio.\n\nWhen we think of Indie we tend to think of a tiny, well-curated corner of the market driven mostly by word of mouth, but for every indie darling there are a hundred low effort casual games.",
            "You've reminded me that there's an excellent GDC talk about drowning the app store in cheap slot machine games, the talk is really really good https://youtu.be/E8Lhqri8tZk?si=3KPGYMBpe7SsDSPh",
            "It\u2019s pricing. \n\nOn the smartphone app market, \u201cgaming\u201d, in any traditional sense, is dead and replaced by ding ding machines (and maybe Minecraft or something). I\u2019m 99% sure that\u2019s because of Apple\u2019s initially aggressive pricing strategy which got people hooked on mobile spending with $0,99 apps. That created a race to the bottom where the cheapest dev cost/mass appeal formula was summoned, resulting in F2P as we know it.\n\nThe only reason we don\u2019t have that elsewhere is that on dedicated gaming platforms on console and PC, there is still *minimal* curation going on to filter for higher quality games. But take one look at the \u201csales\u201d page on the Switch game store or something and it becomes clear how that shit creeps into any market that allows it.",
            "[I\u2019ve got action missiles](https://store.steampowered.com/app/1429350/MHZombie/) and nail rockets and multi-warhead heat-seeking mines, but if you don\u2019t REALLY want to learn how to fly a helicopter we\u2019re both SOL haha",
            "That's a win in my book.",
            "So, making a ding ding ding machine is much like playing a high stakes ding ding ding machine, gotta love the recursion.",
            "Your comment reminded me strongly of the [BCG Matrix](https://en.wikipedia.org/wiki/Growth%E2%80%93share_matrix).\n\nI feel like many indies ignore basic economic theory way too much. They kinda wanna do it as business and a hobby at the same time and don't decide for either one and fail at both. Treat it either as a hobyby, have fun and don't expect to make a living, or treat it as a business and also do the economic research on what you are doing.",
            "> BUT because they are such cash cows, there is a lot of competition there with very little differentiation.\n\nJust to add to that, because a lot of those games can\u2019t differentiate themselves (or at least don\u2019t attract attention) through gameplay, they tend to establish a following by leveraging an established IP instead. That\u2019s another way in which it\u2019s not a great space for indies to compete in.",
            "The only winning move is not to play.",
            "I feel like theres some kind of business idea here.",
            "They see examples of success stories where people hitting home runs with projects that look like hobby / passion projects. Disregarding the fact that most of them are actually very calculated endeavors and not \"this is what I like\" projects going big, it is hard to have visibility on how *rare* that success story is. Realistically it is not easier than becoming a top athlete. The odds are similar. Or becoming a musician that delivers a global hit. I'd argue creating a top hit song is easier, it certainly is orders of magnitude less labor intensive. You can create tens of songs and test them in the market in the time it takes to develop a comprehensive game.",
            "Slot Machine Game Dev Simulator 2024 on mobile?"
        ]
    },
    "How I Reached 5,000 Wishlists for My First Game on Steam in 6 Months": {
        "title": "How I Reached 5,000 Wishlists for My First Game on Steam in 6 Months",
        "score": 115,
        "url": "https://www.reddit.com/r/gamedev/comments/1dlj3w5/how_i_reached_5000_wishlists_for_my_first_game_on/",
        "content": "Hey everyone!\n\n[Store Page](https://store.steampowered.com/app/2140570/Time_Is_Honey/)\n\nI\u2019m releasing my game in about a month so I decided to share how I managed to get 5000 wishlists for my Steam game Time is Honey in around 6 months!   \n  \nSo Time is Honey is my first ever game on Steam. I\u2019m a solo developer, and when I started, I had no pixel art skills or marketing knowledge I just knew how to develop games and that's it. Everything I know now, I learned while developing my game and doing the Steam page.   \n  \n**Here\u2019s a basic breakdown:**\n\nI began learning marketing from Chris on [howtomarketagame.com](https://howtomarketagame.com). This site has a ton of free stuff, and I highly recommend joining his Discord server (NOT A PROMO I just really enjoy being a part of the community). The community there is incredibly helpful, and you can get responses to your questions in about 10 minutes.  \n  \nIt\u2019s a lifesaver when you\u2019re unsure about Steam or marketing in general.\n\nBefore I explain what I did I would recommend to start your marketing as soon as you have something nice to show.   \n  \nI created my Steam store page and posted my demo a week after publishing it. I earned around 500 wishlists without promotion, but it soon dropped to 1-5 per day.\n\n**Marketing Methods I tried so far**\n\n**Posting on Subreddits**\n\n* I began posting cute and cozy gifs and photos on subreddits like r/pixelart, r/cozygamers, and r/incrementalgames. I noticed that r/pixelart loves interactive posts, like asking users to choose between options. These viral posts gave me around 200-300 wishlists each. Eventually, I started getting around 30 wishlists per day without promotion.\n\n**Steam Festivals**\n\n* I Entered two festivals which gave me a big boost. Farming Festival has gotten me around 700 wishlists, and Steam Next Fest added about 850 wishlists. The only thind I don't like about festivals is that you need some wishlists already to stand out in festivals, but ALWAYS enter them when you can. There are no downsides as far as I know.\n\n**Ads**\n\n* **Facebook/Meta Ads:** Started using Meta ads after hitting 4500 wishlists. They were alright, nothing great but  were expensive, costing around $1-$2 per wishlist. I think ads do not work well with some games.\n* **Twitter...I mean X Ads (Elon give me back my dog he didn't do anything to you):** Not effective for wishlists but good for networking with other developers and publishers. Especially if you dont have a twitter friendly game.\n\n**Contacting YouTubers and Streamers**\n\n* I contacted YouTubers by collecting their emails and sending a nice email with a press kit. Out of 50 emails, I got two big YouTubers, ImCade and InterndotGif, to record videos. I guess its not a lot BUT while this has helped mostly with exposure it didn't help much with wishlists. However, it\u2019s beneficial as it can create a chain reaction if other YouTubers pick it up and start creating more videos about your game :D!\n\nWith these If I can call them strategies, I reached 5000 wishlists in 6 months. My game releases in a month, and I\u2019m hoping for another 500 wishlists by then. My starting goal was 7000, but I\u2019ve adjusted it to 6000, which is still a great achievement for my first game!\n\nI hope this post helps someone out there! If you have any questions, feel free to leave a comment! :3",
        "num_comments": 31,
        "comments": [
            "At least it\u2019s good to see someone admit that those comparison posts are just cheap marketing, but too bad this will just create more of these duplicious posts",
            "Very helpful info, thanks a lot! I've been watching a lot of Chris videos, he's always said about 7000 wishlists to get featured. By the way, your game looks pretty nice, I'll be following your progress.",
            "I saw this a while back and wishlisted it. What won me was the nice UI and unique concept.",
            ">I noticed that [](https://www.reddit.com/r/pixelart/) loves interactive posts, like asking users to choose between options. These viral posts gave me around 200-300 wishlists each. Eventually, I started getting around 30 wishlists per day without promotion.\n\nSmart thing to do when marketing. It makes for a more engaging post when someone asks for my input about something.",
            "Congrats on your marketing and wishlist success! \nThis looks like such a fun game and I love the little propeller hat :)",
            "$1-2 per wishlist isn't terrible. Depending on your price you can print money with that!",
            "Ooh a month! This has been on my wishlist since one of your previous posts and I can\u2019t wait to play! \n\nAppreciate you sharing your experience :)",
            "Congrats \ud83d\udc4f!\n\nAt what point during development did you create the Steam Store page? Was the game close to being finished?",
            "Hey, can I ask you what you did to develop pixel art skills? Or did you eventually outsource it? Because your game looks nice and I am currently struggling with maintaining a persistent high quality look.",
            "That's pretty good. I have seen your game before, it looks interesting. But the number of followers seems very low for that many wishlists. I think the quality of the wishlists might be low.",
            "Just curious would you recommend Reddit ads?",
            "My games usually sit at 1-2k Wishlist before release then jump up to 5-8k plus on launch day",
            "Good read! Just released our steam page this week. Hope we can get at least this much! Wishlisted as well! Good luck on the release!",
            "\"just knew how to develop games and that's it\"\n\nSmall loan of a million dollars vibes lol",
            "Genius name for a game",
            "Hmm not exactly,\n\nI mostly just show 3 of my bee designs and ask which one do they think is the cutest one for example.   \nI get the feedback at what type of bee design should I focus on and people also find the game :3",
            "Thank you so much!\n\n  \nThe magic number of 7000 is not 100% true.\n\nLike, its good to get to 7000 BUT... There are people that had no problems getting into popular upcoming with 5k-6k wishlists. Its more about wishlist velocity and how fast you have gathered the number of wishlist you have than the number itself!",
            "Thank you so much It really does mean a lot!\n\nMay I ask how did you exactly find the game? Was it through Reddit or something else?",
            "Exactly! :D",
            "Thank you :D!\n\nUh I had so fun drawing those accessories, I'll have to draw some more for the full release too! Wish me luck xD!",
            "Thank you! I created my Steam Page a little before finishing up the demo but you can do it even earlier when you have some nice screenshots to show :D",
            "Hello! First of all thanks for those kind words :D!\n\nI didn't outsource anything except the steam capsule art, I just did it everyday and in the mean time you just get better at it, like anything you do. I'm 100% sure if you just do some simple pixel art everyday eventually you will start learning new things which will make you better.",
            "The most wishlists came from Reddit so maybe people arent interested in following and click wishlist? Im not too sure",
            "I didnt try them yet but I heard that people are mostly getting bot clicks xD",
            "Haha I understand, but I meant I started developing games when i was 10 years old, so i have around 10 years of learning and experience xD",
            "Yeah , the feedback is totally you main motivation haha, I get you. At least it\u2019s not as bad as cult of the lamb \u2018joking\u2019 about taking their game down during the unity fiasco. They get to look like activists and free exposure, plus people will think it\u2019s their actual last chance to buy the game from these upstanding developers protecting the indie games industry! I don\u2019t judge what you\u2019re doing that much and I get it, there are much worse marketing tactics",
            "I think it was r/gamedev",
            "Good luck!!!",
            "Sounds good :-) \nI'll keep at it",
            "Thanks!",
            "Thanks :D!"
        ]
    },
    "Anyone regrets starting with smaller games?": {
        "title": "Anyone regrets starting with smaller games?",
        "score": 49,
        "url": "https://www.reddit.com/r/gamedev/comments/1dlj5oc/anyone_regrets_starting_with_smaller_games/",
        "content": "The usual advice is to start with the smallest games possible. Does anyone have any examples or personal experience where that was a mistake or you wish you started with a bigger game?",
        "num_comments": 88,
        "comments": [
            "No. Always start with smaller games. You have absolutely nothing to lose.",
            "I\u2019m glad I got that advice, since the first project I finished that wasn\u2019t super small was in fact tough to finish.\n\nToday? That project would be easy and small compared to my current stuff but at the time, it felt like scaling Mount Everest with extra gear.",
            "I've a lot of experience outside gamedev. I've started or been an early founder of several startups that went on to have various levels of success.\n\nSomething I know about myself is I need a 'grand vision' to stay focused. I am self taught in several programming languages but always did so on ambitious projects. And yet, my experience there has taught me one very important lesson: I can't know what I don't know when still learning the relative basics of a new technology. I have to get my hands dirty first.\n\nSo I agree that small games is good advice, if for no other reason than to better understand the limits and capabilities of yourself and the technology you're using.\n\nBut to deal with my impatience and need for a big vision... I am keeping my small projects aligned with that bigger vision. Starting by focusing on a handful of key systems and from that prototyping a vertical slice.\n\nThis ~~why~~ is how I still avoid over investing before I can properly determine scope while also staying aligned with my original vision so I feel like I am on track.",
            "I doubt anyone regrets that, it is great advice. But maybe you don't want to stay at that stage for too long and make your projects bigger over time.",
            "I'll say this and I hope people see it: I did not start with a small game. I went right into 3D multiplayer games.\u00a0\n\n\nWhich is to say I spent 10 years banging my head against a wall figuring out stuff the hard way. Now I feel fairly comfortable here but I could have gotten here SO MUCH SOONER if I just followed the tried and true practices of starting with small games.\u00a0\n\n\nDon't do what I did.",
            "you\u2019ll never regret actually making something",
            "I wished I started bigger, so I scoped the project up a level. I vastly prefer scoping up vs scoping down.\n\nMy first completion project was basically Snake, and I added elemental biomes with different challenges and score rewards (\"Gaia Snake\").\n\nThe process taught me a lot.",
            "The regret was opposite for all the abandoned big projects. Always go small.",
            "Start with small games, but make them complete games, with sound effects, music, score boards, pause button, save  and load games, maybe add some extra levels, great UI/UX.\n\nYes, polishing games is not the fun part (at least for me) but it's also an important component. Games must have all the qualities of life features for players to fully enjoy them, and I say this as a hobbyist.",
            "I can't seem to bring myself to make something small.  I'm working on a game that's fairly complicated and am about 9 months in.  I expect another 9 months to completion maybe.  \n\nIt's great, it's coming along, it's beautiful.\n\nThat said, I did try another ambitious project a few years back that taught me a lot, but had to stop because of some art related collaborators.  That was painful, but I'll remake that game after this one from scratch with my new skills. \n\nI think everyone says go small because learning incrementally is safe, you aren't risking as much when something goes wrong.  But if you're willing to risk it, I think you learn as much or more on complex larger games.  \n\nI don't regret going big.",
            "It depends if you're willing to work with a team or not.  If you're dedicated to being solo, you have to live and breathe the concept of small.\n\nWorking with a small team can expand your options.  I'd still suggest your first team project to have a limited scope.  Prototype within a week, full project within 3 months.",
            "I'm glad I'm starting with a smaller game. At one point, it kind of blew up because of feature bloat. But now I'm cutting a bunch out and making it small again. It's actually closer to my original vision now",
            "Small is fine, I'm about to turn around and do that- you could spend years working on a large one that you may not finish, like me. I'm going to eventually. But I had to turn around and work on something smaller, something quicker that will allow me to feel out all parts of creating a game at a better pace. Then I'll go back",
            "Currently doing my first \"small\" game, or at least I thought at the beginning that its small. I underappreciated how much work I will have to put into it, let alone learn how to do it in the first place. \n\n I still think I will finish it this year and I am happy at the progress I've been able to keep up and happy from the stuff I was able to learn.\n\nLong story short, plan out your game, write down all things that make your game and ask yourself, how will you literally do it. You wouldn't believe how quickly your small game can turn into a massive headache.",
            "No, theres a reason that every dev suggests this and that's because it is extremely good advice.  You learn so much by releasing a game of any size.  I think for a first project, you're essentially winging it and just hoping that everything works out right.  With any projects after that, you bring with you knowledge of what people liked/didn't like about your previous game.  You have things you wish you did differently.  You probably built some big systems in the game that you wish you had designed better.  You maybe realized that you focused on an unpopular game genre, or fumbled marketing, or didn't create a game with an engaging enough hook.  etc.\n\nMaking something small and releasing it gives you a point of reference to use before starting something larger",
            "You can always add to and scale up a smaller game. It's significantly harder to effectively cut down a larger game during development. It usually leads to people expecting more from your game than what they got.\n\nStarting small and scaling up, paying attention to the small details along the way is generally the way to go.",
            "No I probably made like 8 tiny games before I did anything on steam, and each of those games I learned and improved ways of making stuff. Besides you get that dopamine hit when you finish a game, which doesn't happen often if you work on a project for many months.",
            "Always start small. All you will lose is time, but you will gain experience in exchange, finish as many small games as you can, once you feel really, REALLY comfortable with your skills is when you can start increasing the scope for your next project.",
            "I started with a small game. \n\nI'm on my like seventh year on that small game (obviously not so small anymore). \n\nImagine if I had started with a big game.",
            "Starting small is absolutely 100 percent the best and first lesson to be taught in game dev. Even reproducing an old \"simple\" game like Pacman will provide all sorts of challenges you wouldn't expect.",
            "it's common advice in any artistic medium. if you haven't written anything and attempt to write a novel before short stories, you are likely going to waste years writing something terrible. that time could have been spent learning and growing your audience on small scale stuff. same with filmmaking. you don't want to making day 1 noob mistakes on your masterpiece.\n\nyou can absolutely redraft and reiterate, but without working on multiple other things, you're going to be learning much slower. and even reiterating is a skill that you need to learn as well. spending months fixing one thing up when you've never done it before risks any protentional gains.",
            "I've only finished very small games ever. Usually when starting them I think \"eh this will not be very good\" but by the end I am so stoked and proud of it. I do think it's time to try scoping up a bit though!",
            "It's easier to scale up than scale down a game, so I think no-one will say that",
            "I did the opposite. I started out working in a group of three for a year for school. That group had a problem where one person was significantly more experienced and skilled than me and our other teammate. We also all struggled to communicate effectively.\n\nI found that those frustrations were a good learning experience, though. I started a small project afterwards. My failures in the larger project have encouraged me to take the time to learn and train my skills.\n\nI assume that you are asking to check if this advice has downsides or problems you don't know. My take is that a small project is always able to be a good learning experience and if anything goes wrong, it being small is reducing any loss on time investment.\n\nAs for learning, that is always valuable.\n\nDon't be afraid of regretting doing a 1 week project a little bit. It works better than regretting the 1 year equivalent.\n\nYou'll learn in both cases, but smaller projects give you opportunity to explore more and build off of what you learnt.",
            "Start with all small games, but make them in a way that it feels right to you. Make a small walking sim. Make a small shooter. Make a small racer. Something like that. Then combine them later on into something bigger when you feel ready to do so.",
            "I have advanced so much further in my game dev journey by not focusing on polishing a worthless game. The work to publish even the smallest game isnt worth my time. If i wanted to build a portfolio to work for someone that would be the eay to go. But to spend at minimum 6 months bringing a tiny game to market that will make $0... yeah not doing that.",
            "When i started i wanted to create the next skyrim....... i bet i learned much more than someone who did pong. Animations, level design, materials, proper story writing, advanced game mechanics.... ofc i failed miserably :D but i learned a lot",
            "I did the opposite and it's actually working fine for me. I've done large software projects before, though.\n\nNo rule is hard and fast, but you should consider carefully (and be accepting of the possible consequences) before you do so.",
            "I wish I had finished more of my smaller games lol",
            "Nope, there's a reason \"start with smaller games\" is the #1 piece of advice for aspiring indie game devs :)\n\nWell, that and \"forget about eating and sleeping\"",
            "the only mistake I've seen with starting small is more that sometimes small prototypes can be badly made even if they encpasulate an idea  and there is such a thing as prototype to full game tech debt which can sometimes become a real burden late in development .\n\nLet me just say the caveat is ... if you couldn't make the small buggy prototype in the first place then the likelihood of making the full game is nearly non-existent too .\n\n\n\nStarting small gives you real attainable deadlines, end goals, boundaries and helps you understand the most basic skills needed to complete a game  . \n\nthe biggest illusion for any kind of creative is that a completely blank and infinite canvas is a gift and it's actually a curse.",
            "No",
            "\u201cThe smallest games possible\u201d are things like minesweeper, tetris, asteroids, breakout, and such. Those should all be between an afternoon project and a weekend project. If it takes you any longer than that to have a functioning game (not necessarily super polished, of course), you\u2019re not ready to move to anything bigger.",
            "Like others said I doubt anyone regrets it, I personally skipped it but I have experience in post production and even more in programming. Jumping into bigger projects wasn\u2019t much of a jump personally. But I\u2019d say it depends per person. I think in general smaller projects and then specialize is the most common track you\u2019ll see people go on.",
            "I give that advice constantly but I didn't follow it. At points it screeches to a halt and its so hard. There are so many moving pieces and honestly it's probably never gonna get done.\n\nSo I regret the opposite, but I love it to much to change course, but it will never make money and very well may never be played by anyone",
            "It is the opposite, people regret to start with a not small enough game",
            "The point of the advice is less about size and more about finishing, I'd say. A smaller project has a greater likelihood if *being* finished.\n\nWhy?\n\nBecause you need to know all the steps; all the things that have nothing to do with your ideas but are simply parts of the process of making a game.",
            "Make a small minimal viable product that you can expand. Look at early access games that have public roadmaps to get a sense of what I mean. I like Going Medieval's: https://clan.akamai.steamstatic.com/images//34559289/2ae4fe8e7bb873679f6a108f01934db9f416ec3d.png\n\nIt's a great game that I enjoyed a lot back in 2022, even though it was incomplete. It was missing most of those checkboxes. It's a lot better with those checkboxes, but that took a team 2 years! And there's still so many checkboxes, and it's still early access! But I think they took the right approach; released early, got feedback.\n\nIf you're doing some sort of resource management or crafting game, you can start with getting the game working with just 4 workbenches and under 2 dozen items. If your game isn't even fun or functional with just that, it's not gonna be fun with 20 workbenches. Add systems one release and one patch at a time; 0.10.0 can be alchemy, 0.11.0 can be a trade overhaul, etc. etc. \n\nYou start small, get feedback, build incremental, still have as grand of a vision as you want.",
            "I wouldn't normally do this, but no.\n\nIt's not advice, it's data. \n\nDon't start with a big game.",
            "I think there's 2 versions of what people mean by 'small game':\n\n1. making lots of small games to hone your skills, probably free or on itch, game jams etc. This is very very sensible (I've prob made about 50).\n\n2. making 'small' but *complete* games to go on Steam, e.g. for $3-$5. I find this one trickier, since a small but \\*complete\\* game experience for the Steam audience is a more difficult thing to scope.  I have such a game (side project), I almost dropped it because I thought this is just too... small.  I now think its got potential, but to bring it up to that level still needs work.   Its when I was considering the store page / trailer when it dawned on me -- the entire gameplay loop can be shown in a few seconds, and a lack of depth/progression. It felt too small, for the intended purpose, and I lost motivation a little.",
            "Yes, not exactly the first game but making small games can be a waste of time when you already have the skills to create them. Don't get stuck making small games just because you are a beginner and don't make 100 levels for your flappy bird clone nobody plays, cause it's just repetitive work that won't teach you anything. Plus, small games suck 99.9% of the time.\n\n\n\u00a0You should always challenge yourself and create something new and better.",
            "No, it's so hard to keep the spirit high during the long projects and it's double as frustrating as it would be if you're just getting started since you spend a ton of time on seemingly small things here and there",
            "Unfortunately even though the game im working on is small. It is a peer to peer multiplayer game.\n\nI know it will have many challenges. But im willing to work through them even though this is the first project i plan to complete.\n\nWish I had someone to teach me multiplayer peer to peer or someone to rely on. But I will figure things out one way or another.",
            "think of the first drawing you did. even if you thought it would be the mona lisa it probably sucked. learning to make games is the same as any other skill. but the truth is you can do whatever you want.",
            "I started with a tic tac toe game and it was too tough for me as I don't know how to code.",
            "Never! It made me learn a lot of things. If I had made a very large game since the beginning, I would have been so devastated if it failed!",
            "I think that working on something you aren't passionate about is unlikely to produce a game that people will want to play (hence why we see so many people posting here who are struggling to get even say 1k wish lists).  If you have a smaller game idea you really believe in then that's of course ideal, but if you don't, then being so scared of failure that you don't even try to make a game that you legitimately think is competitive in the market seems like giving up without even trying to me.",
            "Hmm... Ok, there were 74 replies before me.  72 said \"No.\"  No, they didn't regret it.  One guy said yes, he up-scoped his game, has 9 months in, thinks he has 9 more months to go but it will turn into 9 years and many false starts.  One guy I didn't count as he wrote a novel wall of text.  \n\nWell, that answers that.",
            "I have made around 20 games of varying size. As far as I'm concerned, the only games I somewhat have regrets making have always been the bigger ones, but they are also the ones I the most proud of, so give and take, I guess.",
            "Yes. Investors look for games with great ambitions. Experienced people only risk working on your project if they see it as challenging.\n\nYou won\u2019t gain anything by going after the lesser experience, you\u2019ll just *finish* the game. Is wasting 1-3 years of your life worth it to simply see your game on a marketplace?  No serious publisher, no greater learning experience, no smart people around the project from which you can learn.",
            "I feel like the gamedev experience is:\n\n\n- Start gamedev\n- See everyone saying you should start with small games\n- Ignore them and start trying to build your dream game\n- Realise how unqualified you are for that \n- Either give up or start smaller projects\n\n\nThat's at least the experience that me and some other devs I've spoken to have had.",
            "Well I have trouble keeping a small game idea small. I usually think of a good base idea... then overthink it",
            "I'm glad I skipped that advice.",
            "I'm working on a devlog where I talk about my first game, which was totally a small one screen puzzle game, and I have no regrets, no. It was published, it got reviewed, it got noticed, it has fans. Can't get much more awesome than that for a fist outing! And you can build on your success. Plus, there's an infinite number of small games you can make. Cheers! :D",
            "It's easier and faster to test The Big Idea in a form of two or three tiny game-prototypes. As you acquire skill and dev style, you'll be able to make small games as modules that can be reused for bigger projects with little to no changes.",
            "Bro just wants an excuse to start their dream project",
            "Decide on engine, programming or visual programming, or both? Watch youtubers. Tubers give barebones explantions on how things work at a core level and are not optmized for a fully released game, spend 2 weeks getting to get a health bar working, spend days using AI, it works, but one part doesn't,  but you don't understand why because you don't know know how to program. time management/scope , color theory,  mechanics, art, music, sfx, animations, play testing, game design, bugs, marketing, controls, 2d or 3d or 2.5, lighting, visuals, particles, interacable objects, save files, persistance. Multi-player? PeerToPeer or server? Server infrastructure?  Couch co-op? Optimizing graphics, culling vfx, culling fiage, culling objects, shadows, spending a day to find out shadows are causing the huge fps drops, testing,  optimizing code, testing, bugs,  new engine version? Switch over? find more bugs.Widgets, widget animations, widget shaders, 3d mesh shaders, ui menus, ui art, player hud, hud art, hud functions, enemies, enemy mechanics, AI, path finding, navigation mesh, bugs, enemy state machines,  bugs, multipule types of enemies, datatables for enemies, enemy ankmations,sfx,vfx, death sequences,disabling enemies, datatables for weapons, weapon meshes, animations, vfx, sfx, reloading, tracking ammo, player restart, player death squences, widget grid controls,control and menu switching, control customization, spawning objects, removing, pooling objects, collisions, custom collisions, overlapping, disabling, loading rooms, disabling buttons. Landscapes, editing, landscape foliage, shaders, 2d tiles, level design, Quests, quest ui, ui art, quest tracking, npcs, dialogue tracking, writing interesting dialgoue, dialogue ui windows, ui art, audio voice over, audio testing and syncing with dialogue, npc choices, npc life cycle, npc shop. Shop items, item datatables, item functions, economy design so players don't get op, enemies drop gold. How much, distance between towns and enemies, fast travel? Walk speed, run speed, ui sprint meter, sprint function. Dodge, dodge meter, I_frames, weapon speed, weapon damage, game design so players do get op to fast. Bosses? Boss design, animations, shaders, statemachine, health bar, ui arta nd functions. Rewards? Item drop datatables, play testing, bugs, ranged attacks, melee attacks, getting player distance, displaying attack visuals to warn players, use decals that grow on the ground like ffxiii or animation build up like eldrin ring? Play test. How many bosses?marketing? Dev log? Record, edit, upload, social media accounts to post, reddit, Twitter, Facebook. Find streamers, e.ail big ones, those will take months/years to even see your email. Search smaller channels, email, dm, dm, dm, edit, upload, post, website? Domain name, squarespace, design. Look up examples of how other devs show their game. Trailers, dm guy on fiverr, pay, trailer sucks, no refund, dm others pay, post. Steam page, paying fee, filling out info, deciding on release, early access, etc,open project to take screen shots, crop, add text, crop 10 different sizes for steam, capsule, logo, display. Images for description. Ready to sum it info, steam mod says to fix things, fix them, add new stuff, redo screen shots because you made a cooler looking levels. Upload playtest, test through steam. Achievements not working?  Fix, re-upload, retest. Someone on Twitter says your new trailer.looks bad, pay another dude or spend time fighting them or don't do either and continue head down on the project. Steam release, or Steam events, have demo ready, first downloads say there's a bug, unplayable. Hire someone e a stream game, put on repeat on Steam to attract views. Post social media, Turns out to be a troll, everything's fine,but you did spend 8 hours trying to figure it out.  Full release, noreviews for weeks, revies come in mixed. Whos your audience, who would ac play this? HALF of all this can be avoided by just starting small and learning all the stuff it takes to make a game. The feedback and process will blow your mind. If a 1 week game jam is too much for you, I doubt you can go 2 years. Successful devs started small. Be successful, leave your pride and ego at the door UNTIL you can actually finish something. Your ego will say \"this is a challange from a random nerd on the internet, I can start big and finish!\" all it will do is make you spend years just to get you a couple days of \"see I did it\". What I'm saying is, you can do it faster and get even more recognition by ignoring that voice in your head.",
            "Yup, our eyes are always bigger than our stomachs, usually many devs come to game dev to make a dream game, and think it should be their first. Avoid that people. Horrible idea. Do not make your first game a dream game. \n\nYou will forever look back at it like \u201cdamn, should\u2019ve waited until I got good then I would\u2019ve made it with all the bells and whistles\u201d. Basically, imagine how the biggest musicians see their first debut album. Or movie stars that can\u2019t watch and cringe at their early movies. They don\u2019t like to reminisce, they want to focus on their latest stuff, that has so much improved everything. You\u2019ll live out the rest of your life regretting that the one game you\u2019ve always wanted to make, was plagued by amateur construction, and bits of \u201cdamn I could\u2019ve done that like this\u201d type moments. Seeing where you could\u2019ve improved. \n\nSame thing for games. Your first games should be clone games that you make to learn the ropes. Then maybe after a dozen projects you are ready for your \u201cdream\u201d game \n\nWhen you go into dev with too much ambition, you focus on things you shouldn\u2019t. Example? Art assets. You\u2019ll be busy making things look fancy and nice, AAA, and when you focus too much on your visual you lose sight of your actual gameplay loop. \n\nYou focus on the core loop, the mechanic, and you could have nothing but cubes and spheres as assets and it\u2019ll still be fun. \n\nThis is why prototyping is so important. Use the cheapest quickest assets to test your concept, and if that concept works, then it\u2019s a go and you can go hard on visual",
            "I know exactly how you feel lol I am the same, I am a very impatient person, and my ambitions too high. \n\nI really thought I could quickly learn things in a month and have a big hit out in a few months. LOL. Dev logs making things look too easy smh\u2026.\n\nThat ambition has you focusing on the wrong aspects like visuals when you should be focusing on gameplay. \n\nThat impatience is also what makes you have a Diane-Kruger effect. This is when you begin learning something, kinda get the hang of it, get overconfident and think you\u2019re ready to take on the world, then when you open a new project to start, you realize how lost and fucked you are and truly see how massive the learning curve is \ud83e\udd23",
            "Can I ask why you feel that way (genuine curiosity here)? The way I see it, any game (or program in general for that matter) can be broken down into smaller and smaller parts until you have the basic building blocks needed to assemble the final product which each require a fixed amount of prerequisite knowledge. To get to your 3D multiplayer project you have to know a fixed number of things. How would smaller projects, where granted you do pick up some of those skills, help you get there faster if you have to still solve a number of problems/learn a number of things that is equal to or greater than the number of things you\u2019ve had to thus far by just starting on the 3D multiplayer project?",
            "Similar experience here. whilst i have not done 'much' in multiplayer, i started and remained exclusively in 3d and whilst i learned a lot, i still have not actually shipped a title, and now im in a small team building up to release our first. I now know i would have been a lot better off if i had at least shipped something small early to get familiar with that process.\n\nSo i think the general advice of make a small game first and SHIP IT, is the best advice, the first game is not to make money its to learn through the mistakes so you can make your 2nd game with more time invested and not have to make the mistakes where more money is hanging on the outcome.",
            "I guess at first it's hard to gauge what's small and what could take a long time. Especially when working solo.",
            "How do you know your big game won't make 0 dollars?",
            "While not applicable to all aspects, something I think more devs should consider is prototyping in analog mediums. Such as making a board or card game that represent systems. \n\nFor example, I am in the very early stages of working on a dynamic story system which is the backbone of my game. I've prototyped it as a multi deck card and dice game. Right now I read the \"cards\" off a word doc, but once I iron it out a bit more I intend to print it out and take it to a few local game shops during their game nights to get more feedback.\n\nAs my game idea is story heavy, I am testing whether the story resonates and if the choices feel meaningful while also working kinks out of the system itself.\n\nAll before even coding any of it. This is in part because I know the visual design will be challenging and need it's own iterating, and I want to make sure the foundational system itself is as solid as possible before getting to that point. But it's also the cheapest and fastest way to test that system.",
            "Me spending like 6k+ on just looks \ud83d\ude2d to then not use half of the things I bought, had to scrap the game in the end. Started a small game, focusing on gameplay instead, and it's working out",
            "Thanks. I actually had this same idea until I saw your comment. Would have come up with it eventually seeing my own junior hubris, but I'm glad that someone else said it.",
            "Dunning-Kruger lol\n\nNot quite what you described but close enough.",
            "you don't know how to properly break a large project down until you've completed a project. there are always unknown unknowns. there are inevitably more unknowns the larger the project is.",
            "The sheer amount of trial and error (emphasis on error) makes this process especially daunting. I must have \"started over\" a good 20 times, each time learning little bits about how I could \"do it better this time\". And while I was learning things it was most definitely doing it the hard way.\u00a0\n\n\nI had no idea what I was doing and making so many messes that often the only real move was starting over to fix it.\u00a0\n\n\nI suppose if someone were able to somehow learn everything perfectly the first time they could slowly progress through a multiplayer 3D project as their first complete game (not talking about an asset flip or a train wreck). But I kinda doubt this has ever been done.\u00a0\n\n\nYou simply learn so much about how game loops work by starting simple. Learn the basics of collision and hit detection and tracing and masks and making optimizations in a 2D environment where there are far fewer variables and debugging isn't a nightmare.\u00a0\n\n\nNetworking a game is, in my opinion, just as time consuming as making the base game mechanics. It just adds so much time, headaches and frustration. And debugging this stuff can be a real challenge especially when you have little to no debugging skills.\u00a0\n\n\nIt's like getting in the cockpit of a plane and figuring out how to fly by crashing it a thousand times. Crashing is frustrating, time consuming and stressful. It's demotivating. Learn to walk first and get your balance. Then run and manage speed. Then try a bike. Then vehicles, etc. Work your way up.\u00a0\n\n\nObviously you're gonna do what you want but I just highly advise you don't do it this way.",
            "Because you learn so much more from completed and playable games than from a huge, incomplete project that nobody can properly play for years.",
            "Finishing projects is a skill in and of itself and it requires finishing many things to get good at it. You may make a bigger project but you've only finished one thing, so you're not as good at finishing as someone who has completed many projects.",
            "> The way I see it, any game (or program in general for that matter) can be broken down into smaller and smaller parts until you have the basic building blocks needed to assemble the final product which each require a fixed amount of prerequisite knowledge.\n\nYou're forgetting the *interconnections* that make a system from a bunch of disparate components - things are greater than the sum of their parts, and this is *especially* true for fast-paced dynamic systems like games.\n\nFurthermore, *multiplayer* is difficult to start with because the core gameplay loop needs to be designed from the very beginning to properly handle *latency* - and the best latency-hiding methods are a *beast* to set up properly since you need to track multiple separate gamestate instances (at least one of them on the remote server) and not only correctly model how data flows between them, but plug them into your renderer without everything horribly exploding or looking jank.",
            ">any game (or program in general for that matter) can be broken down into smaller and smaller parts until you have the basic building blocks needed to assemble the final product which each require a fixed amount of prerequisite knowledge\n\nIMO this is a bit idealistic for more complex projects.\n\nNot all games (or software artifacts in general) are that easily separated into parts or have crystal-clear boundaries, and this becomes truer as complexity goes up. You might start with a simple high-level analysis and say \"alrighty, I need a system to handle multiplayer rooms, a system to track the game, a system move my character and allow for combat\" but as you go deeper, there will be inter-component relationships and systems that you are not able account for unless you explore them. It's not always possible to put everything into neat little boxes, teach yourself what is in those boxes and just put it all together.\n\nFor instance, especially in multiplayer games, you often have to develop your systems with multiplayer always in mind. The networking system isn't a simple building block, it's a pervasive thread that goes through almost everything inside your game. Even if you manage to abstract it away, you still need to think about a gazillion extra smaller parts that have to tie into your game -- you just move the complexity elsewhere. Learning what you need to know is a whole different beast as once you move away from beginner stuff, you are pretty much on your own.\n\nAnd all of that is not even taking into account the iterative nature and many 'unknown unknowns' of games. If your game is super simple and you know exactly what you want, you might be able to get away with a thorough analysis...which will fall apart if your idea ends up being boring and needing adjustments. The more experienced you are with a specific set of systems, the easier it will be as you can see through some of the basic requirements but once you move even a bit into uncharted waters, your plans might not survive first contact with the enemy.\n\nMy point is, sometimes exploration and fumbling in the dark is only way to do things unless you are making exactly the same game with minor changes every time.",
            "Bigger games rise in complexity exponentially",
            "Are you learning from scratch? Even with Unity and UE, the simplest thing you can think to do, in actual finished form, will take you months.\n\nLike, if you're literally starting from scratch, learning how to make Space Invaders with score tracking and multiple levels and package it and figure out how to put it on Itch.io will actually take you months, unless it's like a full time thing then maybe you could do it in less than a month.",
            "Generally speaking story intensive games about making decisions are much more based on writing than gameplay so if you're a really good writer then making it one of your starter games doesn't really effect you.\n\nI mean obviously a very experienced game dev can elevate it but the core of the game is gonna be the script.\n\nI don't think the post really makes sense in your scenario.\n\nI think what op meant was more in line with people who want to make an accurate and fun open world naruto mmorpg with meaningful boss battles and world events",
            "Yeah, I think I take for granted that my start was as someone with a CS degree and previous (but minimal) art experience, so my start compared to someone coming in with very little to no technical skills is pretty different. I guess in my case my past experience were my \u201csmall starter projects\u201d, albeit not games but still applicable enough to let me progress quickly. Someone brand new likely needs to spend time learning the basics before burnout and frustration set in. Kinda silly this didn\u2019t click for me before this \ud83d\ude05. Thank you",
            "Hmm, I suppose there are only some things you can learn from hindsight. I do wonder if the value of that information outweighs the benefits of just diving in, but I have a hunch that that value proposition stacks up differently for each dev and each project, but who\u2019s to say.",
            "I'm not really a fan of this line of thinking as a universal truth, to be honest. \n\nThere is nothing particularly magic that raises your skill bar once you complete a small project. In fact, someone who's been banging their head against a bigger & more difficult project might end up with more practical skills than someone who made 10 smaller games. If we apply a linear kind of thinking (more projects = more finishing skills) then shouldn't a bigger project net you more points?\n\nDoing a higher number reps *and* lifting heavier weights are both measures of skill.\n\nThe skills come from challenging yourself. If your discipline is lacking then finishing a lot of smaller things might give you a boost and be extremely helpful. But I'd also commend the finishing skills of someone who had the patience & fortitude to crack a bigger problem.",
            "Huh?\n\nI was trying to suggest that making analog versions of gameplay systems could be a faster way to prototype and even get feedback on relatively complex systems than doing so digitally.\n\nDid my personal example distract from that? I intended it to be illustrative of what that could look like.",
            "You're welcome. And to add some context I had a CS degree before I started gamedev. I got a big head about what I could do. \"Why waste time working on other projects when I could just make my dream project?\"",
            "I have a degree in CS, 20 years of experience as a consultant, programming and participating in small to medium projects in ERP, and I still started small. Granted, I believe my scale up will be relatively fast. But you still can't just skip the \"small game\" phase completely.",
            "I consider honest, accurate feedback more valuable than gold, so...\n\nMore importantly, \\*you\\* will underestimate the time investment in making your first game(s); in some cases by orders of magnitude. Would you rather start with a project that \"should\" take a month and ending up spending a couple of years on it, or with a project that \"should\" take a few years and won't be complete in decades?",
            "Is your goal to make a game or just endlessly cultivate skills towards nothing? If it\u2019s making a game, then finishing is the most important skill, period. This goes for every creative pursuit. Avoiding learning how to finish destroys more creative potential than anything else by far.",
            "Yes i understand but that's why I'm saying most videogame concepts people have aren't as easily translated into real life games as maybe a story driven decision game.\n\nWhich is why for a game like yours it's a great idea because to you the script and interest in your idea is a lot more important than most games that are driven by innovation in game mechanics or graphics.",
            "That\u2019s pretty interesting, if you don\u2019t mind my asking could you share a little about what specifically you struggled with (I know you mentioned networking which is definitely fair) and what your process was for learning?",
            "I definitely wouldn\u2019t advise anyone to start building in a given direction for years without play testing, validation, feedback, etc. at key stages even if it is a small project let alone a larger one, but I don\u2019t think that it\u2019s mutually exclusive to being complete as one could make an MVP or gray box early and refine from there based on feedback.\n\nFor the second point, I guess it depends, the way this is setup it kind of feels like a lose lose lol, \u201cbuild a game that you fell meh about for a couple years because it\u2019s where you\u2019re \u2018supposed to\u2019 start\u201d or \u201cwork on your dream (or something you\u2019re at least interested in) that will take ~1/5 of your lifetime\u201d, I would think there\u2019s a better choice than this\u2026"
        ]
    }
}