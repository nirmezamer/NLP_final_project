{
    "Monthly Getting Started / Web Dev Career Thread": {
        "title": "Monthly Getting Started / Web Dev Career Thread",
        "score": 19,
        "url": "https://www.reddit.com/r/webdev/comments/1d5leog/monthly_getting_started_web_dev_career_thread/",
        "content": "Due to a growing influx of questions on this topic, it has been decided to commit a monthly thread dedicated to this topic to reduce the number of repeat posts on this topic. These types of posts will no longer be allowed in the main thread.\n\nMany of these questions are also addressed in the sub FAQ or may have been asked in [previous monthly career threads](/r/webdev/search?q=flair%3AMonthlyCareerThread&restrict_sr=on&sort=new&t=all).\n\nSubs dedicated to these types of questions include [r/cscareerquestions](/r/cscareerquestions) for general and opened ended career questions and [r/learnprogramming](/r/learnprogramming) for early learning questions.\n\nA general recommendation of topics to learn to become industry ready include:\n\n- [HTML/CSS/JS Bootcamp](https://www.udemy.com/course/javascript-beginners-complete-tutorial)\n- [Version control](https://www.atlassian.com/git/tutorials/what-is-version-control)\n- [Automation](https://blog.logrocket.com/tools-and-modern-workflow-for-front-end-developers-505c7227e917/)\n- [Front End Frameworks (React/Vue/Etc)](https://www.freecodecamp.org/news/complete-guide-for-front-end-developers-javascript-frameworks-2019/)\n- [APIs and CRUD](https://www.freecodecamp.org/news/crud-operations-using-vanilla-javascript-cd6ee2feff67/)\n- [Testing (Unit and Integration)](https://raygun.com/blog/javascript-unit-testing-frameworks/)\n- [Common Design Patterns](https://www.patterns.dev/)\n\nYou will also need a portfolio of work with 4-5 personal projects you built, and a resume/CV to apply for work.\n\nPlan for 6-12 months of self study and project production for your portfolio before applying for work.",
        "num_comments": 113,
        "comments": [
            "How much would you charge\n\nHi guys,\nI recently made this website (linked) for a client for free  because I\u2019m still new and wanted to build my portfolio since im still a teenage dev.\nI\u2019ve had around 4 1hour meetings with her surrounding the website, i helped her with the domain transfer, designed it based on what she told me she liked, chose the color palette and fonts etc, it was a really fun experience. We did abt 3 versions and I\u2019m about to submit a last version tonight. Its a cute little basic website because she didnt want too much things, just a home contact and terms and conditions page.\n2 questions:\n1. If I was to charge for this, how much should I charge?\n2. How do I ask for reviews or referalls?\nThx vm!\n\n\n[Website link (its in french)](https://deva-conciergerie.com)",
            "Can I mention a mobile dev internship when applying for a Web dev job? \n\nI was able to land a position in a mobile dev role even though I would have preferred if it was web. My question is if I can mention this in my cv when applying for web development job, would it be irrelevant? Would it help me boost my chances or is it useless for that role?  I feel like Im wasting my time since I don't want to apply for a mobile development job in the future.",
            "I am halfway through my first web dev bootcamp/course, and I am still not sure what to put on my \"to-do\" list, so I can achieve the goals I have.\n\nI work in IT (not programming/webdev) for close to ten years now and do design work for some side income. In the last couple of years, I really wanted to start creating websites and learn basic programming. Because in the beginning, I won't be creating complex stuff, online shops or even apps, I thought I am fine with learning the basic HTML/CSS/JS combo and learn as I go.\n\nSo here is my \"problem\":\n\nI can now create basic websites and would also know what to look into next, so I can incorporate things like animation or more complex styling, for example. But how do I cover topics like security or a CMS without using something like WordPress? In my head, I either let someone else do everything backend related or I learn everything (front- and backend), so I can do \"everything\" myself.\n\nI know learning something like web development takes time, and I don't have a problem studying for months or even years for it. But I am unsure what I should focus on if I want to offer basic websites first and increase the complexity in the future. \n\nFor example, I would love to some day create a website with simulations/physics and typography/letters. If I now start using WordPress or something like Webflow, I feel like I would stop learning web development and start learning how to use WordPress/Webflow instead? Maybe someone can help me out, I am super confused because there is so much stuff to learn!\n\nI appreciate any help with my confusion. Thanks in advance, and thank you for taking the time! (sorry for my English, it is not my first language)",
            "Hi everyone,\n\nI\u2019m currently working through the courses on freeCodeCamp and, although I appreciate having the objectives and content available online, I find that I learn best when I write things down. In school, I used to find it really helpful to print PowerPoint slides with a notes section for reference.\n\nI\u2019m looking for advice on how to efficiently take notes for freeCodeCamp courses without having to write down the entire course content. Ideally, I want to capture the most important information, concepts, and code snippets in a way that\u2019s easy to reference later. I tried taking screenshots and cutting/pasting them in my scribbler but that takes alot of time\u2026 and screenshots when shrank were just gross. I am definately a visual person so to reference things I will need pictures.\n\nDoes anyone have any tips or best practices for organizing notes effectively while using freeCodeCamp? Are there any tools or templates that you find particularly useful? How do you structure your notes to make sure they are helpful for review and study?\n\nThanks in advance for your help!",
            "I did Webdev in the past for fun, but think I might want to take it more seriously as a career path. In terms of education, is it something I should consider going to school for (i'm enrolled in community college but may have to back out for work to pay for a house we're getting), or would it be easier (or possible) to get online certifications that carry the same weight?",
            "Any suggestions for a UI toolkit for mobile web development? I'm looking for things like tabs (on the top), menus, login screen, etc.",
            "For someone who's leaving the beginning stage of the web dev career and approaching the 3 year mark for work experience, what should I be focusing on in terms of professional development to make myself the most employable.",
            "Former experienced LAMP / (PHP and Perl) developer looking for direction in the new WebDev era\n\nTL;DR - I need webdev upskill recs -\n\nI'll try not to waste anyone's time but thanks in advance for your perspective. In the late 90s into the mid 2000s I used to put together Web front ends for medical research projects using MySQL databases on top of LAMP stack where \"P\" was using both Perl (mostly the CGI module) and later PHP. I managed everything - the linux box, the database, etc.\n\nThe websites were basic HTML with CSS styles I emulated from similar websites of the time. no one would accuse me of being a \"designer\" but I did okay. At the time I started experimenting with things like Zope and Perl Mason which aren't really used (that much) anymore although I did put together a nice departmental site using Zope that ran quite well.\n\nI also started learning Javascript and put together some nice pages that allowed people to manage their files on a server. Messed around with Django also. Looked at Drupal a while back but didn't have time to dive in.\n\nAfter that I moved more into math-based programming projects and didn't look at building websites. So as of late I've been interested in re-entering the world of front-end stuff (though I don't mind doing databse stuff also). Someone kicked me towards Next.js but wanted to see what others might recommend.\n\nRemember, I'm a tech guy so don't worry about throwing details at me. If your preferred framework works better with say NGINX (or not) I'm happy to hear about that. Thanks,",
            "I just graduated with my CS degree. I am working on a portfolio with 4 projects:\n\n* **Project 1: AI home price predictor with a neural network**\n   * Full stack app: ReactTS + Django\n   * Languages: HTML, CSS, Typescript, Python\n   * Deployed with Docker on AWS\n* **Project 2: Hardcore Retro Asteroids game with high scores database**\n   * Full stack app: Raw Javascript + Spring Boot\n   * Languages: HTML, CSS, Javascript, Java\n   * Deployed with Docker on Oracle Cloud services\n* **Project 3: Real-Time Travel Expenses Calculator**\n   * Will be used by my colleagues for calculating travel expenses for our technicians at my company.\n   * Front-end application with API calls: Angular Typescript\n   * Languages: HTML, CSS, Typescript\n   * Deployed with Docker on Microsoft Azure\n* **Project 4: Disaster Recovery robot**\n   * A simulated robot that can solve mazes with a depth-first search algorithm to find \"survivors.\"\n   * Languages: lua\n   * Will have a video demonstrating the functionality in coppelia simulator (robotics simulator)\n\nDo you think once I finish this portfolio I am ready to just grind leetcode, work on improvements of the projects, and apply for jobs continually?\n\nI am about 75% of the way done with all the projects and will have them displayed on a professional-looking landing page.",
            "Hi I made a small web app and I\u2019m worried about some bot randomly yoinking up the aws bill to 20k.\n\nIt\u2019s a signal server that only interacts with users every ~7 seconds. So I\u2019m hoping ad revenue will cover the cost of the server/domain. Or just chill in the free tier for aws.\n\nIs the 10k on a static html netlify page a meme? am I safe to just deploy and not worry about it?",
            "Hey, I am currently learning JS through the Odin project and I have just learned Webpack and dynamic content creation. I have created some websites on wordpress but I don't know PHP and thus used plugins like Elementor.  \nNow, I just got a microsite project for a reward-based loyalty program. It's simple: they want me to update the monthly rewards, and the users should be able to redeem them. There should be a redemption history and a way to change passwords, etc. The rewards will be mostly digital for which I am thinking figuring out to use voucher APIs.  \nHere is my question, should I go with WordPress or should i custom code this website? I have less experience in custom code but with GPT and Google, I think I will be able to do it considering I will hire a freelancer for backend configuration. On the other hand, Are there any plugins that will make the job more easier?\n\nPlease share your reviews but I actually want to hear from those who hae created similar projects before. Thanks for your time.",
            "Hey everyone,\n\nI'm starting an e-commerce site in Dubai focused on women's products. It's my first time building a website, and I'm looking to make this a long-term brand.\n\nI'm torn between using WordPress (with WooCommerce) and Shopify. Both plans cost about the same, with Shopify being just $1 more. The WordPress e-commerce plan I'm looking at is one of the highest available and offers soooo many more features compared to Shopify's most basic plan. Yet, I see a lot of people still prefer Shopify.\n\nAny advice on why this might be and which platform might be better for a beginner aiming for long-term growth? Thanks!",
            "\"Best\" stack for building simple crud app for someone with old php/js skills?  \n\nI got the itch to build something... I use to write code daily - but that was yeaars ago - pre ruby days. Last app I built was php/vanillaJS/mysql. I have a couple weekend project ideas that i'd like to build out and looking for recommendation on a modern stack. My preference would be for easy to pick vs cutting edge/superstrict.",
            "The senior devs of this sub. How do you view the platform dev career path (salesforce, servicenow, sap etc)\n\nI know folks working as platform devs on these tools, earning tons of money, calling themselves the developers of new era and yet all they do is configurations, drag drop and minimal scripting. I work as a servicenow consultant(non coding). I want to learn how to code and someone suggested me to learn servicenow development. I honestly don't like the tool. But money is ridiculous.",
            "How much do I need to know before bringing the front and backend together?\n\nI mean, I learned the basics of Python in the winter. Then, I followed the \"foundations\" on The Odin Project learning about HTML,CSS, and JS. \n\nI want to build a  web app that runs code off of the console.\n\nThe Odin Project provides so much for front-end.  Having a user input data and have it interact with the back end is what really gets me going. I snuck to the end of The Odin Project to look at Node.JS and its API calls and stuff I was like WTF?\n\nAm I way over my head? Do I still have a lot of learning to do? Where should I head next? \n\nShould I dig deeper into Node.JS or shake the rust off of my Python?\n\n:)",
            "What zip drive should I use to run Ubuntu? The Odin Project says I need Ubuntu and I want to install it on a zip drive, but am paranoid about overheating it. Posted about it on the sub and not sure if it got removed or not",
            "Hello everyone!\n\nSo I've been doing the Odin project for a few months to learn web development and currently I am about to complete the Intermediate HTML and CSS section, however my friends who have mostly followed video lectures and learning off of projects are already at React. I am sorry if this question is stupid but I feel like the Odin project is moving too slow, I am having to read multiple articles about something like tables in HTML that could have been done much quicker. I really need to keep up if I wanna build with them.\n\nHas anyone else found it slow or is it me who's the slow one?",
            "hi there! i've always worked with languages like python/java/C to do stuff that wasn't web dev (did research stuff, data and AI stuff mostly). i'm now looking to learn web dev, but want to learn by doing the tech stack that is the most relevant. i see JS thrown around a lot but i'm not sure if i should go the traditional html-css-js route, or learn a framework directly? could someone direct me to a good resource? i'm a visual learner so courses would be better, but any suggestions are welcome. for context: im a y2 cs undergrad.",
            "# People who have taken time off to upskill via online course or who currently does learning full time using materials online, how did you schedule your learning sessions in a day?",
            "TL.DR.: Is there a roadmap out there with a format of \"you can learn this from all these recommended resources, pick, follow and learn these basic points, and demonstrate it by building something from this list\"? I am lost on what I truly have learned, and on what I should actually be learning to do from each of the categories that a webdev needs (learn react, which is not descriptive vs learn to do \"x, y and z, using a framework like react\").\n\n\nHello! I have been trying to learn web dev for few years on and off and honestly? I still suffer from the same problem that I had at the beginning: There are too many resources, both free and paid, and not a clear line on when I should stop learning 'X' because I know enough of the basics to learn the rest as I need, so I should get started with 'Y'. I now have a hodgepodge of knowledge, without knowing how far I am in each category, nor knowing if I actually know what I should, and where I should focus on. Is there a roadmap out there where it is laid out similarly to something like this?\n\n - HTML\n    - You should know the semantics\n    - You should be able to do make a layout and a from with such and such requirements\n - CSS\n    - You should know these basic properties\n    - You should be able to position things in a webpage reasonably well\n    - You should understand Flex and Grid\n (...)\n\nIdeally with a \"you can learn this from all these recommended resources, pick, follow and learn the bullet points of the minimum required, and you can demonstrate it by building something from this list\" so that there are actionable points to prove that I am not delusional thinking I know when in reality I do not.\n\nThis came as a realization where I was trying to learn React with , wasn't able to make a web layout for dear life, even though I supposedly knew HTML and CSS from courses done before. Tried yet another resource to learn, freeCodeCamp responsive design, and now I can confidently demonstrate that I understand the basics on how to do things to be able to accomplish the tasks I will need to. And it has made me reconsider everything I currently know and my current way of studying. I am using every minute off work I can to learn for obvious reasons, and understanding that I may have wasted time and effort has been extremely demoralizing to be honest. Especially when I've been cutting short most of my fun time.",
            "# Does lack of projects lead to CV rejection, even tho I have 20 months of professional experience?\n\nHello there,\n\nI have one semester left to finish my university engineering degree in Computer Science. I have a total of 20 months of work experience. I was once a tester, but after eight months, I realized it wasn't for me and left. I wanted to learn about hardware during a 3-month internship, which I managed to secure.\n\nThe same company that hired me in the IT department decided I would be a great fit to bridge the tech/programming world and business approach. They saw potential in the way I learn and ask questions. Thus, they tasked me with seeking improvements within the company that I could implement myself using programming tools.\n\nUnfortunately, my main tool is either no-code or, let's say, low-code, such as Microsoft Power Platform. Of course, I don't blame them for not letting a junior work on his own projects. For them, it's more efficient to rapidly create small apps using no-code or low-code tools from Microsoft, as our company relies on Microsoft products. However, I don't feel very fulfilled in this field. While it has helped me understand the importance of business, I would prefer to code more extensively.\n\nI am currently working on a Django project for my engineering degree, and I am having a lot of fun with it. It makes me feel like this is the right path for me to follow. However, I have sent out many CVs (about 60) and have only received rejections. Even tho I had work experience, and each of my position had coding / programming in it. And I'm applying only to junior/intern positions.\n\nI don't have a GitHub repository, as most of my projects involve sensitive data and are heavily reliant on automation and data transfer under specific conditions, so there isn't much to show. My university projects are not web apps. It wouldn't make sense to put a microshell project done in C, or a command-line program for movie rentals in Java, on my GitHub. It also doesn't seem worthwhile to showcase AI projects.\n\nThat's why I want to create projects, but I quickly lose interest when I don't have client interaction or the opportunity to seek business optimizations. However, I would like to create something meaningful for free, which I could then add to my GitHub repository, so recruiters in the future can see my work. I understand some people say this undermines the market, but for me, it's crucial to create something impactful.\n\nWe can discuss whether my actions are detrimental to the market. If they are, should I then devote the same amount of time to building something just for me, that noone could see? Another version of app that's already exisitng somewhere, but it's nothing new? I'm a creative person, but I lack a lot in finding nische on a market, and I want to focus on getting coding experience, not creating my own business (for now!).  \nI would also be very grateful for any contacts you might have with a friend or someone who needs a web application. Or any webpage, different than Upwork (I tried to make cost equal to 0, but for principals it looks like a bot wanting to do some harm, as noone replied).\n\nI hope it doesn't break the rule of No self-promotion.",
            "Hey , i've built a wix site. I don't like how expensive it is and i'm willing to climb a learning curve. I'm noticing most jobs are looking for wordpress experience is that the standard these days? I was going to build my new site with dreamweaver because i could just pirate it and not pay a stupid SASS fee. \n\nWhat say you?",
            "# What are the best recruiting companies/ways to find a new job for remote work?\n\nSo far I've worked with CyberCoders before, and they're okay/decent people, but haven't been very helpful helping me find a new position unfortunately.\n\nOther than that I just use LinkedIn, and lately Indeed to find jobs, but haven't had much luck with either of those lately.\n\nFor the record, I don't just only use \"Easy Apply\" - I go through the work of filling out applications too, but just haven't heard back from anyone lately. It seemed about 1.5 years ago, it was pretty easy to find a new position, and lately it hasn't been. Maybe the market has changed? Or maybe I'm not using the \"latest and greatest\" methods to find new jobs?\n\nAnyways, curious if anyone has had any luck with recruiting agencies (and if so, which ones), or if there's other resources I should know about other LinkedIn and Indeed.\n\nThanks in Advance!",
            "6YOE Full Stack Developer.  Does anyone know of any companies that hire American web developers in Asian/European countries? Wife and I would like a change and assistance with relocation would be awesome.",
            "How to find companies to build websites for?\n\nI'm trying to bolster my portfolio, and I'd like to create a few free simple websites for small businesses, preferably local. But I'm not even sure how to start that.\n\nWhere would I go about contacting small businesses to see if they are interested in a free website? Should I just call them up? Post on Facebook? I don't want it to seem like I'm a spam bot or scam caller.",
            "I made a monorepo template to deploy static websites alongside job applciations. It uses Astro and CloudFlare Pages. If that sounds useful, please give it a look at\u00a0[https://github.com/johnmcguin/unicorn](https://github.com/johnmcguin/unicorn)",
            "Hello, I've been struggling to land a job as Web Developer. Do you have any advice? I've been following some advices that I've read here. They said that you just need to build projects so that you could stand out to other candidates. I've been building mine but due to my lack of work experience and also the job market is so tough that every job opening has a lot of candidates, my resume is being filtered out immediately. I have no chance to prove that I could really do front end.\n\nMy current tech stack is Next.js, React.js, TailwindCSS, Prisma/Drizzle, Javascript, Typescript.\n\nCould you tell me if my projects is not that impressive and what are the things I need to do to land a job as a Front End Developer. Listed below are my projects:\n\n[https://servizen.vercel.app/](https://servizen.vercel.app/) - SaaS Landing Page\n\n[https://jappy-six.vercel.app/](https://jappy-six.vercel.app/) - Job Finding Platform\n\n[https://aymlive.vercel.app/](https://aymlive.vercel.app/) - Full Stack (Twitch Clone)\n\n[https://htmool-chi.vercel.app/](https://htmool-chi.vercel.app/) - Tenant Management System - Only viewable on Desktop (It is a project for a client but he decided not to move on)\n\nI can't seem to share a link here, it's being automatically removed. If you are interested to see it, please let me know.\n\nAny advice is appreciated, if you are interested to talk more about my skills I'm open to it.\n\nThank you so much!",
            "Mid-senior dev - but only in my niche.\n\nAs per the title I moved up to senior lead in my company given my years of dedication hard work and domain knowledge. \n\nWhen looking for external work my skills don\u2019t match the current job market so well. \n\nI\u2019m quite scared about applying as a senior to tech stacks I\u2019m not as familiar with but also don\u2019t want to take a huge pay cut. \nFurthermore my contract wouldn\u2019t want me going to a competitor with similar requirements. \n\nAny advice on what to do in this scenario?",
            "Hi everyone,  \n\nI'm looking for some advice on the best path forward for building an app that caters to the ENM (Ethical Non-Monogamy) community, where I know there is significant demand. My background is in data science and engineering, but I\u2019ve been eager to learn web development for a while now. Over the past month, I've been diving into React and React Native to start building this app.  \n\n### The Project\nThe core functionality for the initial version is an event listings app. Currently, hosts for these events are spread across various platforms, with no centralization for people looking to find them all in one place. While most event information is publicly available, knowing where to find it is not obvious and mostly shared through word of mouth. My plan is to use web scraping to gather relevant data from various sites, focusing on one metro area at a time.  \n\nSo far, I\u2019ve developed a basic interface in React Native that displays events in a FlatList and shows more details in a modal when a user taps on an event. Users will be able to select their metro area, view upcoming events, and click on links to other existing sites to purchase tickets.  \n\n### The Dilemma  \nI\u2019m trying to decide whether to continue down the React/React Native path or switch to a simpler solution like WordPress for the MVP. My main concerns are:  \n\n- **Learning Curve**: While I'm keen to learn web development, handling both front-end and back-end development on my own feels overwhelming.\n- **Functionality**: I need to ensure the MVP can handle event listings, user interaction, and data scraping effectively. For web scraping, I figure I can build a job easily enough and execute on a schedule with AWS Lambda or something. Haven\u2019t yet researched how this would connect to a WordPress database, if that\u2019s even a thing.  \n- **Scalability**: Eventually, I want to expand the app into a centralized ticketing service and matching platform, with hosts creating events directly on the platform. I also have ideas to leverage web3 technology for additional community benefits.  \n\n### Current Progress\n\n- **Backend**: Comfortable with web scraping in Python and saving relevant data to a database. And backend logic with Node and SQL is pretty intuitive for me.  \n- **Frontend**: Basic interface in React Native, displaying events and details.  \n- **Styling**: Logo, fonts, and color palette are already in place.  \n- **Prototype Demo**: Currently building and testing on iOS and Android.  \n\n### Questions\n1. Should I continue with React/React Native for the MVP or consider using WordPress?\n2. How feasible is it to build the initial version on WordPress, considering short- to mid-term future scalability?\n3. Any general guidance or resources that could help streamline this process?  \n\n### Collaboration\nIf anyone with experience in web development is interested in collaborating, I\u2019d love to connect! I\u2019m not just looking for someone to build my idea; I'm actively working on the full stack but would welcome help with frontend design and deployment.  \n\nHappy to share my progress on GitHub via DM. Any advice or interest in collaboration would be greatly appreciated!\n\nThanks!",
            "Hello! I'm currently applying for an internship for a student exchange program, and for it I have to take a coding exam. The content of it is undisclosed but, I can choose the language and I chose HTML. What kind of questions or prompts can I expect? Thanks in advance",
            "How to learn webdev if you already have a background in scientific programming?\n\nHi, I would like to learn web development for fun (and to build my own website/apps) and take the classic route of HTML+CSS+JS framework. However, most resources I find are either advanced web development tutorials or they start at 0 explaining loops and if statements and are generally too slow pace to be interesting to follow. \n\nAny recommendations are welcome :)",
            "It may be a stupid question, but is there a way to compress the size of some images on my site that they're not hosted on my server but on an external domain? I can't download and resize them. What would be the best way to do it? Client side or maybe with PHP?",
            "I have experience with HTML, CSS, and JavaScript (React). I'm planning to create an online curriculum website (example:[ The odin project).](https://www.theodinproject.com/paths)\n\nThis project is for fun and to practice programming. I want to easily add and edit new content, so I'm considering using a CMS.\n\nOne idea is to use markdown files for the content, which will include text, pictures, and videos.\n\nCurrently, I'm thinking of using Strapi with React. \n\nDo you have any other suggestions for creating such a website? Would it be easier to implement this with WordPress?",
            "Checkout grazily and remotejobsly",
            "Can I learn from Jonas schmedtmann html course or do I need better ways.\n\n\n\nI am having the jonas schmedtmann html and Javascript course.\n\nBut someone here on reddit said these courses are not so reliable or one should search for better ways to learn than depending on them.\n\nI need to decide if I should self study or go to some tutorial offline.",
            "Is there such a thing as a hybrid WYSIWYG website developer but also with flexibility to customize further with code? Any recommendations? Looks like there might be but I\u2019m having trouble sorting through all the options. Does something like Wordpress offer this?\n\nI\u2019m a hobbyist writer looking to create a personal site for my writing and world building. If such a thing exists, I\u2019d like something that has the development speed of drag and drop/WYSIWYG, but with flexibility to customize further with code later if I feel like it. \n\nI have hobbyist web dev experience years ago with php/mysql so learning something new including some coding is fine but like I said making something from scratch is not what I want because I primarily want to focus on the content right now.",
            "Hey everyone hopefully this is the right subreddit to ask this, but I\u2019m applying for jobs that may involve making \u201cShow Bibles\u201d - essentially big outlines for TV shows.\n\nI\u2019ve made three of them, and ideally what I want to include with my application is a link to a really simple website that would be one page only, with the 3 PDFs side by side, and the user could scroll down on each one to read them.\n\nI\u2019ve looked at templates on Wix and Squarespace but they\u2019re all much more complex that what I need. I also don\u2019t have any coding experience to make it from scratch, and no money for hosting.\n\nDoes anyone have any suggestions for the best way to pull this off?",
            "Well, told to come here by mod :). We shall see. It\u2019s a long question:\n\nI am nearing retirement but not near ready to retire. I love working, and I probably (based on family history and my health)  have another couple productive decades in me. I also need income, still have children in high school and college. \n\nI had a successful career in molecular biology, so my resume/CV reflects that long history of course. It went from research to education. The latter is not great lately for the job market. I\u2019m too far away from research to do that now. \n\nWithout going into boring detail, I decided I wanted to do something different after 2020. I have always enjoyed coding (did a lot for my research years ago) so I took a full stack development boot camp that ended a couple months ago.\n\nI LOVED it and think I did pretty well.  \n\nBut\u2026. I\u2019ve been looking and several things seem to be against me. My age. I\u2019ve been burned because of my age in a past job search not related to been web development  (one interviewer literally said they were looking for someone younger), it feels like the market is saturated with developers looking for jobs with far more experience than I (which is easy, I don\u2019t have any) and AI even seems a threat.  And I live in a remote semi-rural area and can\u2019t move (husband w/ job here and children), so any job have to be remote. \n\nFeel like I made a mistake taking the coding bootcamp. I\u2019m working on two personal projects and I find them a blast to do, but I\u2019ve also applied to over 60 temp and 30 full time jobs and nothing. Of course I see here people with far more experience than I have searching for over a year or more with nothing. \n\nNot sure it there is even anything out there or if I should just cut my losses, avoid the sunk cost fallacy and stop looking. \n\nTell me like it is.",
            "Short and sweet\n\nJust trying to teach myself some things\n\nI've downloaded a template from themeselection: [https://demos.themeselection.com/sneat-bootstrap-html-admin-template-free/html/](https://demos.themeselection.com/sneat-bootstrap-html-admin-template-free/html/)\n\nI've followed the walk through with Jetstream, Laravel, and the Sneat quick start guide\n\nI have no issues getting a generic Laravel login/user create/sign up/forgot password page going and talking to my PG database\n\nBut when it comes to copying the index.html from the Sneat master dash page I'm completely lost. The index html should go to app.blade but I quickly spin out there and hit error after error and watch the website collapse\n\nAnyone have a good video series on understanding what I need to use from the templates etc? This has taken like 4 days of my week to just see literally a dashboard pop up.\n\nI appreciate you guys",
            "When learning css, html, all this stuff\n\nDo you really need to look up browser support for each thing you're learning?\n\nI feel like there should be some kind of seal of approval, something that lets us know easily \"this is supported by 95% of all major browsers for the last 8 years\" or something.\n\nRight now, I want to for example, go learn about the css pseudo-elements. But this is just one example. It would seem incredibly annoying if I can't just go... Learn them. I need to first filter out the ones that are too new / not well supported enough to be used in production.\n\nHeck, even the book I'm reading starts with this warning:\n\n>Although any given aspect of CSS functionality may be defined in the CSS specification, that doesn\u2019t mean all browsers support it yet. We often find ourselves needing to understand which browsers support what and whether we should create a fallback or use alternative methods to achieve our goal. Caniuse (https://caniuse.com) is a great resource that allows us to check a particular property or function to see how well supported it is in browsers by version.\n\nInstead of having to check each individual thing I find, wouldn't it be better if there was simply a resource that said \"Here's the list of things that are safe to use\"?\n\nBecause right now, I might find some cool feature, forget to look up if its compatible, and oh look I wasted that time.",
            "Either someone aspiring to be a backend dev, or a frontend dev looking to go fullstack, if you had to suggest a language/framework for that person to learn to efficiently pick up backend web dev both in understanding how it works, and how to write what\u2019s needed to make it work - what would you suggest?\n\nI'm intrigued by both Python and Go as my backend first language, likely Flask for Python, and then whatever Go has to offer, and I wonder if either of those 2 are a good starting position for backend web dev? I know there's node/express, which I've tried, and didn't like much, plus I have quite a lot of mid-senior level dev friends who despise Express haha, so a little bias against it I guess.",
            "I would greatly appreciate your unfiltered feedback on my [portfolio](https://main--timmurphywebdev.netlify.app/). You won't hurt my feelings, I need to see what you see. \nhttps://main--timmurphywebdev.netlify.app/\n\nMy resume is linked in the info drawer of the landing page, and, [here](https://docs.google.com/document/d/15K8jNlhiDEw9anGdRNiWMGWhdIbsLZinUbh73TV_LD8/edit?usp=sharing).\n\nI completed an accredited online Full-Stack Software Dev course last year. I'm working through a comprehensive React course on Udemy. I work as a data integrity specialist and manual web tester for convention registration products, i.e. how you sign up + manage your registration for large events. I do not work with our company code base directly, I do however use SQL regularly. \n\nThank you. \n\nIf you are seeking feedback here as well, I'm happy to share my thoughts.",
            "Should I learn web dev or web design? \n\nSo, about a year ago, I was at home due to strike and I didn't know what to do, so I bought a design course, it's only a basic course that teaches you theoretical stuff and how to use Photsohop, Illustrator and Indesign for very basic levels. I stopped cause I lost access to the laptop I was using. But then, there was this laptop and someone had a full web development course, due to boredom, I just took it and started doing some HTML. I lost access to the laptop when I wanted to start CSS. Lol. Anyway, I have a shared laptop now, which is quite idk, but I didn't want to wait till I have mine before I continue my courses. But the thing is I'm having a hard time choosing. For one, I'm not really a creative person per say, I tend towards the analytical end, I think, but I want to be able to make really good posters and ofc, web designs. On the other hand, I know it's just the beginning, but I really enjoyed learning about HTML stuff. I've not really gotten deep into any, but I want to ask, which do I do? Should I split it? How do I know what I really want? Also, i think I would want to freelance first because I want to buy my own personal computer, anyway, I just need advice right now because I'm looking at the computer screen and I'm trying to decide if I should continue the coding course, or start a web design course on YouTube which is the niche of design I'd love to dive into. \nThank you.",
            "Definitely still relevant",
            "You definitely can. It's likely that many of the skills you had to learn or practice for that job will translate to any web dev job. And oftentimes you don't need experience with the exact skills a particular job will require- the fact that you were able to learn new technologies for the mobile dev role is something that makes you a more attractive candidate.",
            "It will tell the employer you successfully completed an internship and gained some experience working in a professional environment. \n\nBut, when you apply for development jobs you will notice they expect specific experience because you have to fit into their team.\n\nSo you have to look at job postings and see what they are looking for and learn that stuff.",
            "Keep it there until you have web dev experience and can replace it",
            "What you learn doesn't matter all that much. Most of the tools do the same thing, which is put together a database, a server, and display it in a web browser. If anything, you should learn the fundamentals. After that, it's mostly just trying out different tools and finding out what works for you to get the job done. So #1) take some CS fundamentals courses if you don't feel comfortable with computer networks, distributed systems, operating systems, DS&A. #2) Find business leads and try different tools for each one until you find the one that works for you. #3) ??? #4) Profit.",
            "Maybe look into using Obsidian, which is what I use for all of my notes. It's Markdown, so easy to use and customize, create external or internal links, etc. \n\nFor screenshots, I setup a macro (ctrl+space) to use the snipping tool to grab sections of what I want to snip, then paste into the note file - takes maybe 2-3 seconds at most.",
            "If you\u2019re still relatively young and can afford higher education. A CS degree is worth it IMO. It goes deeper into computer then just the web dev which can help you progress in your career, but a CS degree is very hard.",
            "Yes, going to school is extremely important.\n\nIt forces you to do projects and learn fundamentals which makes learning more complex stuff later easier.\n\nThe schools are in-touch with what industry standards are, and what employers expect.\n\nStuff that you would never think to self-teach.\n\nIt shows an employer that you have what it takes to learn something. It shows initiative and that you are able to follow through and be successful.\n\nEmployers need to know that they can drop you into a team and be productive and not hold everybody up or negatively impact the project.\n\nThe job market is absolutely destroyed. You are competing with college and university graduates. You are competing with people who were laid off and have more experience than you. You are competing with immigrants who live 10 to a room.\n\nAlso, if you're older understand that \\*nobody\\* hires a junior for a junior role so that's going to also make it difficult for you.\n\nAlso, how will you apply for jobs? Everybody is using AI to preview resumes now. You don't have school, haven't worked conistently, don't have the right keywords in your resume you are getting ignored.",
            "[daisyUI \u2014 Tailwind CSS Components ( version 4 update is here )](https://daisyui.com/)",
            "Be a team member and try to help other whenever asked for help. This mindset made me a lead just 2 years I started as mid in my company.",
            "Use this as a guide\n\n[https://jobsforwebdevs.com/](https://jobsforwebdevs.com/)\n\nFor professional development, focus on communication and problem solving. That means for every interview, you should have 4-5 success stories about how you solved communication problems. Make sure you have an attention to detail, and can indicate that during technical interviews (eg. address edge cases, clarify requirements). Make sure you know how to verify and validate your work (eg. software testing, product testing, verification/validation cycles, device testing). Having design skills is a huge upside. And of course keep studying the most in demand skills (JavaScript, React, AWS, .NET, etc.)",
            "If you're interested in learning React, I created a boilerplate github repo using a popular UI library/vite.  I've recently found that github has free hosting with pages which makes it easy to build a public site while playing around with it.\n\n[https://github.com/arknodel/react-antd-boilerplate](https://github.com/arknodel/react-antd-boilerplate)",
            "I crawled a bunch of web development jobs a year ago or so, here are the top tools being used in Cali\n\n[https://jobsforwebdevs.com/](https://jobsforwebdevs.com/)\n\nLanguages - JS, HTML, CSS, Java, Python, C#\n\nFE Frameworks- React, Angular, Vue\n\nBE Frameworks - .NET, Spring, Django, RoR\n\nCloud infra - AWS S3, EC2, Lambda, DynamoDB, Azure\n\nThus, my advice for experienced web devs: learn AWS serverless stack. It's hot right now and very few experienced professionals.\n\nOther paths for trendy web devs: Astro, Blazor\n\nFocus on AI/ML integrations",
            "Skip Project 4 as it has nothing to do with web development. \n\nWhen you build these projects make sure you are using github repositories for each project. \n\nYou want to show that you can work in a team or professional environment using git, commits, branches, etc.\n\nThey need to be able to see your code. \n\nYou will be judged how you host these projects. You don't want to use a free service that sleeps your application. You are expected to have experience with services like AWS, and Azure.",
            "These are all excellent projects. If done well, any of these could lead to a startup pitch. If you put your money where your mouth is, you will no problem finding a job. I'm guessing you're trying to cast a wide net by using a wide range of resources. That's great. But if this is your first job, I would focus on making one project well. You're not going to be learning AWS + Oracle + Azure at the same time. If you can actually do all of this in due time, reach out to me and I can find you a job.",
            "Nothing wrong with\u00a0php/vanillaJS/mysql today. You could have a loot at Php Laravel.\u00a0",
            "since you are already working there, you can ask your manager or developers in house directly for that",
            "If you like python then start learning django and flask first. Basically, for a basic frontend, you have learnt enough i.e. html, css and js (in js you should be familiar with dom manipulation and asynchronous js) then it's time to go with backend (in python) or continue frontend with a framework. If you like JS then learn Node.JS and Express.JS for building your own backend and API which is the same done in Django and Flask.",
            "you don't need to know anything. just find a full stack tutorial and follow it",
            "Slow and steady wins the race",
            "No question is stupid. Anyways, if you feel like the odin project is moving too slow and you want to learn quickly then I would suggest that you start with documentation w3schools for html, css and js and use [https://github.com/codecrafters-io/build-your-own-x](https://github.com/codecrafters-io/build-your-own-x) for basic web dev project based learning.",
            "Web dev has the connotation of frontend, just as Android connotates frontend. Frontend web is HTML/CSS/JavaScript. If you want to learn how to build web sites, you learn those. If you want to focus on backend and serving content to the frontend, then learn Java and then Java Spring.",
            "I take time off to avoid needing to schedule things\n\nJust find things you think are interesting and learn about them",
            "Pay $20 for a ChatGPT subscription",
            "The general rule of thumb is it takes about 6 months before a Junior Engineer stops losing the company money. This means that they really don't care about what you've done prior, they care if you smile a lot, mirror back all the buzzwords and put your butt in an office chair.  \n  \nThe truth of the matter is there just isn't enough time for a hiring manager to go look at your projects. If they're stuck between two hires, _maybe_ the github portfolio will edge you out over the person that doesn't have it. But what if that person worked in Defense or Healthcare (similarly to you) and therefore doesn't have any publicly accessible code?  \n  \nSo if you want to make some projects, make them. If you don't want to make them, don't.   \n  \nConsidering it's your Senior year and you haven't done a \"real\" internship, you're probably not trying to join Anthropic or Jane Street -- so really the best thing you can do is start making friends with people that have the job you want at the company you want.   \n  \nAnyways, if you really want to build some stuff, here's some ideas: https://austinhenley.com/blog/challengingprojects.html",
            "Found your own startup. To me it sounds like you're a smart person with entrepreneurial spirit. Those people break through the mold by doing it themself. After you have failed and realized what you need to learn, businesses will want your help. I'm guessing the main thing you need to learn is patience.",
            "you're 20 years too late for this",
            "Start with business you're more familiar with. Some small businesses love chatting with customers. Game stores come up in my mind. Go there, spend some time, get to know some people, and then talk to them about your interests and how you might collaborate.",
            "These are really good. Building projects WILL make you stand out, as long as your projects keep getting better and better. Be patient. Breaking into anything is about exploration. You want to try a lot of different things quickly. Posting here is a good start. Post on LinkedIn. Apply to jobs. Talk to your brother. Talk to your neighbor. Talk to your favorite restaurant's manager.  Build a blog site. Build a e-commerce site. Build a SaaS product. Try to found your own startup. Sound like a lot of work? Because it fucking is. And your willingness to do it will be what will make you stand out.\n\nOther things to consider: immigration status, quality of resume, education can all make or break your application",
            "Most people apply to all tech stacks, regardless of whether they're familiar with them. Some companies don't care about the tech stack but more about your fundamental understanding of the system. I would simply apply and make sure you have solid first principles, and if there's something new, just spend some time to learn it. If you like the new stack, spend some more time with it. This is a field of constant learning. It always gets harder, so you always need to stay strong.",
            "Send me a DM through Reddit or add me on Discord (username is dingo5071). I can help out. I specialize in building MVPs quickly. My focus is on standard web apps but I'm happy to try out React Native/PWAs/Swift/Kotlin. You can add data programmatically to Wordpress but this doesn't sound like the typical use case, as it will likely require custom extensions. I can help you spin up a standard web app quickly in AWS and help you connect to the database. \n\nI'm no expert in WordPress, but this sounds more like a web app with a lot of data management that might be outside the realm of a standard content management system. If you were building a basic site with just event listings, WordPress might work, but it sounds like you want to scale it into something bigger, so I would recommend a more manual approach. My recommendation would be to choose either to start with a web app or mobile app and develop natively to that platform first (eg. React for web, Swift for iOS). But that's just the frontend. Your app sounds more backend heavy given your background in data engineering. You're probably going to want to build some pipeline, so you probably want to pick an IaaS (infrastructure as a service) through AWS or GCP.",
            "HTML isn\u2019t a standard programming language so I\u2019m not sure what they would test you. If it does, then just go to w3 schools and review the html pages",
            "Download ChatGPT and ask it to guide you",
            "You can\u2019t do that only client side you need server side, there are services that will do it for you server side like cloudinary\n\nThink about it. If you need to optimize an image client side you need to download that image first. By that point you already downloaded it so any optimization doesn\u2019t matter. But you can download it server side and optimize it",
            "Sounds like a good project",
            "Open three browser windows and load each PDF",
            "Age should not be a limiter in anything you do. All you have left in life is to live and die. Why not spend it doing something you love?\n\n90 job applications is nothing. You need to remember you are in the software world. In software, everything is automated. People are sending out thousands of applications every day. \n\nEveryone wants a remote job where they can wake up at 1pm, drink some coffee, code for a few hours, and then sleep and make $100k a year. Why should someone pick you? Prove yourself. Don't give up.",
            "Its a hell of a lot of work to try and account for every single device,  OS, browser. Build for the devices your target audience is using. If it's for practice then don't sweat it, just use modern css, nothing deprecated, and you'll be fine. Pseudo elements are useful to know and widely supported",
            "You can use most experimental features and then use a CSS processor such as postCSS to transpile them",
            "Try them out, I've used Flask and Express in my portfolio projects. What do you want to build? Start there, and use this forum, or chatGPT to help identify the lightest-weight solution for your goal. There's your stack.\n\nBoth Flask/Express had adequate documentation and support from multiple sources so getting through it isn't so painful.",
            "If you're backend web focused, pick Java or C#\n\nIf you're frontend focused, pick JavaScript\n\nIf you're data/AI focused, pick Python",
            "I like it. It's a good start. Down the line, you can make it more professional. Web design has a specific flavor, and your site does not look like a website. There are a ton of portfolio designs out there that you can use. Your design makes it difficult to figure out what's going on. I can't tell how many projects you have and what they do. What you did well was having projects on there and talking about them. I would start working on more professional websites and apps. Transform toy projects into business-oriented solutions.",
            "Currently interested in doing a History Major. Webdev for me was always a hobby that I want to push a bit more seriously to help fund further education and as a possible backup path",
            "Thanks, I'll look into it.",
            "I have active github repositories for them all with over 50 commits each. I have not utilized different branches but I will make sure to use a \"working\" branch that I will merge at major changes on my final project. Project 4 is already built but I understand it is not webdev related.\n\nI already have project 1 on AWS, project 2 is already on OCI, and I will be building project 3 and putting it on Azure. I will get individual domain names for each project. I will make sure to setup SSL certificates for all of them.\n\nIt seems that the deployment skills are really docker and general linux CLI heavy which I feel very comfortable with.\n\nDo you think getting to this level of depth with the deployment will help me stand out compared to other recent grads?",
            "Thank you for this thoughtful reply!\n\nI will have the travel expenses tool finished this weekend. This is the final project I am working on.  \nNext, I will be getting all my domains and SSL certificates in order.\n\nI'll reach out to you once I have all the projects deployed and my portfolio site is up as well (Probably a few weeks).  \nI have you saved as a point of contact in my job search spreadsheet.",
            "ill check it out. years ago i used CakePHP and i rmemeber laravel being popular then too",
            "Hey, thank you so much for answer! I will take what you said deep into my mind and will try to use this approach.\n\n\nOne sentence:\n\"Considering it's your Senior year and you haven't done a \"real\" internship, you're probably not trying to join Anthropic or Jane Street\"\n\n\nNot gonna lie, I actually tried every year since my first university summer break, but each of mine application was rejected. Of course if you mean \"real\" internship as a developer / coder internship. If not - what exactly did you mean?",
            "Wow, thanks! You have no idea how my heart melted after reading this.\u00a0\nI also believe that creating a startup is something that I'd like to try. But I feel that I don't know enough yet, so I'm looking for an experience to learn with team, mostly seniors.\u00a0\nBut... you only made me more confident about trying it out! I really appreciate that :)",
            "so what ? stick with wix or learn wordpress?",
            "Thank you for your reply. I've been doing that for months now. I think because of the tough job market right now especially for juniors, you need to find a strong connection for you to be referred and land a job. I'll take note of your advice.",
            "Thanks, I'm on a similar path almost 2 years in this September. I guess I'll just keep building projects, doing meetups, and updating my LinkedIn accordingly I've seen a couple people I've met at meetups in Houston land jobs that were roughly the same skill level as op. Cant let these linkedIn in stats get us down. u/natzcunanan Projects looking good. I'll post mine when I can. or if it lets me [https://waynestack.netlify.app](https://waynestack.netlify.app)",
            "Thank you so much! Will send you a message on Discord later tonight",
            "Can I still do it server side if I don't have access to the server / FTP?",
            "That\u2019s my big issue. I don\u2019t have anything I really want to build \ud83d\ude05 I\u2019m a big sports fan but the sport apis are really janky and haven\u2019t had much luck with it.",
            "Tried c#, couldn\u2019t get into asp.net core, I\u2019ve enjoyed the limited go and flask I\u2019ve done though..",
            "Greatly appreciate your comments.\n\nI feel that by not using a component library I risked a look that wasn't familiar or professional enough. \nBefore I scrap the project section to rebuild, I may add a header to the carousel giving some context.",
            "What can you do with a history degree especially with the rising cost of higher level education? I guess being a tenured professor is a sweet deal in terms of job security if you go the academic route.",
            "What I mean is that the competition is fierce. When I said you haven't done a \"real\" internship, I meant that 8 months of your experience was as a tester, which isn't something that helps you secure a web development job.  \n  \nAs far as getting a job at something like Jane Street, networking is how you secure the interview but you still need to be able to play the game. Grind out Neetcode 150 and Blind 75 so that when you get the interview, the only thing you really need to worry about to how to ace the behavioral questions: https://www.amazon.jobs/en/landing_pages/in-person-interview",
            "Working in a team isn't that important. Leading a team is what's important. And one way to lead a team is to found a business yourself and hire people to help you. Then you'll know everything you need to know about teamwork.",
            "No",
            "If i were in your shoes, my plan B is to learn web scraping. Pull nearly any publicly accessible sports related web data you need for free. If you know python basics you can start working with beautiful soup, then a scraping framework like scrapy. Eventually add in Selenium for content requiring javascript to render content, like button clicks, expanding menus, etc.\n\nIf you dig chatGPT you can make a simple 1 page Generative AI application of some kind. It's dirt cheap for chat completions and you can sandbox It for free in their playground environment.",
            "I plan to go the academic route, but also I just have a lot of passion for the subject. At the end I'm more interested in enjoying the passion, even if the money outcome isn't as good",
            "Ah, now I see.  \nWell, I ad 8 months as a tester, 4 months as a IT helpdesk, and 12 as a business process improver, which automated department processes with... mainly no-code.  \nBut now I get your point. Thank you so much for describing it in details!",
            "I get it. Thank you!",
            "No worries, it\u2019s all good. You\u2019d probably be more happy doing that than web dev. Knowing history is important. Do what you love if you can do it and you\u2019ll never work a day in your life.",
            "If you want to be a teacher that's fine.\n\nBut, they don't make any money.",
            "I understand that. But to me life is about being happy, and that's my ultimate goal. Sure money can help with that goal, but I've spent a long time poor that making something, even if it's not 100k a year, is great"
        ]
    },
    "How many HTML input types do you use?": {
        "title": "How many HTML input types do you use?",
        "score": 509,
        "url": "https://i.redd.it/4cubete8zz7d1.jpeg",
        "content": "When you feel useless sometimes, just remember that Input has many types.",
        "num_comments": 78,
        "comments": [
            "This is a good resource, but one I recently discovered was input mode.\n\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode\n\nI had a request to have the number pad come up on mobile. Doing `inputmode=\"numeric\"` is the solution.",
            "Didn\u2019t know image, week, or month were a thing. Also I keep forgetting range is a thing, that one is so useful.",
            "I've used all but \"reset\". You learn something new every day.",
            "You forgot \"datetime-local\".",
            "i\u2019ve used all except image, that one is just wrong.",
            "I've used all of them. I'm a big fan of native elements over custom goofy fake ones (looking at you weirdo date picker libraries). Native is accessible, works on every device, and are predictable. Same with form validation. So many libraries for form validation of which 99% can be reduce to pattern validation rules or custom rules using Constraints Validation API instead of a gargantuan library.",
            "For the record, type=\"number\" sucks in many cases.\n\nSome ref: https://technology.blog.gov.uk/2020/02/24/why-the-gov-uk-design-system-team-changed-the-input-type-for-numbers/\n\nHTML isn't always great.",
            "Never used url, search, and month.",
            "There are less and less people who understand why radio buttons are called that.\n\nFor those who haven't seen them, car radios used to have mechanical buttons that you could tune to different stations. If you pushed a button in, the button that was previously pushed in would pop out, allowing you to make only one selection. The interface buttons shown only allow one selection as well.",
            "Wow, I've used almost everything there on projects; didn't know the color, range, and week selecting ones tho. All pretty interesting, nice that you shared it. When it comes to inputs I'd rather (almost always) do validation on the HTML rather than with JavaScript so it's very useful",
            "Nice post",
            "As a web developer for over 20 years, I embarrassingly have to ask, why/when would one use an `<input type=\"submit\">` instead of a `<button type=\"submit\">` ?",
            "To hell with everyone that uses reset without confirmation dialogue lol",
            "Who use `<input type=\"button\" />` instead of `<button>`?  \nWho use `<input type=\"reset\" />` instead of `<button type=\"reset\">`?  \nWho use `<input type=\"submit\" />` instead of `<button type=\"submit\">`?",
            "And is often not fully supported",
            "I struggled getting type=\"number\" to work in a form with react 19s useActionState in my nextjs app. Long live type=\"text inputType=\"numerical\"",
            "All. I've used all of them in the last year.",
            "Use the right one for the job. Don't reinvent the wheel; user expectations is more important than your flashy concept.",
            "Text: very often\n\nEmail: occasionally (generally in register forms)\n\nPassword: occasionally (generally in register forms)\n\nTel: occasionally (generally in register forms)\n\nNumber: very often\n\nSearch: never (using text for searchboxes)\n\nUrl: never\n\nFile: sometimes\n\nHidden: often\n\nButton: often\n\nReset: never (don't even know what it does)\n\nSubmit: often\n\nRadio: often\n\nCheckbox: often\n\nRange: never (doing it with js)\n\nImage: never\n\nColor: never\n\nMonth: never\n\nDate: occasionally \n\nTime: never\n\nWeek: never\n\nEdit: deleted the other comment because of formatting, didn't think it would stay as deleted lol",
            "Yes",
            "Used \"week\" for a weekly sales metric. \nWould never do this again... (Looking at you Safari)",
            "I've used all except \"reset\", using native element feels safer",
            "I just wanna say thank you for this beautiful graphic :)",
            "Except for number, I typically use them when I need to... just that it's not very often that you need a colour picker as compared to the seemingly all-around text input",
            "Muito bom, n\u00e3o conhecia o 'reset'",
            "Almost all of them in last 2 years",
            ">A hidden field let web developers include data that cannot be seen or modified by users when a form is submitted\n\nX doubt",
            "Don't use 6 of them.",
            "14",
            "Dunno, I simply use ready-made components from libraries. This low-level imperative HTML stuff is completely unnecessary. Coding should be declarative and opinionated.",
            "I've used most of them, at least the ones without any fancy UI attached to them. Also used date and range before.\n\nNot sure about color, I may have used that at some point, but if so, it was probably only once or twice.\n\nAnd I've never used time, month or week.",
            "most aside from the actually deprecated ones (submit, reset, image).",
            "Weird question. How many input types does your form REQUIRE?",
            "I\u2019ve been writing HTML since 2001 and didn\u2019t know about half of these. How long have they been widely supported? Can\u2019t check can I use right now.",
            "type=\"hidden\". Cannot be modified, yea sure",
            "My most recent project uses text, number, file, button, radio, and checkbox.",
            "Man that's a shitty color scheme",
            "No use for color yet but the rest yes.",
            "If the sane defaults were sane we would all be ..... ahhhh ha aha hah ahaha hahahhaahahhaha",
            "Technically, telephone numbers are ranges.",
            "data-type=\"phone\"  \ndata-type=\"email\"  \ndata-type=\"html\"  \ndata-type=\"gps\"  \ndata-type=\"url\"",
            "Now this is the real deal",
            "Just don\u2019t make the mistakes I once did, using numeric for a phone number starting the number with a \u201c+\u201d. I never got a response from mobile users\u2026 I wonder why.",
            "And remember that without specifying pattern it won\u2019t work on iOS",
            "PWAs are such a pain to get right",
            "I feel like image is super old school, from the <table/> layout days.",
            "They're pretty useful as they natively cover a lot of use cases  that would otherwise add a lot of complexity to datepickers (looking at you timezones).\n\nIt's a huge shame however that its impossible to style the actual calendar popup, and disabling dates is limited to a lower and upper range.",
            "I think it's mostly a holdover from the days where if you wanted basically anything beyond the basic grey button you or the designer made an image.",
            ">works on every device\n\nis this for sure? years ago i had issues with safari with one/some of these\n\nskimming their docs (not sure if this is current or not)... [https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/InputTypes.html](https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/InputTypes.html)\n\ni don't see `week` at least, but everything else is there",
            "The only one I wasn\u2019t using was reset, thought that required JS, now I know of this input type I\u2019ll use it in the future.",
            "I\u2019ve known about `pattern=` for a while, but today I learned there\u2019s a whole JS API behind it. Pretty neat! Although I\u2019m not sure I\u2019ve ever had a need for something that complicated, pattern alone works fine so far.\u00a0",
            "Native is the way, except for native select with multichoice.",
            "I agree with most points but I do not think that \"predictable\" is correct here. I think a custom component with custom html css and js is probably behaving more consistently and predictable throughout multiple devices instead of native types, which are implement by each browser/device how they see fit.",
            "That's because the examples are not really integers, they are strings. Like may have a zero in front of it, but not necessarily. It's better to use strings for such cases, like IDs of documents, social numbers etc.\n\nUpd: I guess the article in your comment explains it better: numbers which are not used in arithmetics.",
            "Think of the number type as \"amount\"\u00a0",
            "I remember getting really upset at how angular (7? 8? can't recall) wouldn't work with type number. Then I discovered the mess that it was.",
            "Yeah same.  I'm intrigued what search does different to text.\n\nLooked it up.  It's identical, but you can use the type for styling.",
            "No need to be embarrassed, it was before your time.\n\nThe `<button>` element was added in HTML4.0.  The spec was released in December 1997 and it was probably a year or two before it was considered safe to use.  Before that you had to use `<input type=\"submit\">`.\n\nI can't think of any reason why you would use it now, given that the `<button>` element is more flexible (e.g. allowing rich content).",
            "Reminder that inside of a form, the default type of `<button>` is `submit`, so it's preferred to use `<button type=\"button\">`",
            "Umm, no: HTML is the epitome of declarative - declare what you want in markup and leave the implementation/presentation to the browser. \n\nImperative is doing everything in JavaScript. \n\nCSS is also declarative",
            "And Comic Sans!",
            "I'm still very new at web dev and just finished HTML.... What does this mean specifying pattern? Where is that implemented?",
            "The thing that sucks is that datetime (which is another this didn't list) doesn't output a datetime string that is parsable by `new Date`",
            "And from before you could do `<button><img></button>`, or something good looking with CSS.",
            "\\`week\\` and \\`month\\` are not supported on FireFox or Safari due to bugs. On the web for \\`month\\` I just use a \\`select\\`. I've never needed \\`week\\` on the web. I've used both in other usages (e.g. chromium apps).",
            "In my 20 something years of using the internet I've only ever clicked the Reset button on a form by mistake. Why do they even exist?",
            "I've used custom validation for things like server side validation (e.g. valid, invalid, already used invite code), but yeah generally pattern covers 99% cases.",
            "Zip codes. Nightmarish stuff.",
            "Better safe than sorry `<button type=\"button\" id=\"button\" class=\"button\" role=\"button\" aria-role=\"button\" alt=\"button\" title=\"yup, this is a button\">`",
            "It\u2019s input\u2019s attribute.\n\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#pattern",
            "`input.valueAsDate`",
            "ok thats what i thought, that all these aren't 100% supported by everyone yet. esp the useful one, month",
            "I've used week frequently for things like weekly reporting, but not like this. Usually it's a select with options for 'this week', 'last week', 'two weeks ago`, etc",
            "Also on Firefox, the number field doesn't actually restrict you from typing anything at all so it might as well just be a text field.",
            "there's also just like almost no cases where you even need to select just a month.",
            "I imagine there must be a reason",
            "Why? People in the 90s might have thought it makes sense, but it really doesn't. Why would you spend time filling out a form, and then decide to discard everything you typed in? The reset input type has no confirmation, undo is at the browser's mercy."
        ]
    },
    "the most epic data fetch debug of all time \ud83c\udfc6": {
        "title": "the most epic data fetch debug of all time \ud83c\udfc6",
        "score": 386,
        "url": "https://i.redd.it/jey5u5v2vy7d1.jpeg",
        "content": "",
        "num_comments": 20,
        "comments": [
            "The real programming",
            "That's nothing. I had to port-forward a kubernetes pod today.",
            "Looking forward to see the solution on StackOverflow.",
            "Yeah? Well I plugged a USB on the first try once!",
            "Is the full synopsis available anywhere? I would fucking love to read all about this",
            "Crazy that after all this time it is not even 1 light-day away from Earth",
            "I'm guessing that project manager didn't go with cheap and quick way...",
            "And people who post here struggle with what a 400 status code means.",
            "I've been writing software for like 20 years and I'm not even 100% confident I could center a div in a system I personally wrote > 3 years ago, the first time, without fail\n\nYoloing bugfixes written in sandskrit (or whatever) to prod on a fuckin space box 15B miles away is just bananas\n\nImagine being the asshole who accidentally breaks this thing with a missing semicolon",
            "guys, we clesrly have a winner here.",
            "You won't see it there. Question would be down voted to hell and closed for some obscure reason.",
            "USB-C doesn't count.",
            "No you didn't.",
            "Unfortunately all we have is this screenshot. A search engine could never locate an article posted on CNN.",
            "https://science.nasa.gov/missions/voyager-program/voyager-1/voyager-1-returning-science-data-from-all-four-instruments/",
            "it was just an axios bug",
            "i am very smart",
            "Thats second paragragh... r/brandnewsentence",
            "Commit message was still just 'bugfix' though.",
            "as a duplicate of something that happened to Facebook in 2008"
        ]
    },
    "What are some CSS go-to\u2019s you use all the time. ": {
        "title": "What are some CSS go-to\u2019s you use all the time. ",
        "score": 56,
        "url": "https://www.reddit.com/r/webdev/comments/1dln6at/what_are_some_css_gotos_you_use_all_the_time/",
        "content": "I really like programming because there are patterns that come up again and again. Once I use one of these patterns on a to solve several problems I feel like that pattern becomes a part of my \u201ctool belt.\u201d This is at least how things go when I use languages like python and JavaScript. \nI struggle a lot with css because I don\u2019t really notice patterns that I can use all the time. There are so many choices and none of them really stick out to me as something I can use again and again. When I look up \u201chow to do x with css\u201d it feels like the answer I get doesn\u2019t really mesh with all of the other styles on my webpage and now I have to get them to work together. \n\nTL/DR: CSS is hard and I\u2019m really just looking for any tricks to wrap my head around how people use it every day. ",
        "num_comments": 45,
        "comments": [
            "display: flex;\n\njustify-content: center;\n\nalign-items: center;\n\n\nI probably use this more than I should.",
            "li:not(:last-child) { border-bottom: 1px solid lightgrey; }",
            ":root {}, var, calc \n\nThese are game changers for me.",
            "When you have to absolutely position something but keep it fixed in one spot in the section, this is what I do. \n\nLeft: 50% and Margin left negative or positive however much I need to move it off the center line. \n\nIn the design I will measure how far away from the center line of the design that the left edge of my graphic is. Maybe it\u2019s 200px LEFT of the center line. So left: 50% will place the left edge of my graphic at the 50% center line of the parent container. It will always be positioned there no matter how wide the container gets. Its left edge will always be at the center line if the parent. Now I use margin to push it off that center line. Positive margin left will move it to the right and negative will pull it to the left. So if it\u2019s 200px left of the center line, I do margin-left: 200px to push it 200px off the center line to the right of it. \n\nI use this all the time to absolutely place elements in a section and not have them tied to a right or left edge of a parent. Because when that parent gets wider, they go more and more left. I don\u2019t want that. I want it to stay in its position in the design regardless of how wide its container parent gets. \n\nTrick number 2:\n\nFont size scaling. Let say you have an image group of like 4 images and they\u2019re overlapping each other. How do you make this responsive? \n\nYou first measure out the box that they occupy in the design. Find the top most image and left most and right most and bottom most. Their edges will make the main \u201cbox\u201d they live in. So I add a Div with 4 images inside of it. If that box they make is 400x600px, I make a Div that is 400/16em wide and 600/16em tall. Or 25em wide and 37.5em tall. Why Ems? We will find out later! \n\nSo now we have our box set. Add position relative to it and z index 1. Inside of it you have the images all absolutely positioned inside that box. Add their height and widths in em. Same as their top and left and right values. All in Ems. So the top most one is top:0 and maybe it\u2019s 16/16em (1em) off the left edge of the box. So left: 1em. The right most image is right: 0 and maybe it\u2019s off the top by 32/16em (2em) etc. you see what\u2019s going on. We\u2019re absolutely positioning each image relative to the parent \u201cbox\u201d they live in. Once you\u2019re done with that you set your screen size to 360px for mobile. \n\nOn the parent box, set the font size to min(1.4vw, 1rem);\n\nWhat this does is sets the font size of the parent to the vw value. So the wider the screen gets the larger the font size gets. And stops when the font sizes equals 1rem (16px) which is tied to the root element (html tag) default font size (which is 16px).\n\nThis scales the ems inside of the box. All of them use Ems. Which pull their ratio value for em from the font size of their parent. So if your parents font size is tied to vw, so are the children that use Ems for their values. So as the view width gets wider, the font size of the parent box gets wider and the children scale proportionally with the vw. You need to play with the vw value till your box fits within the container on mobile. Sometimes it\u2019s 1.4vw, or 2.2vw. Whatever you need to shrink it so it fits nicely on screen within the container. The smaller the vw unit you use the smaller the box and its children will be. This is how you effectively use font size scaling. We create a group of images that we build once and in one size, and scale them down proportionally so they fit on mobile and grow with the screen until it reaches its final form. I use this ALL the time. \n\nI use it for the image groups on this site I made \n\nhttps://makopoolrestorations.com\n\nSet the screen size to 360 px and watch those image groups grow proportionally as you drag the screen size wider. It\u2019s literal responsive magic. And it rapidly speeds up your development since you\u2019re building it once and scaling it down. \n\nThe other thing I do for trick number 3 is images. I wrap all my images in a picture element and have source tags to load mobile sides images on small screen sizes and the desktop image on larger screens. I set the width and height manually on the picture elements, then absolutely position the images Inside of the picture element, height and width 100%, top and left 0, object-fit: cover. What this does is makes the image \u201ccover\u201d the entire parents dimensions and scales the image up to fit it automatically. When  I do this, that means I can swap out the images anytime I want and not have to worry about them being the same width and height of the one they\u2019re replacing. It will automatically scale up to \u201ccover\u201d its parent and be centered inside of it. Now I can swap images without worrying about different sized images breaking the design because they had a different height and width than the original. You can also see this done on the mako site I linked. All my images are done that way. \n\nI also do that for my background images for sections. Because now I can add the lazy loading tag to the img tag and lazy load my background images and serve mobile sized images on mobile. Boosting my load times and performance. \n\nThese are the three biggest css hacks I use to build my websites. \n\nThe also did the left 50% margin left trick on that shark graphic in the mako site near the hero section. Expect I did right: 50% and margin right. That site utilizes all three css tricks I mentioned. Perfect example to showcase what I\u2019m talking about. \n\nEnjoy!",
            "* {\noutline: 1px solid red !important;\n}\n\n\nThis will help if you're not sure what is causing layout issues.",
            "I wish I had known this one earlier. To get an element to take up \u201call remaining space,\u201d the parent should be\n\n```css\n.parent {\n\u00a0 display: flex;\n\u00a0 flex-direction: column; /* when you want a column instead of row*/\n}\n```\n\nAnd the child should be:\n\n```css\n.child {\n\u00a0 flex-grow: 1;\n}\n```",
            "If you find yourself battling with values of `z-index`, it's time to start learning about `isolation: isolate`. It's more than this; but you can start out thinking of it as a way to reset the z-index counter back to 0 for the element you use it on and it's subtree.\n\nIf you find yourself constantly tweaking values for `margin` and `padding`, it's time to look at a concept called \"Modular Scale\" and/or the 4px/8px grid system.\n\nIf you struggle with layout, try designing your components in such a way that they don't specify their own layout and instead leave that responsibility up to the container element you put them in.",
            "display:flex\n\nTbh I\u2019m tempted to write it in * every time",
            "Flex flex-col items-center justify-center gap-6",
            "Div {\nBorder: 1pm solid red;\nPadding: 5px;\n}",
            "position: absolute;\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\nobject-fit: cover;",
            "vw and vh especially when combined with calc",
            "display: flex; flex-wrap: wrap; justify-content: flex-start; align-items: flex-start;",
            "`margin:auto`\n\nI don't know why everyone doing `margin:0 auto`, I did it for long time\u2026 until I realized `margin:auto` is exactly the same thing. It is because auto wont center vertically (as to why it was done that way, I have no idea)",
            "Get familiar with a framework that you can compose yourself, like bootstrap or tailwinds etc. Predefined columns/grid are an invaluable tool for a fed. Brush up on :pseudo classes - they\u2019re real effort savers. Lastly, when you use transform: all 0.3s ease; , remember to put it after all your other properties so that the hover state will use it aswell.",
            "!important",
            "This",
            "You mean templates?",
            "Tldr css is easy learn the fundamentals, it\u2019s not html where you can get away with a div soup",
            "```\ndisplay: grid;\nplace-items: center;\n```\n\nIs another good one",
            "And on its children: { flex: 1 1 auto; }.",
            "lol exactly",
            "is there a shorter way to do this? I use this one allll the time",
            "This is the way!!!",
            "Yeah I was also thinking about centring stuff\ud83d\ude36\u200d\ud83c\udf2b\ufe0f",
            "Amen to that, brother.",
            "Yep lol same here",
            "I use it so much in React that I built a component called \u2018Flex\u2019 which takes justify/align/direction as props. If I just want the content centered though I just have to pass the \u2018center\u2019 Boolean prop and it does it all.",
            "I prefer li + li { border-top: 1px solid grey; }  as a pattern for this, but they're both equivalent",
            "Why not use left: calc(50% +- 200px);?",
            "I love the mobile nav water effect!!",
            "Do you only use the vw trick on those image layouts? I read some tricks to use it for a more \u201cpixel perfect\u201d design at any screen size but it doesn\u2019t seem the best for accessibility. The zoom does not seem to work that great in browser. Any thoughts on that?",
            "This made my text wrap at weird amounts",
            "What? Those are completely different.",
            "You can use it vertically if the parent div is set to display:flex",
            "`margin: 0 auto` is saying `0` margin-top/bottom, and `auto` margin-left/right. `margin: auto` and `margin: 0 auto` are 2 different things like the other commentor suggested",
            "yesterday i spent 30 minutes alternating between justify-items and justify-content only to see this and realize i neeeded to use place-items",
            "Put it in a class and apply that?",
            "create a SCSS mixin or function, based on parameters for flex: row/column, justify-content, align-items, and lastly wrap/nowrap",
            "display: grid;\nplace-items: center;\n\nOr like the other person said, make a class.",
            "The first one is easier to understand though IMHO",
            "Place items is an alias for justify-content and align-items",
            "WHY SO MANY DIFFERENT DISCONNECTED TERMINOLOGIES?\n\nI mean, why is it justify CONTENT but align ITEMS? I'm always bamboozled by these names"
        ]
    },
    "I built a tool to design REST(ish) APIs ... but it does not use AI": {
        "title": "I built a tool to design REST(ish) APIs ... but it does not use AI",
        "score": 15,
        "url": "https://www.reddit.com/r/webdev/comments/1dlqw6k/i_built_a_tool_to_design_restish_apis_but_it_does/",
        "content": "In my day-to-day, I often run into practical problems when designing APIs.\n\n* We have many badly designed endpoints that are supported for years. Often they return inconsistantly normalized data (ex: Oh this endpoint returns a user object without its dateOfBirth?)\n* We agree what new/modified endpoints should return but somewhere in development we divert from the spec and the integration between frontend and API turns into a pain\n* Everyone comes up with custom formats when describing API endpoints in technical documents\n* ...\n\nI've been searching for a quick tool to design REST(ish) APIs, embed definitions into specs and collaborate. I imagined a tool like JsFiddle or DBFiddle but for APIs. At least for me, this tool did not exist.\n\nSo, this week I released the first (wanky) version of [https//api-fiddle.com](https://api-fiddle.com). The goal is to have something friendly enough for engineers, product managers, and designers. It's client side rendered (your data stays in browser) and completely free. Ah ... but it does not use AI :)",
        "num_comments": 2,
        "comments": [
            "Nice, great ui!",
            "Thanks for checking it out!"
        ]
    }
}