{
    "Monthly Dotfile Review Thread": {
        "title": "Monthly Dotfile Review Thread",
        "score": 30,
        "url": "https://www.reddit.com/r/neovim/comments/1csdtfx/monthly_dotfile_review_thread/",
        "content": "If you want your dotfiles reviewed, post a link to your Neovim configuration as a top comment.\n\nEveryone else can read through the configurations and comment suggestions, ask questions, compliment, etc.\n\n&#x200B;\n\nAs always, please be civil. Constructive criticism is encouraged, but insulting will not be tolerated.",
        "num_comments": 85,
        "comments": [
            "I see people posting their neovim configuration repositories and not mentioning what aspects of the configuration they expect review in. Some ask generic questions like \"what can I do better\" and some don't ask anything. Without knowing what you want help in, no one can help you, and without knowing what your preferences are and how you are as a person, no one can answer generic questions like what can I do better. So this is a request to everyone for being specific in what they want reviewed in their configuration.",
            "My first share [https://github.com/jjaimealeman/nvim](https://github.com/jjaimealeman/nvim)\n\nIn the past have used Lunar, Astro, Lazy and so many others. They all gave me ideas on HOW I wanted it to function and look.\n\nThe Lazyvim starter by Folke is where I drew the most inspiration from. I started with Kickstart and drew inspiration from Josean Martinez.\n\nThis is also my first time setting up all my own keymaps, filling out whichkey labels, and I think I got a MUCH better understanding of how buffers, windows, and tabs work. If yall go digging through my keymaps, they may not make sense to you, but as it's my understanding of a personal config, well, it works for me :)\n\nANNND I dipped my toes into using tmux regularly. SUCH a better workflow!\n\n\n\nIf yall have any ideas for improvement, please let me know.",
            "[https://github.com/haunt98/dotfiles/blob/main/data/nvim/init.lua](https://github.com/haunt98/dotfiles/blob/main/data/nvim/init.lua)\n\n  \nPlease review! I just looking for some helpful guide, thank you!",
            "Here's my current setup for OSX, which I use as an ML Engineer: [https://github.com/hendrikmi/dotfiles](https://github.com/hendrikmi/dotfiles)\n\nThese are the key components:\n\n* **Editor**:\u00a0[NeoVim](https://neovim.io/). As a fallback, I have a basic standard\u00a0[Vim](https://www.vim.org/)\u00a0config that provides 80% of the functionality of my NeoVim setup without any dependencies for maximum portability and stability.\n* **Multiplexer**:\u00a0[Tmux](https://github.com/tmux/tmux/wiki)\n* **Main Terminal**:\u00a0[WezTerm](https://wezfurlong.org/wezterm/index.html)\n* **Shell Prompt**:\u00a0[Starship](https://starship.rs/)\n* **Color Theme**: All themes are based on the\u00a0[Nord color palette](https://www.nordtheme.com/docs/colors-and-palettes). Themes can be easily switched via environment variables set in\u00a0`.zshenv`.\n* **Window Management**:\u00a0[Rectangle](https://github.com/rxhanson/Rectangle)\u00a0for resizing windows, paired with\u00a0[Karabiner-Elements](https://karabiner-elements.pqrs.org/)\u00a0for switching between applications.\n* **File Manager**:\u00a0[Ranger](https://github.com/ranger/ranger)\n\nI set everything up via custom scripts (located in `/scripts`) and symlinks (explained [here](https://github.com/hendrikmi/dotfiles?tab=readme-ov-file#adding-new-dotfiles-and-software)), which has limitations. For example, I noticed that Karabiner sometimes overwrites my symlink with its config file. Are there better ways to do it?\n\nDemo image: [https://raw.githubusercontent.com/hendrikmi/dotfiles/main/img/nvim-demo.png](https://raw.githubusercontent.com/hendrikmi/dotfiles/main/img/nvim-demo.png)\n\nFeel free to roast :)",
            "This is my configuration: [https://github.com/TheMasshiro/neovim-config](https://github.com/TheMasshiro/neovim-config)\n\nSo, for background, I'm a college student who prefers Neovim because the internet said so, so I've been using it for 4-5 months now. First, I used NvChad but didn't like it due to my old laptop, and now I use Primeagen configuration and convert it to Lazy plugin manager. The experience so far is excellent, but I might be misconfiguring it. And I'm learning Lua to configure my Neovim experience.\n\nI need suggestions or recommendations, like configuration structures, because it might affect the efficiency of Neovim, especially since I'm using an old laptop (T430). Or alternative plugins, which could be better than the ones I have. And I plan to remove some plugins that I don't or don't often use.\n\n**TLDR**: I'm a college student who switched from VSCode to Neovim. I've had a great experience, but I need advice on proper configuration, especially optimizing performance on an old laptop.",
            "[https://github.com/oschrenk/dotfiles/tree/master/home/private\\_dot\\_config/nvim](https://github.com/oschrenk/dotfiles/tree/master/home/private_dot_config/nvim)\n\n\\* I need to do some spring cleaning and delete some plugins I'm not using  \n\\* still looking for a comprehensive way to install lsps\n\n\\* still looking for a better way to organize keymaps (with possibly a plugin that can give me an overview)",
            "[https://github.com/bhuvneshuchiha/.config/tree/main/nvim](https://github.com/bhuvneshuchiha/.config/tree/main/nvim)\n\nI want to see if things are well set up for java, cpp and python. Also I want the lualine to be replaced by the classic VIM bottom line where we were able to see :w, :q -INSERT-, -NORMAL-, etc. I dont like the fancy lualine.\n\nCan someone please help?\n\n  \n[https://ibb.co/KsFbxS6](https://ibb.co/KsFbxS6)\n\n  \nI dont want the blue background NORMAL sort of bottom line. I want to have the old VIM basic line.",
            "[https://github.com/jorgejhms/nvim](https://github.com/jorgejhms/nvim)\n\nFirst time sharing here. It's a mini based config (using mini.deps). I would like to receive some ideas and suggestions.\n\nComments are mostly on Spanish btw.",
            "Here is mine as it currently stands. 8 plugins, approx 750 lines (of neovim related stuff), aiming to get it down to about 600 (including a custom theme). Use it every day for work on various frontend projects.\n\n\nhttps://github.com/alunturner/.dotfiles/tree/main/nvim/.config/nvim\n\n\n\nLonger term aim is to add some ansible in there so that I have some sort of easy setup method for a new device.",
            "[https://github.com/MidHunterX/NvME](https://github.com/MidHunterX/NvME)  \nAs the name suggests, here's my Nv config made for me. Started the configuration journey by following Primeagen's Zero to LSP tutorial. Had an amazing learning experience about how IDE's work behind the scenes. Criticisms are welcome.",
            "[https://github.com/shadowburst/.dotfiles/tree/main/terminal/.config/nvim](https://github.com/shadowburst/.dotfiles/tree/main/terminal/.config/nvim)\n\nI think my setup is relatively complete for my needs, but any plugin, organisation or configuration suggestions that can improve things are welcome",
            "[https://github.com/Landixbtw/init](https://github.com/Landixbtw/init)\n\nit works",
            "https://github.com/cksidharthan/nvim\n\nPlease review mine \ud83d\ude07. I\u2019ve started using Neovim as daily driver only recently.",
            "https://github.com/adriankarlen/nvim\n\nRecently went and made my own config instead of using a distro.\n\nI haven't been able to get Mason to auto install ensure_installed. Any insights would be great regarding this.\n\nWould love general ideas and suggestions. If anyone has gotten .net development to work reliably (on windows) with code runner and dap I would love some tips.",
            "https://github.com/jacobrreed/nvim\nLooking to make better daily.",
            "[https://github.com/asyncedd/dots.nvim/tree/rewrite](https://github.com/asyncedd/dots.nvim/tree/rewrite) i recently replaced a bunch a plugins with mini equivalents :D",
            "https://github.com/amqndin/nvim-config\nhere is mine! suggest or criticise whatever you want. built based on astronvim distro",
            "[https://github.com/toupeira/dotfiles/tree/main/vim](https://github.com/toupeira/dotfiles/tree/main/vim)\n\nThis is my Vim configuration that I've been maintaing for over a decade. I recently converted all of it to Lua and switched to lazy.nvim, and replaced a lot of plugins with new Lua-based alternatives and quite a bunch of mini plugins.\n\nI took a lot of ideas from kickstarter and LazyVim. The global configuration is in `vim/core`, plugins are in `vim/plugins`, and I have some helper functions in `vim/util`.\n\nMostly happy with it now, and also optimized the lazy-loading a bit. I'm also new to LSP and Treesitter so I'm still exploring and tweaking that part, and also looking forward to upgrading to Neovim 0.10 soon.",
            "[https://github.com/HManzano1012/nvim](https://github.com/HManzano1012/nvim)\n\n  \nI come from using nvchad and I wanted to try to make my own config.\n\nLooking for a the best way to configure a database plugin, Im trying to use dadbod or dbee but I feel that I finally got mostly what I need.",
            "[https://github.com/231tr0n/config/blob/main/nvim/init.lua](https://github.com/231tr0n/config/blob/main/nvim/init.lua)\n\nI have a single file for my neovim config making it easier to copy or curl it anywhere.\n\nPlease do review my config and let me know if you have anything you would like to suggest.\n\nI mostly use mini.nvim plugins for a lot of stuff.\n\nI am looking to reduce the number of plugins in my config if I could get stuff done natively at the same speed as a plugin.",
            "Having some trouble making [auto-sessions](https://github.com/rmagatti/auto-session) and [startup.nvim](https://github.com/startup-nvim/startup.nvim) play along.\n\nI have a [simple config](https://github.com/v4G4X/nvim_config) where both are set up independantly, there's no logic that makes them play along well.\n\nAnd as a result, I'm having problems when nvim auto-recovers an empty session(or a session with ONLY the startup page). It throws:\n\n    Error executing vim.schedule lua callback: ....local/share/nvim/lazy/startup.nvim/lua/startup/init.lua:524: Cursor position outside buffer\n    stack traceback:\n            [C]: in function 'nvim_win_set_cursor'\n            ....local/share/nvim/lazy/startup.nvim/lua/startup/init.lua:524: in function ''\n            vim/_editor.lua: in function ''\n            vim/_editor.lua: in function <vim/_editor.lua:0>\n\nAnyone else faces this? Any fixes to make it smart enough it not try to recover sessions when:\n\n1. Previous session was empty.\n2. Previous session only had the startup screen.",
            "Here is my nvim config. [https://github.com/jenkinpan/nvim](https://github.com/jenkinpan/nvim)\n\nplease give me some advices",
            "[https://github.com/BaktashGorgani/nvim-config](https://github.com/BaktashGorgani/nvim-config)\n\nMy configuration is just all over the place. Literally had been me just hacking away trying random shit and never cleaning up how the config looks....PLEASE HELP\n\nalso I love my nvim+tmux flow\n\nhttps://github.com/BaktashGorgani/profile/blob/main/fedora%2F.tmux.conf",
            "[https://github.com/MahboobMMonza/NvimConfig](https://github.com/MahboobMMonza/NvimConfig)\n\nAdvice on how to get some of the coroutines working smoothly with DAP as well as cleaner way to define the signs since what I have right now is going to be deprecated soon.",
            "Hi everyone! I've been having a blast using neovim and learning from it so far. The only issue I'm currently having is that whenever I leave insert mode to normal mode either by pressing Escape or using JK it jumps to the top of the file, which is getting annoying. Here is my [config](https://github.com/andrewgonzalez4/nvim). Any help would be greatly appreciated!",
            "https://github.com/Abazzi/nvim\n\nI use daily but If anyone can let me know if I can improve it's organization, I'm mostly using it for web development.",
            "https://github.com/phrmendes/dotfiles/tree/main/dotfiles/nvim\n\n\nI use neovim with nix/home-manager",
            "[https://github.com/Hamza-Khiar/dotfiles/tree/main/nvimConf](https://github.com/Hamza-Khiar/dotfiles/tree/main/nvimConf)\n\ni have an issue with this, it can't autocomplete, lsp & format blade php files   \n[https://imgur.com/a/8DiZS8Y](https://imgur.com/a/8DiZS8Y)",
            "[https://github.com/rubiin/init.lua](https://github.com/rubiin/init.lua)  use it daily. If any suggestions",
            "Love NeoVim so far, a lot of time spend but customization is great. How to add inlay hints released in 0.10 to TypeScript or all programming langs that support it by default, couldn't find good examples. Any other suggestions to improve config will be welcome. Thank you!\n\nhttps://preview.redd.it/is9nhqlanh4d1.jpeg?width=3837&format=pjpg&auto=webp&s=e13cdd6cb63878ed67b52630fa0126477180bc35\n\ngithub repo: [https://github.com/zayihu/dotfiles/tree/main/nvim](https://github.com/zayihu/dotfiles/tree/main/nvim)",
            "Hey folks! This are my current dotfiles: [https://github.com/johnend/dots](https://github.com/johnend/dots)\n\nI've only been using NeoVim for a little while to be honest, and not fully utilising everything as I should most likely.\n\nI was working mostly full time in VSCode, but decided to make the switch after moving to a new team at work.\n\nMy personal machine is Linux, and my work machine is OSX so trying to make something that will work effectively between both.\n\nI haven't quite figured out:\n\n* How to effectively lazy load all my plugins,\n* How to get good styled-components/emotion support (we're using emotion on the new project - VSCode does this really well but I don't want to switch back),\n* I'm pretty certain that how I'm structuring my plugins is not the best way, and\n* I'm using Kitty as my main terminal at the moment, but have dabbled with Alacritty on both OSs and iTerm2 used to be my daily driver on OSX for a long time.\n\nWould appreciate any pointers!",
            "[https://github.com/A/.dotfiles/tree/master/configs/nvim/lua](https://github.com/A/.dotfiles/tree/master/configs/nvim/lua) 10 years with vim, this is my daily coding tool, everything is working good, but I'm quite not keeping it up to date and it's slightly messy, so any suggestions what I can update are welcomed.",
            "How to disable LSP inlay hints?",
            "I recently cleaned up my init.lua down to 725 lines:\n\n[https://gitlab.com/-/snippets/3718081](https://gitlab.com/-/snippets/3718081)\n\nI want to keep it short and all in one file. Any ideas to simplify it further? Any manual configuration that could be replaced by a plugin or by a built-in feature?",
            "Hi everyone, I've been playing around with Neovim in order to make ir my to go IDE instead of PyCharm/Goland and VS Code.\n\nI know that there are a thousand configs out there but here's mine if anyone wants to take a look at it and use it :).\n\n[https://github.com/gabitoju/nvimconfig](https://github.com/gabitoju/nvimconfig)\n\nRegards",
            "Hey yall, have a go at mine too. Thanks in advance :)   \n[https://github.com/jk-tripathy/dotfiles/tree/master/nvim/.config/nvim](https://github.com/jk-tripathy/dotfiles/tree/master/nvim/.config/nvim)",
            "Hi yall, I'm very new to nvim and transitioning from vscode. I'm on arm mac, brew installed nvim, then forked the kickstart and used that to set up my config, but something seems off as the colorscheme and syntax highlighting are nothing like the examples at tokyonight. any help would be amazing, I wanna work in nvim, but its driving me wild everything so dark and white highlight on white text, i'm using the vanilla terminal app on mac:  \n[brevd/kickstart.nvim: A launch point for your personal nvim configuration (github.com)](https://github.com/brevd/kickstart.nvim)\n\nhttps://preview.redd.it/nfolxguzzx6d1.png?width=3016&format=png&auto=webp&s=d89fc09a4e9db82f3ef76bc591fdf0f97850cc4f",
            "[https://github.com/Harish-Rusum/NeovimDotfiles](https://github.com/Harish-Rusum/NeovimDotfiles)\u00a0:)\n\nany feedback is appreciated",
            "I have left vs code 3 months ago and went almost fully neovim (minus debugging): here is \"mine\" (pieces of copy pasting):\u00a0https://github.com/Proteusiq/dotfiles/tree/main/nvim/.config/nvim/nvim",
            "[https://github.com/u3ih/toof.nvim](https://github.com/u3ih/toof.nvim) im stuck with nvim-dap cant use with ts, any suggestions for me",
            "My Nix HomeManager Config that uses the new lz.n lazy loading mechanism :)\n\n[https://github.com/jla2000/nixos-flake/tree/master/modules/shell/neovim](https://github.com/jla2000/nixos-flake/tree/master/modules/shell/neovim)",
            "Always keen to get suggestions on how to improve mine:\n\n[https://github.com/gonstoll/dotfiles/tree/master/nvim/.config/nvim](https://github.com/gonstoll/dotfiles/tree/master/nvim/.config/nvim)",
            "my neovim dotfile!  \n[www.github.com/parsifa1/nvim](http://www.github.com/parsifa1/nvim)  \nany feedback is appreciated",
            "[https://github.com/Abdulkader-Safi/MyNvim2](https://github.com/Abdulkader-Safi/MyNvim2)  \nhello everyone this is my nvim config  \nany feedback is appreciated",
            "You shouldn\u2019t have images in your repo. Extra bloat for no good reason. There\u2019s ways to make it so that GitHub hosts the photos for you.",
            "https://preview.redd.it/bxvvguqrlo0d1.png?width=936&format=png&auto=webp&s=6e1d6d02b3818ca2243379f13b184199309d0a25\n\nthis is hilarious",
            "Its really amazing if you're intentionally being able to keep your config slim. I'd still recommend breaking it into files for better organization.",
            "Hi! I think you're doing a good job. You can put all the plugin definitions in the \"plugin\" directory, and try lazy-loading more plugins that aren't important on startup.",
            "to help with performance at loading, first you can check `:Lazy profile`, and also you can make more plugins lazy. For example you don't need undotree at startup, so you can add `cmd = { \"UndotreeShow\", \"UndotreeToggle\" }` in the lazy declaration so that the plugin is only loaded when you run one of these commands.\nLazy does a similar thing with the `keys` and `events` fields.",
            "The following might help\nhttps://github.com/folke/which-key.nvim\n\nhttps://github.com/mrjones2014/legendary.nvim\n\nhttps://github.com/tris203/hawtkeys.nvim",
            "Looks great, clean setup \ud83d\udc4c\ud83c\udffb",
            "You have gitsigns in gitsigns.lua and in source-control.lua both. Also, I'm being pedantic and it really doesnt matter, but, you should not use such insert mode mappings. Especially to move around in insert mode.",
            "https://github.com/jacobrreed/nvim/blob/master/lua/plugins/mason.lua hope this helps",
            "why? if there's a solid reason I could do that too",
            "advice on what exactly?",
            "bru if this isn't clean, then what is mine ;\\~;\n\nIm not ENTIRELY sure, but I'm still pretty sure having `event = \"VeryLazy\"` at [https://github.com/BaktashGorgani/nvim-config/blob/873591eb73ad16625fc6fe10c338fd024f2d48b9/lua/baky/lazy.lua#L241](https://github.com/BaktashGorgani/nvim-config/blob/873591eb73ad16625fc6fe10c338fd024f2d48b9/lua/baky/lazy.lua#L241) means that having `keys = { ... }` will not be used ever most likely. you can probably just get rid of one of them-- `keys = { ... }` obviously being the bigger gain in cleanliness if you don't have complaints about load time right now.\n\nAlso, a file like [this plugin/after file](https://github.com/BaktashGorgani/nvim-config/blob/main/after/plugin/aerial.lua) seems like it makes more sense to be inside of a `config` function in your lazy setup-- you could still have the separate file and just merge the lazy spec and the setup file together into one that you require during your lazy setup instead perhaps?\n\nAlso, for keymaps, you can define a keymap for multiple modes by just supplying an array with all the characters you'd generally use for situations like [here](https://github.com/BaktashGorgani/nvim-config/blob/873591eb73ad16625fc6fe10c338fd024f2d48b9/lua/baky/remap.lua#L51) just to shorten things if you like.",
            "Hey! You can take a look at [my nvim setup](https://github.com/Tibor5/Dotfiles/tree/main/.config%2Fnvim) to see how to separate your config into modules. It will make it easier for you to setup each plugin's options separately.",
            "Hi! I believe that inlay hints are enabled in the lsp capabilities configuration, try searching for that.",
            "Is not it disabled by default?",
            "I\u2019m sorry, I\u2019ve just noticed I posted this question on the wrong pinned post :(",
            "I use [eagle.nvim](https://github.com/soulis-1256/eagle.nvim) to disable the virtual text lsp diagnostics and allow me to hover over the line and get a popup.  Not sure if that's what you're looking for.",
            "Is this `vim.diagnostic.config { virtual_text = false }` what you want?",
            "You can use `vim.lsp.inlay_hint.enable(false)` for that.\n\nHere's an example Lua function that you can use to toggle inlay hints on/off:\n\n              -- luacheck: ignore 111 (setting non-standard global variable)\n              _G.my_inlay_hints_toggle = function()\n                vim.lsp.inlay_hint.enable(not vim.lsp.inlay_hint.is_enabled({}))\n                if vim.lsp.inlay_hint.is_enabled({}) then\n                  vim.notify(\"Inlay hints enabled\", vim.log.levels.INFO, { title = \"Neovim\" })\n                else\n                  vim.notify(\"Inlay hints disabled\", vim.log.levels.INFO, { title = \"Neovim\" })\n                end\n              end\n              vim.api.nvim_create_user_command(\"InlayHintsToggle\", _G.my_inlay_hints_toggle, {})",
            "Also, I'm experimenting with AI plugins, currently using codecompanion, copilot.vim and cmp-ai at the same time.\n\nWhat I really want, though, is ghost text for the most likely code completion coming from an offline model running in ollama or llama.cpp.",
            "i changed terminal from std mac terminal to kitty and it is lookin pretty now",
            "Hey! I use nvim-dap with ts. Have a look around, hopefully you can find something that works for you: [https://github.com/gonstoll/dotfiles/blob/master/nvim/.config/nvim/lua/plugins/dap.lua](https://github.com/gonstoll/dotfiles/blob/master/nvim/.config/nvim/lua/plugins/dap.lua)",
            "nice!",
            "**Before Optimization:**\n\n* `screenshot-20240512-154119.png`: 842k\n* `screenshot-20240512-140911.png`: 929k\n* `screenshot-20240512-131442.png`: 500k\n\n  \n\\`for file in \\*.png; do pngquant --force --ext .png --quality=65-80 $file; done\\`  \n\n\n**After Optimization:**\n\n* `screenshot-20240512-154119.png`: 185k\n* `screenshot-20240512-140911.png`: 226k\n* `screenshot-20240512-131442.png`: 64k\n\n\n\nThe file sizes were significantly reduced from 2271k to 475k \ud83d\udc4d total size is now 80% smaller.\n\nI would opt for webp, but I don't see the point.",
            "Thanks :D I have seen it on someone dotfiles in reddit and copy it.",
            "Thank you. I will try files split up later.",
            "Thank you! I'm almost done with the configuration, and it's a rough journey but quite fun.",
            "Thank you \ud83d\ude07",
            "Thank you, those are copied from NvChad. Any reason for that sentiment, is it inherently bad or something? I must admit I rarely use them, so I haven\u2019t thought about it that much.",
            "Thank you! It helped a bunch.",
            "sorry for being late. :P there isnt much a solid reason except for that i find that mini plugins are just faster whilst being comparable in features",
            "Is it? My LSP config is older than this feature and I don\u2019t remember setting it up. I may be wrong though, will double chek",
            "You don\u2019t need them at all. You could have GitHub host it",
            "The disclaimer is that it's your setup and you can do whatever you want. The idea of insert mode mappings to move around is counter productive because you already have a normal mode to move around in. It doesn't make sense to duplicate that functionality in insert mode. I would consider moving around in insert mode as non-idiomatic for vim/neovim.",
            "okok alright.",
            "Well, forgive my ignorance/misunderstanding, but why should it matter? \ud83e\udd14 \n\nHosting so few images alongside my repo, shouldn't matter, so please enlighten me.",
            "You clone your repo on a new machine where space is limited, perhaps a remote sever and you need to remove those images. A user wants to try your config and now has needless images.\n\nIt\u2019s such an easy fix that there\u2019s no reason not to do it.",
            "\\_AH, \\*\\*now I gotcha!!\\*\\*\\_\n\nmakes perfect sense, thanks NextYam!",
            "my college uses an ssh server for students to work in. are you saying i can import everything there?",
            "Yep!"
        ]
    },
    "Weekly 101 Questions Thread": {
        "title": "Weekly 101 Questions Thread",
        "score": 8,
        "url": "https://www.reddit.com/r/neovim/comments/1dijkdc/weekly_101_questions_thread/",
        "content": "A thread to ask anything related to Neovim. No matter how small it may be.\n\nLet's help each other and be kind.",
        "num_comments": 15,
        "comments": [
            "How can I remap the new nvim 0.10 builtin gcc shortcut to a different one? In my init.lua, I've put:\n\n`vim.keymap.set('n', '<leader>cc', 'gcc', { noremap = true, silent = false })`\n\nBut this doesn't work. This is weird, because if instead of \\`'gcc'\\`, I write \\`'j'\\`, it does goes down by one line. Moreover, when I manually type gcc, comment toggle does happen. What might go wrong?",
            "Sometimes, when debugging or setting wrong options on plugins, Neovim spams a lot of errors to the point where it's even difficult to close the editor. Is there a way to stop the flow without smashing `<c-q>` (my remap)?",
            " \\*nvim\\_chan\\_send()\\* to terminal How to stop word wrapping",
            "I have an annoying \"bug\" where the command-line CMP completions are appending to the existing text, instead of replacing it.\n\nThis means that when I type something like `:e lua/plugins/` it will complete it as `:e lua/plugins/lua/plugins/lsp.lua` instead of `:e lua/plugins/lsp.lua`\n\nI'm using the command line cmp configuration like the documentation shows, so nothing fancy.\n\n      cmp.setup.cmdline(\":\", {\n        mapping = cmp.mapping.preset.cmdline(),\n        sources = cmp.config.sources({\n          { name = \"path\" },\n        }, {\n          {\n            name = \"cmdline_history\",\n            option = { treat_trailing_slash = false }\n          },\n          { name = \"cmdline\" },\n        }),\n      })\n\nAny suggestions on how to fix this or where to look?\n\nhttps://preview.redd.it/kqc375oyxc7d1.png?width=697&format=png&auto=webp&s=5338b2ab2acd9fadbbcab67f2c96f4715569598b",
            "Hi!\n\nNot really about neovim but here goes - Im having trouble debugging c++ code with nvim-dap (codelldb)\n\nMy configuration works fine atm, can step through code, set brake point's etc...\n\nThe problem is debugging GUI apps. For example, I made a simple program that opens a glfw window and loops until esc is pressed.\n\nWhen debugging, if i focus on the (glfw) widow and press esc, nothing happens when stepping through code, the event isnt polled or registered and code continues to draw and loop...\n\nHow can I achieve the desired effect - the program registering the key press and stepping into the if(keypressed) loop and terminating?\n\nI tried setting a conditional break point to trigger when glfwWindowShouldClose() would be true etc. but nothing worked.\n\nThank you for all the insight and help!",
            "Some commands can generate a lot of output (for example `:=vim.fn.getbufinfo()` when you have many buffers open). Is there an easier way to navigate through the result? The default implementation is a bit cluttered.",
            "Greetings everyone,\n\nI'm trying to create a neovim plugin that performs adapative theme switching (based on the system's color-scheme preference (\"`prefer-dark`\", \"`default`\")). I'm using dbus to listen to system color-scheme changes. My issue arises from my need of running the listener constantly, so naturally I tried to run it from within a thread (`libuv`). However, I was not able to mutate the value of `vim.o.background` from within a thread. It seems like its not exposed to threads. Is there any way I can achieve this? Is using a thread in this context inappropriate? what would be the alternative? If it is the correct approach, how can I communicate to neovim the need of changing the `vim.o.background` variable?\n\nEDIT: I know this can be done using RPC (I was doing it before as part of my config scripts), but I would like to find another solution that can be shipped as a plugin\n\nEDIT 2: I found a solution by using new\\_async (to create a callback that would change vim.o.background, but I needed to wrap using \\`vim.schedule\\_wrap\\`) then calling it from my uv thread using \\`send\\_async\\`",
            "pretty sure you need `noremap = false` because gcc's not a vim builtin keymap (i.e. it isn't directly running native compiled C source code), it's from a neovim default script (i.e. it executes interpreted vimscript/lua scripts)\n\n(also noremap = true is default for vim.keymap.set)",
            "That's because it's not exactly a builtin, but a remap:\u00a0https://github.com/gpanders/neovim/blob/7c2e52ad34a1aa035f17595b00d496ab50f67089/runtime/lua/vim/_defaults.lua#L141 You can copy the keymap and change the lhs.",
            "Set the wrap option to false. Something like `vim.opt_local.wrap = false` in the terminal.",
            "Noice.nvim can be configured to redirect such output to a popup or split, which I find very useful",
            "This didn't change anything for me.",
            "This worked, thanks!",
            "hmmm it seems to work with `remap = true` but not `noremap = false` for some reason (even though those should be basically identical settings).\n\ni'm trying with this init.lua:\n\n    local g = vim.g\n    g.mapleader = ' '\n    vim.keymap.set('n', '<leader>cc', 'gcc', { remap = true })",
            "Tbh, I would recommend to follow u/Some_Derpy_Pineapple, as I feel using the default keymap is more robust that using an internal module.\u00a0"
        ]
    },
    "How to achieve this in lualine.nvim": {
        "title": "How to achieve this in lualine.nvim",
        "score": 15,
        "url": "https://www.reddit.com/r/neovim/comments/1dlrgnd/how_to_achieve_this_in_lualinenvim/",
        "content": "https://preview.redd.it/i2ofg1ty738d1.png?width=600&format=png&auto=webp&s=1f931083127f2c2251b0cbf112860954db400ccc\n\nHow can I achieve that pink horizontal line effect at the bottom with lualine.nvim?",
        "num_comments": 12,
        "comments": [
            "Hello,\n\nYou just need to set `fillchars`:\n\n    vim.opt.fillchars = {\n        stl = \"\u2500\",\n        stlnc = \"\u2500\",\n    }\n\nTo change the highlight, you need to set the normal and inactive theme of lualine, like so:\n\n    local default_theme = { fg = \"#FF0000\", bg = \"None\" }\n    lualine.setup({\n        options = {\n            theme = {\n                normal = {\n                    c = default_theme,\n                    x = default_theme,\n                    -- ... and all the sections you use\n                },\n                inactive = {\n                     c = default_theme,\n                     x = default_theme,  \n                     -- ... and all the sections you use \n                },\n            },\n        },\n    })",
            "Please remember to update the post flair to `Need Help|Solved` when you got the answer you were looking for.\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/neovim) if you have any questions or concerns.*",
            "Do you know the width of the other components in the statusline? Or have some way to access the text they show?\n\n> Or you could make a single component that creates the entire statuscolumn(in that case you might as well stop using statusline plugins).",
            "hi OP do you know what `59` is? it isnt line number ig",
            "That's what I'm searching for! Thank you so much.",
            "I currently can't think of any way to access the width of other lualine component, but it might be possible if I build the whole statusline from scratch.",
            "I\u2019m not sure but I think it\u2019s buffer number. I saw this screenshot in the [readme of tint.nvim](https://github.com/levouh/tint.nvim)",
            "No problem ! Have fun with your config!",
            "Yeah, building it from scratch might be your only option(since you can't really dynamically get the width of the component(s) after the separator itself).\n\nYou should probably look at the functions that you use in your statuscolumn to see where they get their text from.",
            "cant be because he is opening splits containing the same number 59",
            ">he is opening splits containing the same number 59\n\nThis is actually reason why I guess it is buffer number. In Vim/Neovim a buffer can be in multiple windows.\n\nYou can learn more with `:h window`: A buffer is the in-memory text of a file. A window is a viewport on a buffer.",
            "Help pages for:\n\n* [`window`](https://neovim.io/doc/user/windows.html#window) in _windows.txt_\n\n\n---\n\n^\\`:\\(h|help\\)&nbsp;<query>\\`&nbsp;| [^(about)](https://github.com/heraldofsolace/VimHelpBot) ^(|) [^(mistake?)](https://github.com/heraldofsolace/VimHelpBot/issues/new/choose) ^(|) [^(donate)](https://liberapay.com/heraldofsolace/donate) ^(|) ^Reply&nbsp;'rescan'&nbsp;to&nbsp;check&nbsp;the&nbsp;comment&nbsp;again ^(|) ^Reply&nbsp;'stop'&nbsp;to&nbsp;stop&nbsp;getting&nbsp;replies&nbsp;to&nbsp;your&nbsp;comments"
        ]
    },
    "Finally decided to dual boot linux, now enjoying <50ms load times, down from >500ms": {
        "title": "Finally decided to dual boot linux, now enjoying <50ms load times, down from >500ms",
        "score": 273,
        "url": "https://i.redd.it/gsuu4e0o9x7d1.png",
        "content": "",
        "num_comments": 72,
        "comments": [
            "Not enough. We'll wait for \"Finally decided to single boot (Arch) Linux\". (/s)",
            "Welcome to the rabbit hole, hope u enjoy your stay.",
            "Load time is pretty much identical between WSL2 and Linux (I use both)",
            "Nice! Which OS did it start up faster on? /jk",
            "I like neovim as much as the next person here but I love how a legitimate argument for dual boot can loosely be translated as \u201cI hate having to wait 1-2 seconds every time I open neovim, so instead I dual boot and have to restart my entire machine every time I want to open a windows-specific app\u201d.",
            "My nvim config in windows 11 has same startup time, ~40ms",
            "Looking great, but sorry is this a Vim joke i am too Emacs too understand? Why do you guys care that much about startup time? And why constantly closing and opening the editor for every file you visit and having to exhaustively type file paths? \ud83d\ude02",
            "Why are so many people complaining about \u201cwhy did you bother to dual boot to shave off a few ms\u201d? OP wanted to optimize and I\u2019m sure learned some new/interesting stuff along the way. If it\u2019s not for you, fine, but don\u2019t bitch about what someone else wants to do to change their own workflow.",
            "I'll never understand you mad lads trying to shave off ms of time instead of doing something productive. 1 second startup is fine. It's like a weird competition of \"who can waste their time more\".",
            "Can I have the wallpaper?!",
            "Cmon just switch already",
            "Is lazy.nvim really good I see almost everyone use it",
            "Man can u share your config? I'm using around 147 plugins which causes it to boost to 200-1000ms of startuptime",
            "I just use wls for my personal computer. Best of both worlds If you don't want to spend more time than necessary troubleshooting.",
            "https://preview.redd.it/st2l8gqcvx7d1.png?width=1052&format=png&auto=webp&s=263b78791f0d1292d3e0d7f369d0eadb3d28b526\n\nWindows 11 (no WSL)  \n50 plugins  \nHow fast do you need your Neovim to start, mate?",
            "I had to dual boot out of necessity on my windows pc. I\u2019m pretty good at debugging/troubleshooting this kind of stuff and gave up after hours. My neovim simply crashed anytime I opened telescope. Once I got linux up I just copied my dotfiles repo over and it just worked\u2122\ufe0f. Half the time I end up just ssh\u2019ing into my vps though and doing stuff from there so I don\u2019t have to reboot.",
            "Personally, I will be OK for a 3 to 5 sec project launch time if it loads things helping me for my work!",
            "Coming from windows or wsl?",
            "theme config plsss",
            "How do you make the Lazy window transparent?",
            "wsl was fine for me but I hate docker desktop",
            "What flavour of Linux is that?",
            "I don't know why people are obsessed with load times, you cant even see the difference, you blink, you lose.",
            "No, I use arch linux *only* btw",
            "Haha I wanna do that too.\n\nWill do it once I am good enough :)",
            "That's me. Decided to switch one month ago from manjaro. Startup time dropped only by 5 ms \ud83d\ude2d",
            "Not enough. We'll wait for \"Finally decided to single boot Windows with WSL (Arch)\".\u00a0\ud83d\ude0d",
            "I'm planning to dual boot Arch Linux alongside Arch Linux btw this weekend.",
            "i have no load time issue, but Windows Terminal and alacritty messed up nvim, some lines are moved every while and that made me think of moving to dual boot.\n\nwhat terminal are you using? I have not found any terminal that works with nvim on wsl2.",
            "In my experience, accessing the Windows filesystem from within WSL is painfully slow.  Maybe OP's config was interacting with something on the Windows side.",
            "Nope.",
            "*sips wine*",
            "I personally try to keep my startup time as low as possible. Idk about other people,  but my reason for doing this is so I can work in a single shell and use the command line without neovim becoming a full blown IDE (although my config is actually set up to be able to be pretty much a full IDE bar opening shells inside neovim, which I had working at one point but it broke and I just never fixed it).\n\nYou could make the argument that I can just open two terminals and you'd be entirely correct. My only defense is that sometimes I work on remote servers and on one in particular there are multiple host servers, so if I open two ssh sessions there's no guarantee they are actually connected to the same machine. It doesn't matter anyway because most of the filesystem is in a separate unified NAS, but I like it the way it is. Furthermore, even if that's somehow a problem, I can always just suspend neovim with ctrl z and get it back with fg.\n\nI also use neovim as my man pager and to edit config files and git commits, so it's nice to have the fast startup. Ofc I do have fugitive, which means the git commit thing is a non issue and there are other solutions for the other stuff, but I haven't configured those and it just seems a little bit bloat.\n\nSo basically my reasons are non reasons except that I like it the way it is. I think for a lot of people like me, startup time matters because we see neovim as a text editor instead of an IDE, so opening and closing it frequently is a common thing unlike say emacs, visual studio or any of the jetbrains products.\n\nAlso yes, I do type file paths a lot. I mitigate it somewhat with a greeter that has an indexed file history and using keybinds like ctrl o. Tab completion in the shell and cd also help massively with this issue.",
            "I agree to an extent but for me this was:\n\n* A matter of personal satisfaction\n* I needed some linux apps like tmux anyway and wsl was too slow on my computer which has a pretty weak cpu.",
            "Set guibg of NormalFloat to none",
            "As per my knowledge it's the most modern and has the most features and the best UI. It also has the most advanced lazy loading features. So I suggest check it out.\n\nHowever, the main difference it's going to make for you will probably be in startup time, if you go big on lazy loading. If you are already happy with your startup time, there might be little reason for you to switch. When I was on windows my startup time was atrocious with Packer so I decided to switch.",
            "Yes, lazy.nvim is really good. However, when you don't use a distro, I can also recommend mini.deps. In my opinion, the advantages are:\n\n1. Small codebase, small overhead\n\n2. Builds upon neovim's native package management.\n\n3. Just as fast.",
            "It's on github at `mrquantumcodes/nvim`. I'm using just a few plugins though, all lazy loaded.",
            "\ud83e\udd22",
            "is it tho?  \nWhat advantages does windows give you over linux except gaming and adobe?",
            "I see a fellow stubborn native nvim in windows man, i upvote. We seen the depts of hell.. \n\nhttps://preview.redd.it/en5xq40r838d1.png?width=3232&format=png&auto=webp&s=06f19ebfafdea7fa07b6154cca83f792ed39374c",
            "This is unusually fast for windows though. I always got >500ms on my windows. Agreed, in my situation it was unusually slow too, but pretty much everyone in this subreddit said they had a >2x difference in startup times in windows and linux.",
            "For me not only was the startup time slow, but also plugins that are big on UI such as telescope, fzflua and most file trees, they would also take longer to pop up and work. With linux, all these plugins pop up and work instantly.",
            "If youre a software developer and already have the ability to understand/research error messages you might sometimes encounter (pretty rare at least in my case) you'd probably be fine with arch. Especially if you start with something like endeavorOs which has the defaults most arch users configure anyways and not much else on top.\n\nI think the difficulty of arch is way overblown. I kind of feel like it's the easiest distro to use for power users since you basically never have to compile anything from source or deal with different packaging formats due to the aur + the wiki is a good resource when you need help.",
            "kitty is seamless for me personally on wsl2\n\ni pretty much combined some high level concepts in both [this guide](https://github.com/danielbisar/settings/blob/main/guides/kitty-on-windows-with-wsl2.md) and [this guide](https://gist.github.com/VPraharsha03/dce1692afccdb2d220fffff3ad8448f0) to get it working. haven't tried any of the other terminal emulators though, to be fair, since i use kitty as a daily driver on macOS as well",
            "I run Neovim on WSL2 in Windows Terminal without issues. Make sure you're using [Windows Terminal Preview](https://apps.microsoft.com/detail/9n8g5rfz9xk3). The stable version is usually severely outdated and missing tons of fixes.\n\nAnother option is [WezTerm](https://wezfurlong.org/wezterm/), which is a great fit for Windows with its tabs.",
            "hold up wayment wym Windows Terminal messed up nvim, I\u2019m using WSL2 Ubuntu and have no issues with it, at least i think i dont\u2026",
            "Microsoft recommends that you don't access the Windows file system from WSL2",
            "What do you mean nope? My neovim load time is 42 ms in WSL. Are you saying that it will load significantly faster when running Linux on bare metal?",
            "Cries in rocket league",
            "\ud83c\udf31",
            "Those. \n\nAnd I would not consider them \"advantages\". But for games, even though it's now becoming possible to play lots of titles on linux, windows tends to be less of a hassle.\n\nAlso I sometimes use Photoshop to paint. So nothing I can do there.",
            "I don't regret getting rid of windows entirely except for MS Paint.\n\nIdk why, but I really miss being able to just open MS paint, it loads up fast everything works and I can use it to just draw out some thoughts. MS Paint and task manager are the two best programs on windows, and htop, kill, ps and killall pretty much do everything I could do with task manager.\n\nBut I haven't found a good substitute for MS Paint. Granted I haven't looked very hard and I could definitely just write my own as well, but its just a small QOL thing.",
            "Most GUI applications and commercial software are available for Windows and/or MacOS first, with maybe a Linux port, workaround or alternative if you\u2019re lucky. I really wish I was wrong about that because I don\u2019t like Windows and I feel like a prisoner to Apple.\n\nPlease tell me how to run all Windows and MacOS applications in Linux without serious compromises and I\u2019ll be forever happy.",
            "Application support, professional software availability, hardware compatibility, less learning curve, and widespread adoption which leads to better community support to name a few.\n\nI'm a linux fanboy but it's obvious there's advantages and disadvantages to each. \n\nI was gaming on Linux mostly fine, then I got into VR over the pandemic, and all the extra layers of abstraction made troubleshooting nearly impossible so I reluctantly switched back to Windows. Luckily WSL is goated.",
            "Honestly, 50, 100, 150 ms... It's basically the same. And when you compare it to any other ide or editor it's basically instantaneous anyway.",
            "I won't argue with you, because each config is different. I just use \"VeryLazy\" for almost everything and 15/50 plugins are loaded when they are needed (key combination, command, etc.). No other Lazy magic tricks. 50ms and I'm in a fully functional Neovim.",
            "I did actually want to install arch but the thing is, just for personal satisfaction, I didn't wanna use a distro. And I just wasn't sure if I can handle raw arch yet (I am a decently experienced programer but a linux newbie with only basic knowledge). Anyway, I've already set up everything in this os, so for the time being, I guess I'll just be staying here.",
            "some characters went off of their position, like this floating terminal border. it even worse on alacritty, every line went off.\n\nhttps://preview.redd.it/02nq1pfmu28d1.png?width=1140&format=png&auto=webp&s=33b3d7c600657b97d656841afdd6fb3c8d445e02",
            "Not sure what he's on about either. My WSL2 Neovim load times match my bare metal Arch (btw) Neovim load times almost exactly.",
            "Works fine https://www.protondb.com/app/252950",
            "If that's your only reason for using windows + wsl, then I don't find that to make a lot of sense.\n\nUnless maybe you do a lot of shorter interspersed drawing/gaming sessions all the time maybe.\nIf I felt like I needed to use windows for that stuff, then I would still prefer to dual boot and stay in Linux 90% of the time \ud83e\udd37\n\nWhat's your opinion on that?",
            "This pretty much task manager:\nhttps://github.com/lxqt/qps\n\nNot exactly the same, but maybe good enough?\nhttps://paint.js.org/",
            "Why do you need to run \"all windows and MacOS applications\"?  Even if there's not a Linux version of the exact app, there will generally be an alternative.Which apps are you missing?\n\nI feel like there's almost nothing you can do on windows but not on Linux. Gaming / Anti cheat and Adobe being the exception.",
            "Haha. I originally went toward arch for personal satisfaction but now when I have to use fedora at work and the package I want isn't packaged in the repos requiring me to go digging on the internet to install the thing I find myself irrationally angry and missing the aur. \ud83d\ude01\n\nIf you're already set up there's no sense changing if you're happy.",
            "Fun fact, on the install usb you can run \u201carchinstall\u201d and it will do most of the tedious stuff for you",
            "Feel free to experiment using a virtual machine!",
            "Last I tried the input lag was noticeable",
            "Well, I mostly use my personal computer for gaming.\n\nAfter work I don't feel like coding much, and I do use Linux for 8 hours every day.",
            "I think if wsl runs well on your device, there's a good argument not to switch to full linux, tbh. Most of the linux-exclusive apps are terminal based. And for anything you wanna do inside a gui, windows is generally a better experience.",
            "Revit comes to mind. I main ubuntu as our uni dept mandates a package repo. However, there are some minor qol hits in ubuntu. Professional apps aren't always there. Open or libre office are just meh, to the point that I found it easier to prepare lectures in markdown (via neovim ofc) vs the ppt equivalent. No onedrive integration, which sucks because I have to manually upload my stuff instead of working directly in it.",
            "Exactly. I once tried raw debian on wsl but there were just so many important packages missing which ubuntu comes bundled with that it was too annoying."
        ]
    },
    "Fzf-Lua's Grep + Fuzzy search combo is a superpower": {
        "title": "Fzf-Lua's Grep + Fuzzy search combo is a superpower",
        "score": 37,
        "url": "https://www.reddit.com/r/neovim/comments/1dlfu4o/fzfluas_grep_fuzzy_search_combo_is_a_superpower/",
        "content": "Being able to grep across an entire project is one thing, but then being able to fuzzy find over the results feels like a superpower. Fzf-Lua let's you fuzzy find the results of a grep by simply pressing ctrl-g. This is even more powerful when you consider the fact that the fuzzy search: a) includes file paths, allowing you to filter the results to a specific directory and b) lets you *exclude* some results by using the `!` opator, which also works on the file paths and can be used to prune out multiple directories.\n\nThis combo, specifically grep + fzf, and being able to seamlessly switch between them just by pressing ctrl-g, has saved me so much time and energy. Even working in a very large codebase, I can still get a list of exactly what I need in a matter of seconds, and in such a satisfying way.\n\nIt feels like an essential searching mechanism that every editor should have. I know a lot of editors have a grep search, and they usually have a fuzzy finder for file searching too, but none that I know of facilitate the combination of both. Particularly in such an elegant way, within a single, unified, easily accessible view.\n\nI really appreciate this plugin and u/iBhagwan for the great work. ",
        "num_comments": 4,
        "comments": [
            "Ty for the kinds words <3\n\nThe feature you\u2019re talking about is one of my favorites and most used, it\u2019s even turbo charged when you use `live_grep_glob` (or set `rg_glob=true`)  and then search for a regex limited to specific files, I.e `foo.*bar -- *.lua !*spec*` which means search for a line that has both foo AND bar inside lua files excluding spec files (tests), then I ctrl-g to fuzzy for the fine tuning.",
            "For me, this is also the main advantage (neo)vim has over other editors. You can just integrate and combine existing unix tools, instead of re-inventing every feature over and over again.",
            "The best plug-in ever!",
            "I used to use that grep and fuzzy workflow a lot, but after discovering telescope-egrepfy, I seldom use fuzzy search. Because when you type \u201clo e\u201d it will be turned to \u201clo.*e\u201d and hit \u201clocal some_e\u201d. This is faster and result list is far less than fuzzy search.Kinda of a fzf syntax grep, really love it."
        ]
    }
}