{
    "The State of the Subreddit (May 2024)": {
        "title": "The State of the Subreddit (May 2024)",
        "score": 569,
        "url": "https://www.reddit.com/r/programming/comments/1chs4ib/the_state_of_the_subreddit_may_2024/",
        "content": "Hello fellow programs! \n\n**tl;dr** some revisions to the rules to reduce low quality blogspam. The most notable are: banning **listicles** (\"7 cool things I copy-pasted from somebody else!\"), **extreme beginner articles** (\"how to use a for loop\"), and some **limitations on career posts** (they must be related to programming careers). Lastly, I want **feedback** on these changes and the subreddit in general and invite you to **vote** and **use the report button** when you see posts that violate the rules because they'll help us get to it faster.\n\nr/programming's mission is to **be the place with the highest quality programming content, where I can go to read something interesting and learn something new every day**. [Last time we spoke](https://www.reddit.com/r/programming/comments/173viwj/meta_the_future_of_rprogramming/) I introduced the rules that we've been moderating by to accomplish that. Subjectively, quality on the subreddit while not perfect is much improved since then. Since it's still mainly just me moderating it's hard to tell what's objectively bad vs what just annoys me personally, and to do that I've been keeping an eye on a few forms of content to see how they perform (using mostly votes and comment quantity & health).\n\nBased on that the notable changes are:\n\n* \ud83d\udeab **Listicles**. \"7 cool python functions\", \"14 ways to get promoted\". These are usually spammy content farms. If you found 15 amazing open source projects that will blow my mind, post those projects instead.\n* \ud83d\udeab **Extreme beginner content** (\"how to write a for loop\"). This is difficult to identify objectively (how can you tell it from good articles like \"how does kafka work?\" or \"getting started with linear algebra for ML\"?) so there will be some back and forth on calibrating, but there has been a swath of very low quality [\"tutorials\"](https://www.reddit.com/r/programming/comments/1chogwb/first_program_of_java/) if you can even call them that, that I very much doubt anybody is actually learning anything from and they sit at 0 points. Since \"what is a variable?\" is probably not useful to anybody already reading r/programming this is a quick painless way to boost the average quality on the subreddit.\n* \u26a0\ufe0f **Career posts must be related to software engineering careers**. To be honest I'm personally not a fan of career posts on r/programming at all (but shout out to [cscareerquestions](https://www.reddit.com/r/cscareerquestions/)!) but during the last rules revision they were doing pretty well so I know there is an audience for it that I don't want to get in the way of. Since then there has been growth in this category [all across the quality spectrum](https://www.reddit.com/domain/eng-leadership.com/) (with an accompanying rise in product management methodology like \"agile vs waterfall\", also across the quality spectrum). Going forward these posts must be distinctly related to software engineering careers rather than just generic working. This isn't a huge problem yet but I predict that it will be as the percentage of career content is growing.\n\nIn all of these cases the category is more of a tell that the quality is probably low, so exceptions will be made where that's not the case. These are difficult categories to moderate by so I'll **probably make some mistakes** on the boundaries and that's okay, let me know and we'll figure it out.\n\nSome other categories that I'm **keeping an eye on** but not ruling on today are:\n\n* **Corporate blogs** simply describing their product in the guise of \"what is an authorisation framework?\" (I'm [looking at you Auth0](https://www.reddit.com/domain/a0.to/) and [others like it](https://www.reddit.com/r/programming/comments/1cgx739/what_is_ai_infrastructure_software/)). Pretty much anything with a rocket ship emoji in it. Companies use their blogs as marketing, branding, and recruiting tools and that's okay when it's \"writing a good article will make people think of us\" but it doesn't go here if it's just a literal advert. Usually they are titled in a way that I don't spot them until somebody reports it or mentions it in the comments.\n* **Generic AI content** that [isn't](https://www.reddit.com/r/programming/comments/1chll2o/ai_still_hasnt_figured_out_branding_yet_heres_why/) technical in content. \"Does Devin mean that programming is over?\", \"Will AI put farmers out of work?\", \"Is AI art?\". For a few weeks these were the titles of about 20 articles per day, some scoring high and some low. Fashions like this come and go but I'm keeping an eye on it.\n* **Newsletters**: There are a [few people](https://www.reddit.com/r/programming/comments/1cho9ye/big_tech_digest_15_introducing_meta_llama_3_at/) that post every edition of their newsletter to reddit, where that newsletter is really just aggregating content from elsewhere. It's clear that they are trying to grow a monetised audience using reddit, but that's okay if it's providing valuable curation or if the content is good and people like it. So we'll see.\n* **Career posts**. Personally I'd like r/programming to be a deeply technical place but as mentioned there's clearly an audience for career advice. That said, the posts that are scoring the highest in this category are mostly people upvoting to agree with a statement in the title, not something that anybody is learning from. (\"Don't make your engineers context-switch.\" \"Everybody should get private offices.\" \"Micromanaging sucks.\") The ones that one could actually learn from with an instructive lean mostly don't do well; people seem to not really be interested in how to have the best 1:1s with their managers or how you went from Junior to Senior in 18 hours (though [sometimes they are](https://www.reddit.com/domain/highgrowthengineer.com/)). That tells me that there's some subtlety to why these posts are scoring well and I'm keeping an eye on the category. What I don't want is for \"vote up if you want free snacks\" to push out the good stuff or to be a farm for the other 90% of content that's really just personal brand builders.\n\nI'm sure you're as annoyed as I am about these but they're fuzzy lines and difficult to come up with objective criteria around. As always **I'm looking for feedback** on these and if I'm missing any and any other points regarding the subreddit and moderation so let me know what you think.\n\n------\n\n## The rules!\n\nWith all of that, here is the current set of the rules with the above changes included so I can link to them all in one place.\n\n\u2705 means that it's currently allowed, \ud83d\udeab means that it's not currently allowed, \u26a0\ufe0f means that we leave it up if it is already popular but if we catch it young in its life we do try to remove it early.\n\n* \u2705 Actual programming content. They probably have actual code in them. Language or library writeups, papers, technology descriptions. How an allocator works. How my new fancy allocator I just wrote works. How our startup built our Frobnicator. For many years this was the only category of allowed content.\n* \u2705 Academic CS or programming papers\n* \u2705 Programming news. ChatGPT can write code. A big new CVE just dropped. Curl 8.01 released now with Coffee over IP support.\n* \u2705 Programmer career content. How to become a Staff engineer in 30 days. Habits of the best engineering managers. These must be related or specific to programming/software engineering careers in some way\n* \u2705 Articles/news interesting *to* programmers but not about programming. Work from home is bullshit. Return to office is bullshit. There's a Steam sale on programming games. Terry Davis has died. How to SCRUMM. App Store commissions are going up. How to hire a more diverse development team. Interviewing programmers is broken.\n* \u26a0\ufe0f General technology news. Google buys its last competitor. A self driving car hit a pedestrian. Twitter is collapsing. Oculus accidentally showed your grandmother a penis. Github sued when Copilot produces the complete works of Harry Potter in a code comment. Meta cancels work from home. Gnome dropped a feature I like. How to run Stable Diffusion to generate pictures of, uh, cats, yeah it's definitely just for cats. A bitcoin VR metaversed my AI and now my app store is mobile social local.\n* \ud83d\udeab Politics. The Pirate Party is winning in Sweden. Please vote for net neutrality. Big Tech is being sued in Europe for *gestures broadly*. Grace Hopper Conference is now 60% male.\n* \ud83d\udeab Gossip. Richard Stallman switches to Windows. Elon Musk farted. Linus Torvalds was a poopy-head on a mailing list. The People's Rust Foundation is arguing with the Rust Foundation For The People. Terraform has been forked into Terra and Form. Stack Overflow sucks now. Stack Overflow is good actually.\n* \u2705 Demos with code. I wrote a game, here it is on GitHub\n* \ud83d\udeab Demos without code. I wrote a game, come buy it! Please give me feedback on my startup (totally not an ad nosirree). I stayed up all night writing a commercial text editor, here's the pricing page. I made a DALL-E image generator. I made the fifteenth animation of A* this week, here's a GIF.\n* \ud83d\udeab AskReddit type forum questions. What's your favourite programming language? Tabs or spaces? Does anyone else hate it when.\n* \ud83d\udeab Support questions. How do I write a web crawler? How do I get into programming? Where's my missing semicolon? Please do this obvious homework problem for me. Personally I feel very strongly about not allowing these because they'd quickly drown out all of the actual content I come to see, and there are already much more effective places to get them answered anyway. In real life the quality of the ones that we see is also universally very low.\n* \ud83d\udeab Surveys and \ud83d\udeab Job postings and anything else that is looking to extract value from a place a lot of programmers hang out without contributing anything itself.\n* \ud83d\udeab Meta posts. DAE think r/programming sucks? Why did you remove my post? Why did you ban this user that is totes not me I swear I'm just asking questions. Except this meta post. This one is okay because I'm a tyrant that the rules don't apply to (I assume you are saying about me to yourself right now).\n* \ud83d\udeab Images, memes, anything low-effort or low-content. Thankfully we very rarely see any of this so there's not much to remove but like support questions once you have a few of these they tend to totally take over because it's easier to make a meme than to write a paper and also easier to vote on a meme than to read a paper.\n* \u26a0\ufe0f Posts that we'd normally allow but that are obviously, unquestioningly super low quality like blogspam copy-pasted onto a site with a bazillion ads. It has to be pretty bad before we remove it and even then sometimes these are the first post to get traction about a news event so we leave them up if they're the best discussion going on about the news event. There's a lot of grey area here with CVE announcements in particular: there are a lot of spammy security \"blogs\" that syndicate stories like this. Pretty much all listicles are disallowed under this rule. 7 cool python functions. 14 ways to get promoted. If you found 15 amazing open source projects that will blow my mind, post those projects instead.\n* \u26a0\ufe0f Extreme beginner content. What is a variable. What is a `for` loop. Making an HTPT request using curl. Like listicles this is disallowed because of the quality typical to them, but high quality tutorials are still allowed and actively encouraged.\n* \u26a0\ufe0f Posts that are duplicates of other posts or the same news event. We leave up either the first one or the healthiest discussion.\n* \u26a0\ufe0f Posts where the title editorialises too heavily or especially is a lie or conspiracy theory.\n* Comments are only very loosely moderated and it's mostly \ud83d\udeab Bots of any kind (Beep boop you misspelled misspelled!) and \ud83d\udeab Incivility (You idiot, everybody knows that my favourite toy is better than your favourite toy.)\nHowever the number of obvious GPT comment bots is rising and will quickly become untenable for the number of active moderators we have.",
        "num_comments": 134,
        "comments": [
            "Graphite.dev \"articles\" can get in the bin too please, all also under the banner of advertising.\n\n\nAt least most of Auth0's articles are mostly applicable to all OAuth implementations.",
            "I still can't differentiate between this sub and r/coding due to the similar (spammy-ish) posts on both subs. These new rules hopefully can increase the quality of this sub!",
            "Thanks for being transparent about your decision-making, I think these are good changes",
            "I think there should be a rule that posts about articles/papers/etc. older than a few years should indicate the year in the title.",
            "\"To post is human, to lurk divine.\"",
            "These all seem reasonable.  I'd suggest shunting career posts entirely over to a subreddit like /r/cscareerquestions or something similar.",
            "> The People's Rust Foundation is arguing with the Rust Foundation For The People\n\nExcellent",
            "i just want to stop seeing consistent \"how x scaled to y requests with z\" articles",
            "Re: low quality content. r/hardware has a rule against reposts, although they don't seem to enforce it much. If outlet A is covering something originally reported by outlet B, without adding anything original, link to B or not at all. This helps with clearly defining repost blogs and stemming the tide of aggregators.\n\nThe downside here is that you need to rely on user reporting to moderate it.",
            "These are great rules. And thank you for being so on top of modding this subreddit :)",
            "Good stuff, cheers for caring about this sub",
            "I'd like to see a ban on whining: \"Naming things is hard\", \"Interruptions ruin productivity\", \"Managers don't understand XYZ\". A select few of these might be well-researched studies or something, but most aren't.",
            "> Since it's still mainly just me moderating\n\nThank you for your service. I particularly enjoy your posts and regularly check your `/submitted/` page.",
            "Can you also ban non expert workplace mental health advice?...and more generally any management advice as nearly all of it is not researched and just some brain fart of a junior manager that's been in post for just a year.",
            "> Since it\u2019s still mainly just me moderating\u2026\n\nIf it\u2019d help to have more mods I\u2019d be happy to help out. These revisions seem great and will be awesome for the sub as a whole.",
            ">\u00a0\u00a0AskReddit type forum questions. What's your favourite programming language? Tabs or spaces? Does anyone else hate it when.\n\n\nWhoa whoa whoa. No vim vs emacs!? What is this! I invoke the 3rd!\n\n\nHow about a recurring \"askreddit style allowed\" saturdays every few weeks?",
            "I didn\u2019t know that Listicle was the term. JFC my LinkedIn is full of 14 things I don\u2019t give a shit about in JavaScript",
            "These rules are great but I've submitted some high quality content (literally a book on software engineering) that gets marked as off topic. If a literal book (filled with code) on the subject can't make it in what else is getting filtered out?",
            "Also don\u2019t forget /r/experienceddevs exists",
            "c-can I talk about null-handling in kotlin?",
            "These are all good changes. To echo what others have said, IMO you should just outright prohibit career questions.",
            ">Extreme beginner content (\"how to write a for loop\"). This is difficult to identify objectively \n\nIt's not that hard in my opinion, there's a bunch of negative qualities that always pop-up in this sort of content.\n\n1. It's usually very short\n1. When it's not short it includes a lot of information irrelevant to the article (like the history of the programming language it uses or some personal anecdote from the author)\n1. It tells the \"howdunnit\" but not \"whydunnit\", which means the author knows how to make something happen but doesn't explain why it works this way. This is especially frustrating when you're supposed to pass some weird parameters to some function or when the author demands that some sort of a configuration file is set up without explaining what it does or why is it required.",
            "These are all good rules! Thank you for your hard work.",
            "> Making an HTPT request using curl.\n\nNot sure anyone knows how to do that",
            "Seems like an opportunity missed to title this post, \"3 cool new rules you can apply on your first day as a hotel desk clerk!\" :-)\n\nThese do seem like pretty straightforward rules, though they're perhaps all just variants of \"low effort content.\"",
            "Those are pretty good rules, except that Meta posts should be \u2705 or \u26a0\ufe0f, since there doesn't appear to be any other place to post those. The fact that you had to make an exception to that rule to post this is an indication that the rule is a bad idea.",
            "I think the odds of this being enforced is very low. The sub is rife with random technical news and open source evangelism that has little to do with writing code, while nominally the rules have always prohibited that. I doubt that changes today.\n\nIf this rule:\n\n> Just because it has a computer in it doesn't make it programming. If there is no code in your link, it probably doesn't belong here.\n\nWere actually enforced, it would be a very different (and IMHO, better) sub.\n\nA sampling from the last month:\n\n* [Former Microsoft developer says Windows 11's performance is \"comically bad,\" even with monster PC](https://www.reddit.com/r/programming/comments/1c8hl8k/former_microsoft_developer_says_windows_11s/), +2444 (Also worth mentioning this is just straight up misinformation, sitting at the top of the sub)\n\n* [Most micromanagers don't know their engineers consider them to be such.](https://zaidesanton.substack.com/p/most-micromanagers-are-blind-to-being), +1191\n\n* [What Software engineers should know about stock options](https://www.reddit.com/r/programming/comments/1c3mj2x/what_software_engineers_should_know_about_stock/), +590\n\n* [Major data center power failure (again): Cloudflare Code Orange tested](https://www.reddit.com/r/programming/comments/1byyavg/major_data_center_power_failure_again_cloudflare/), +318\n\nNot a single line of code in any of them. In fact, you'll be hard pressed to find a single line of code in any of the posts in this sub in the top 50 for any given week.",
            "Thanks for taking making this effort!\n\nI would request being over harsh in moderation if possible. Err on the side of quality, half or a quarter of volume, but those posts being great would be wonderful.",
            "A specific kind of career post that should be banned that I don\u2019t really have a good name for: self-jerking posts. \n\nSome example titles that would probably be in this category: \u2018how to get hired at google\u2019, \u2018what it takes to be a 10x developer\u2019, \u2018struggles of being a ceo of a startup\u2019 and other LinkedIn style bullshit.",
            "> Pretty much anything with a rocket ship emoji in it.\n\n\u274c\n\n> Personally I'd like r/programming to be a deeply technical place but as mentioned there's clearly an audience for career advice.\n\nI wouldn't mind if career topics were prohibited here. I don't think that *comments* should be prohibited - there have been good discussions about some new technology and what it might mean for the industry. But I don't think most career questions or career-oriented articles should be posted here, beyond maybe broad scope topics like, \"here's data on the most valuable programming languages in the industry\" or things like that.",
            "The problem with putting career development stuff on r/cscareerquestions is that that sub is basically worthless. It\u2019s overwhelmingly college seniors giving advice to college freshmen and downvoting anyone with any actual work experience who dares disagree.",
            "Good news! I hope you guys keep a good eye on the sub since from my experience it really has gone down in quality with the mass influx of people over the years.\n\nI've been using hackernews for 90% of my programming/it content consumption in the last few years since the sub just doesn't offer much that isn't already on hackernews. I hope this changes :)\n\nMaybe something like a weekly thread where people share stories about their current topic of interest would help get people more engaged with the sub. Who knows",
            "I want to see any kind of self promotion gone from people that otherwise don't meaningful contribute or are a known entity. So many people use this sub just as a dump for their useless blog posts that they spam to any even only tangentially related sub and then fuck off again for a week or so. \n\nIf a post is interesting enough someone else will probably come around and post it. If not, not much will be lost.",
            "The only real issue I have with this is that I think a blanket ban on politics almost certainly can't happen in practice because so many things intersect with politics. Things like software licensing, export restrictions on hardware used for machine learning, countries considering holding developers personally liable for software bugs, or changes to tax codes that impact the way software developer salaries are deducted are all overtly political and also fall under some other allowed category. Other subjects shouldn't necessarily be political, but people argue that they are in order to stop discussions. There's an example in this post: _How to hire a more diverse development team_.\n\nThat said, making a complete and accurate list of what is and isn't allowed is pretty much impossible, and moderators acting in good faith goes a long way, so maybe it's fine as is. It seems like if meta-posts aren't allowed in general though, this thread is the time to bring up the idea.",
            "Seems reasonable, thanks for the update.",
            "A question. I read that the code for the Therac-25 radiating machine was between 100,000 and 300,000 lines of coding! I cannot fathom how is it possible for a SINGLE programmer to do this code and what exactly would such a code contain? I mean all it had to setup was the position of the disperse magnets in a three dimension (or maybe even two dimensions) and the continuation, and strength of the radiating beam.",
            "Big thanks to the mods, these are good new rules. Blogspam has improved a lot recently.",
            "I noticed the last point on GPT comments rising and how this may quickly become untenable. I wonder how sophistacted bots like this can be stopped? There may be some signs such as a user suddenly making many comments and these comments being typing like GPT. Also, many of these may be concentrated on a single post as a user seeks to promote their own post. I wonder if an automated filter can be created for this.\n\nMy concern is that long-term this may become increasingly difficult and unstoppable. Even Google has a major issue with search engine spam using LLMs that is difficult to distinguish and stop.\u00a0Also, there is not an accurate or guaranteed way to determine whetehr something was written by AI. Over time, this difference will become less apparent due to improved models.",
            "I mostly agree, although I like some of the gossip and AskReddit type posts. Any alternative places I can find that?",
            "Most YouTube submissions are spam.\n\nMost 'curated lists' are also spam.\n\nSurveys should be acceptable _if_ they're from an accredited university (read: needs PhD sponsor, etc).",
            "Thanks to the introduction of these rules, which act as a sieve that filters out the low-quality content and thus ensures the quality of content throughout the community.",
            "I am unable to create a post on this subreddit.\nPlease help",
            "A bit late, but thanks for moderating r/programming. I recall seeing lots of blatant spam and marketingesque content on r/programming in the past, and I've noticed a strong decrease in that sort of content in r/programming in the last few months. Thanks for moderating!",
            "Thanks for sharing the rules update. I think they will indeed help maintain the sub's quality. \n\n^(And sorry for posting a listicle recently, I admit I hadn't read the post by then. \ud83d\ude05)",
            "Here's my take/feedback on a few points (the others are pretty reasonable):\n\n>**Newsletters**\n\nSometimes when I get a link from another newsletter I remove the UTM parameters to make sure it doesn't advertise where it came from. Also, if there's a paywall it's an immediate no-go. Login walls I usually let it go if the content is decent.\n\n>**Corporate blogs**\n\nI tend to stumble into a lot of corporate blogs and some of them usually make sense as they're from their engineering team. The ones with excessive PR i tend to leave out unless there's some significant technical content there I found useful.\n\n>**Extreme beginner conten**t\n\nThat can be very hard to determine. I mean \"what's a variable\", sure. But a lot of people can say \"this is beginner content\" for anything besides the basics so it's hard to judge. Also, even though it's beginner content sometimes there's an additional experience that can be extracted out of it. Should I editorialise the title to make that clear, add as a comment, or just leave as is and assume ppl make the connection? I'd like some clarification around this area.\n\nExample: [https://www.reddit.com/r/programming/comments/1de1sm6/what\\_makes\\_a\\_good\\_rest\\_api/](https://www.reddit.com/r/programming/comments/1de1sm6/what_makes_a_good_rest_api/)  \nTalking about REST without mentioning \"Hypermedia\" a single time in the post. That's extreme beginner content to me.\n\n>**Generic AI content**\n\nI'm posting those cause I'm interested on news in this area and how it affects programming, but happy to not post it here as I've always been in doubt if AI Programming content is still programming or something else?",
            "I like it, I think I'd participate more. I'm a professional, but I kind of lurk because it has seemed pretty unprofessional. I would nix Generic AI content, and I'm not interested in newsletters at all. And please yes, always date everything. I started programming in 1985 and I code for Docker, microservices, and web now. The date on something adds so much context, immediately, on whether or not something is still relevant when searching the subreddit for something years from now.",
            "Blogspam is VERY obnoxious especially garbage like that cyber kyndra bullshit thats just shitty AI articles with ads that don't even link to the original source thats very clear and easy to read",
            "I strongly suggest writing/using an LLM classifier to pre-classify posts for you to review. I'm shocked to learn it's just one guy who is moderating this gigantic sub.",
            ">  Linus Torvalds was a poopy-head on a mailing list.\n\nCan you get an exception for these?  I love these posts.",
            "No more webdev please. It's not programming and is the source of most of the listicles / poor quality content.",
            "Too many arbitrary rules that are obviously subject to change. Try to focus on a minimal ruleset, otherwise you will be accused of selectively curating one type of gray area content over another.  \n  \nSpecifically the \"gossip\" one is the biggest point of contention for me. \"bad news I don't like\" == gossip ? How are we expected to quantify this.",
            "just stack your prs bro, just see the light bro, trass me bro",
            "This is a hard one IMO. Some of the graphite articles are pretty interesting and I find that they generally provide value, even though it\u2019s technically linked to a product",
            "I'm guilty of this one a lot. The hard bit is that neither users nor mods can edit titles so by the time there's somebody complaining about it that means that the post has enough traction to be seen and it's too late to fix. The only thing a mod can really do is remove the content and ask the user to resubmit but since popularity is always a little luck-based you risk the second go not getting any traction and breaking any existing conversations across that divide.\n\nThis limitation is going to be true about any micro-level rule like that, anything that requires a post title edit is going to be hard to enforce without taking away legitimately good content.",
            "Maybe this is an \"it's their loss\" situation, but I wonder if people would just end up being really dismissive of valuable content because of the age. There are a lot of older academic papers that are still very much worth reading. I've read papers from as far back as the 40's, and there's a lot of stuff from the 70's and 80's that's still incredibly relevant and informative.",
            "I do it sometimes but it needs to have a rule that's really unambiguous like \"more than 2 years -> add the year in the title\". In science subs there's a rule to post an abstract, not sure about having abstracts assisted by AI, but most of the time it's just a copy/paste of the actual Abstract from the PDF file.",
            "In that case: welcome fellow human.",
            "The problem right now is that cscareerquestions is populated primarily by students or other people who do not yet have a job in the industry. So a lot of the advice is just outright wrong. There's a lot of groupthink driven by people whose information comes entirely from doomer articles. And while it's not as big of an issue anymore, it used to be plagued by a lot of obviously fake posts from people claiming to have just landed their first job in the industry with a humble base salary of 400k+. It's just not moderated well enough to serve that purpose.",
            "I do want to do this eventually but I want to do it simultaneously with a concerted push for a lot of these topics at once, especially the disallowed ones like support questions and memes where they're not *bad* so much as they risk taking over the subreddit if they're allowed at all. e.g. I'd like to start up a programmingcareers and programminghelp and programmingnews and get a network of subreddits that link to each other with overlapping but not identical moderators and rules.  I haven't had the time to do all of the work to find mods and do the marketing/growth work but I'll get to it eventually. I don't want to compete with existing subreddits, so in cases like careers probably finding a partner subreddit like cscareerquestions. The goal isn't to shard the subreddit so much as it is to give outlets for those places that don't already have a good one.",
            "SPLITTERS!",
            "(non-moderator hat) In some sense I agree, in that how they did it was they glued nginx and kafka to postgres and memcached; same as everybody else. \n\nBut on the other hand, the reason that I know that without reading is that _everybody is talking about it!_ That's an unprecedented level of transparency and sharing in any industry. Every tech company is broadcasting their research and development to the entire world and it's amazing. No other industry would ever do this. Clorox isn't posting their chemical plant schematics on the forums with Dupont so often that you're bored of it, and they sure as hell aren't open sourcing their patents to share with each other to move the industry forward. The time between the [Attention Is All You Need](https://arxiv.org/abs/1706.03762) paper and every dev with a laptop able to run a local LLM and every end user with a phone able to ask how far away the moon is in natural language is truely shocking and it only happened because of this amazing level of sharing and collaboration in tech.\n\nAnd yeah, all of the poorly written promotion-oriented corporate blog posts are part of that. I'll take those in exchange for the level of sharing.",
            "IMHO reposts should be forbidden, but also it should be investigated why Reddit API stopped marking links already posted as duplicate so we can get an alert when posting (or ignore and move on if using Reddit API)\n\nMore often than not I post smth because that warning is mysteriously gone and then it becomes a repost cause I missed from my feed (or haven't keep track of the top 10 in the sub for a few weeks)",
            "TBH if you want to only have well-research studies in r/programming you'll have 0.1 posts a year. If there's one thing that doesn't exist in programming or computer \"science\" is the \"science\" part of it.",
            "<3",
            "Eh, we don't want r/java situation where one of the mods will have meltdown and just kill everything.",
            "> vim vs emacs!?\n\nNo need, because it's already been settled and agreed on and we've all come to the conclusion that it's the best one. You know, the one that we all picked together. Yeah that one, that we all agree is the one. I'm so glad that we all came to the same conclusion.\n\n> I invoke the 3rd!\n\nYou... are denying the quartering of soldiers in your home? I told you it's only for a few weeks until I get back on my feet. I'll wash the cat, I'm so sorry about that.\n\n> How about a recurring \"askreddit style allowed\" saturdays every few weeks?\n\nThat's a good idea that I've been meaning to getting around to. I think we'd want some wikis and a scheduled post to be able to point to as a matter of advertising it and also in the removal messages when they get removed to redirect people to those days. It's on the todo list when I get some new mods.\n\nThe mod holdup is just knowing who I can trust. This is one of the oldest (the oldest?) subreddit and I don't really want to risk drama and coups on it.",
            "Just be careful no one kicks you in your listicle",
            "Try it again and send me a link and I can't guarantee it gets popular but I can promise it'll stay up.\n\nIt triggered my \"free ebook pdf download warez spam now free totes not a scam no virus plz\" radar but if you're a [fellow human](https://www.youtube.com/watch?v=Umc9ezAyJv0#t=30s) then let's give it another shot",
            "That subreddit is getting worse all the time, mainly due to lack of active moderation removing posts from inexperienced devs",
            "I see very little technical content over there in general. Also, the bar for experienced seems really low. Maybe someone needs to make /r/getoffmylawndevs",
            "frist of all, how dare yo u",
            "To be clear career _questions_ are already removed (as \"support questions\" is the rule I use in the removal message), it's the articles that I'm talking about there. I'm with you on not liking them personally.",
            "the spelling was a mistake at first and then I looked at some of the low quality tutorials I was railing against and you know what, it's perfect.",
            "Is that one of the walking machines in Star Wars?",
            "I think the best way to handle this (which I'm not yet doing to be fair) is to have these State of the Subreddit posts more often, maybe every month or so. That gives people a place to express feedback.\n\nWhat I'm trying to avoid is that it's frustrating for regular users to try to read a subreddit that's embroiled in drama, or filled with \"can we stop it with the ___ posts?\", and difficult for mods dealing with somebody stirring up nonsense after a legitimate ban. That's not what people come to read, and subreddits only have one feed and one \"top\" post at a time so it sucks when it's clogged up with meta stuff instead.",
            "Yep I don't catch everything, and if it's on the top of the subreddit before I catch it then I figure there's an audience for that content that I don't want to take it away from unless I'm concerned that it will be monkey-see-monkey-do'd and take over the subreddit. Which does also happen, but by nature you wouldn't be seeing those cases. It's not a perfect system but we also haven't had any user revolts here in a while so *shrug*?",
            "I feel you. I have a [longer term idea](https://old.reddit.com/r/programming/comments/1chs4ib/the_state_of_the_subreddit_may_2024/l25sn7r?context=3/) for it but it's a little more effort to get around to.",
            "You're right this internet thing is just a fad",
            "Did CSS hurt you? Where did it touch you?",
            "I'm not a web developer (anymore), but damned dude...\u00a0",
            "Oh FFS.",
            "When you say \"webdev\", do you mean refer to frontend and backend development?",
            "I\u2019m not in webdev, but I think at this point webdevs make up 35% of programmers. Unverified, but if that\u2019s even close to true, how could you justify excluding webdev from this sub?",
            "gatekeeping loser spotted",
            "It's not explained well, but my reading is that gossip stuff is about the people, not the tech. Which would be consistent with the stated goal - to make this sub a place for technical discussions",
            "Proggit is a 19 year old web forum that, without moderation, is completely flooded by a barrage of spam. This is fantastic advice for a brand new online community, but if the mods have been dealing with the whole spectrum of content long enough to have classified it this thoroughly, it's probably best to just lay out the expectations in excruciating detail, than to go down the bikeshedding path of developing a minimal ruleset that properly describes the norms.",
            "The rules aren't arbitrary just because you don't like them, they're clearly formed from ops experience moderating this subreddit.",
            "But...I unironically love graphite.\n\nCan't speak for the articles though.",
            "Yeah, that's exactly the problem I'm facing in trying to make this rule objective. In general I'm not bothered by the subreddit having a bunch of 0-point articles at the bottom of the page as long as the good stuff is up top, so I'd rather let the votes sort out quality. But the first thing several of these companies are doing is having their employees all go upvote it which without reading every one of them myself makes it hard for me to tell a good article that happens to mention a product vs a piece of spam that they've tried to cheat votes on. (Reddit generally detects that behaviour and does something with it but doesn't expose it to mods so to us it just looks like it's highly upvoted young in its life.)",
            "This could perhaps be ameliorated to an extent with pinned comments?\n\nDo articles typically expose the date in a way that could easily be found by a bot?\n\nThat said, not everything in text and programming ages badly. Somewhat recently I've read an excellent article arguing against NoSQL from *2013*.",
            "I know a couple of subs where this rule is enforced pretty strictly and no one wants to change it. The transition period might be tough but IMO it\u2019s worth it in the end.\u00a0",
            "Could you add a tag perhaps? Something like \"old\" \ud83e\udd14",
            "I think there's still value in enforcing it, but at the start it could help if instead of straight up deleting the post, a flair saying that's an old post is added and a comment is pinned reminding that in the near future post like those will be deleted. That would work for the transition period",
            "> cscareerquestions is populated primarily by students or other people who do not yet have a job in the industry\n\nYep. r/flying is mostly student pilots that don't have their licence yet. r/motorcycles is people that don't ride asking each other if this bike is a \"good deal\" or a good beginner bike. r/physics and r/math is all students or really basic questions. r/tahoe is only people that don't live in Tahoe asking what hotel to stay in. and I'm not sure but I'm starting to suspect that in r/Catswithjobs they don't have jobs at all.\n\nIt makes sense: when I'm picking up a new hobby the first thing I do is go subscribe to the subreddit to start absorbing that world. By the time I get deep into it I've probably settled into a niche that's too specific for the subreddit anyway. Then subreddits become a way for people to _extract value_ from what they think is people with that knowledge. I'm not surprised that people with a successful CS career or a physicist or a Tahoe resident or a gainfully employed feline wouldn't choose to spend their time answering contentless \"is it worth it?\" questions from people that haven't done any research themselves so the only subscribers are the people looking to ask the questions with nobody to answer them. Similarly, r/programming often gets (and I remove) many many surveys from people that see a place that a bunch of programmers hang out and want to take advantage of that space. \n\nThis is a big part of why we don't allow support questions. If medical conferences let people in just to ask all of the doctors questions, the doctors wouldn't get any value from the conference and they'd stop coming. And why tourist areas suck after the t-shirt and chotchke shops push out the things that made the area cool in the first place.\n\nTo counteract that you have to decide what you want the subreddit to be about and make sure it's really about that. That takes moderation and rules, some of them counterintuitive like our support questions rule, to make sure that it's about what it should be about, and not about other people trying to extract value from who they think is reading it.  You have to be the place the programmers want to come, not the place that people go to to get something from the programmers.",
            "Makes sense, thanks for your input!",
            "I meant less direct reposts, and more stuff like an outlet posting \"exciting news, as originally posted by someone-else, here's our inaccurate version with less info\", which is very prevalent in hardware news.",
            "Non-scientific posts are fine in my book, as long as they have some other sort of worth. I don't believe whining to be of any worth.",
            "JavaScript took them from me, Ruby made sure I never get them back.",
            "Thanks, tried it again https://www.reddit.com/r/programming/s/eK8jHZQbwm",
            "I dunno I get several mobile notifications a day and they are deleted when I try go to them",
            "> /r/getoffmylawndevs\n\nI'd be all over that like RPG on AS/400",
            "Ah, fair! Thanks for clarifying.",
            "That's not a bad idea. You should mention that in the rule.",
            "Say what you will about SE/SO, separate meta was a good decision.",
            "> I figure there's an audience for that content that I don't want to take it away\n\nSure, fine, but then this is your real rule. Why bother with pronouncements about what the rules are if you're going to let corporate blogs and numbered lists and blog spam and all the rest proliferate so long as \"there's an audience\"?",
            "Guess I'll just downvote then.",
            "My entire 5 year career so far has been \"webdev\". I've learned Kafka, Docker, CI pipelines in numerous code hosting sites, CD from a few different hosts, Angular, React...I can keep going.\n\n\"Webdev\" is much more than JS go brrrrrrrrr.",
            "> but I think at this point webdevs make up 35% of programmers\n\nI bet you it's _a lot_ more.",
            "Can confirm that's the intent. If you can give me some better words I'd be happy to ~~steal~~ borrow them instead :)",
            "> It's not explained well, but my reading is that gossip stuff is about the people,\n\nSo then NO articles about programmers allowed here?  Like an article about Carmack and co developing doom might contain \"gossip\" depending on who is reading it.",
            "> ops experience \n\nLOOL  \n  \nThe \"no gossip rule\" literally looks to be written by 1'st graders.  \n  \n>Richard Stallman switches to Windows. Elon Musk farted. Linus Torvalds was a poopy-head",
            "> In general I'm not bothered by the subreddit having a bunch of 0-point articles at the bottom of the page\n\nThe reddit app is garbage in this respect, the Home feed doesn't display things in any kind of logical order. If you've opened a post then it will try replace that post in the feed with something else from that subreddit next time you refresh it, so eventually I get to see all those 0 upvote shit posts.\n\nI know this is an app problem not really a subreddit problem, but it does make my feed suck more.\n\nNinja-edit: I like the new rules though, great work btw.",
            "That's a super well thought response. Lots of interesting things about community building. Thanks for writing it.",
            "Hobby subs on reddit are awful...all of them...they are nearly all just Instagram photos of new equipment that's been bought or its first uses...i.e. seems to just serve the collectaholic side of hobbies...its one area where specialist forums still rule.",
            "You can add \u201cpeople on r/programmerhumor aren\u2019t funny\u201d to that list\u2026\n\nIn general I think the \u201cbig tent\u201d approach is validated by the amount of traction content posts with diverse content actually get. Someone posted a thread from HN about what the dotcom crash was like and it generated a lot of good discussion here, which it wouldn\u2019t have in a careers focused sub (mostly because anyone who\u2019s been in the industry for 24+ years isn\u2019t going to be collecting career advice from Reddit).\u00a0\n\nThere seems to be this idea held by some that the amount of new posts is constant and if you just get rid of the career posts, the posts about politicians trying to ban cryptography, the open source drama, and whatever else, there will magically be more posts with whatever programming content they actually like. But that\u2019s not what happens, you\u2019ll just see more stale posts from yesterday in your feed instead (or Reddit will touch it up with ads and suggestions).\u00a0",
            "Oh ok not posting the same link by copying/pasting the same content, yeah that makes sense.",
            "Done!",
            "Yes the ones that are not about HR and office drama get removed\u00a0",
            "It's what the Meta rule is designed to address",
            "The point is to have a space for high quality programming discussions, you're getting a bit lost in the sauce over there on rules.",
            "I wouldn\u2019t be surprised. This was just a random google \u201cdata\u201d point.\u00a0",
            "Are you really having trouble understanding the difference between gossip and biographical or historical content?",
            "Oh I see, you're just here as a heckler, I thought you intended for people to take you seriously, my mistake. Carry on then.",
            "What's worse is that as far as I can tell, the app ignores the \"moderators deleted this post\" flag and will happily show you garbage posts with single \"this post is off-topic\" comments from a moderator or a moderation bot.",
            "If you check my submission page you can see that I try to fill out the remainder but I agree that you can't just dictate what you _don't_ want, you have to backfill with what you _do_ want.",
            "Thank you! I am def a human beep blorp",
            "High quality _programming_ discussions necessitate that, at least in most cases, programming be involved. \n\nThe sub doesn't have high quality programming discussions, it's more of a general-tech-things-interesting-to-comp-sci-students sub.",
            "biographies may contain opinions, aka gossip in some circles.",
            "Heckling what exactly? I'm commenting on ill-defined mod rules here that *will* be abused because it's up to personal interpretation(s) and that the mods specifically requested feedback on.  \n  \n>As always **I'm looking for feedback** on these and if I'm missing any and any other points regarding the subreddit and moderation so let me know what you think.  \n  \nThink of it more as a sort of journal, or notebook.",
            "Showing deleted posts happens on old Reddit as well, it's really annoying. \n\nUnless mods across Reddit are all really bad at actually deleting posts when they say they did, but I doubt it.",
            "Jesus, why does anyone use the app then?",
            "I've only ever seen that happen when the post was deleted between me loading a post list and clicking on a post.  The only way to avoid that would be to update the post lists in real time, which sounds much worse to me."
        ]
    },
    "A virtual DOM in 200 lines of JavaScript": {
        "title": "A virtual DOM in 200 lines of JavaScript",
        "score": 131,
        "url": "https://lazamar.github.io/virtual-dom/",
        "content": "",
        "num_comments": 22,
        "comments": [
            "Ignore the sniping comments from people who haven't bothered to read the article, it's actually really interesting.",
            "Nicely presented.",
            "That was interesting and instructive, thanks.",
            "Really interesting read and very well written!",
            "There are [frameworks that don't use virtual DOMs](https://svelte.dev/blog/virtual-dom-is-pure-overhead).",
            "This is another library for the convenience of efficient development, but does not improve the performance of dom updates on lightweight applications for weak devices with slow internet, why now web developers do not care about performance but only about money?",
            "Another day, another JS framework.",
            "Did you not read the article?\n\n\"The main goal is to illustrate the fundamental technique behind tools like React.\"\n\nIt's the third sentence.",
            "Because \"worse performance\" means literally nothing in the vacuum. As long as users are still using the result, the trade-off between performance and development efficiency was worth it.\n\nE: you guys do realise that you are disagreeing with facts? What matters is ROI, not mythical \"performance\", especially placed in a vacuum.",
            "This isn't a new flavor of the week. \n\nIt's a description of the process of how they made a super bare-bones virtual DOM.\n\nAnd very well written and explained, I might add.",
            "Username checks out",
            "More like hour",
            "No idea why you're getting downvoted, marketing and time to market is most often more important than the quaity of the product itself.",
            "I think we got downvoted by bots.",
            "Because the parent comment and this user\u2019s response to the parent comment have absolutely nothing to do with the article.",
            "It's obvious, really. Developers, especially junior ones, tend to think about the code as the goal in itself; so I'm in essence attacking something that devs pride themselves in.",
            "Or you got downvoted for not actually bothering to read the article and commenting something completely unrelated it.",
            "If you had read the article before commenting on it, you would have understood that it is not introducing a new framework. Rather, it is explaining how vdom-based frameworks like React work under the hood. You're not being downvoted by bots. You're being downvoted by people who think you're a loudmouthed idiot.",
            "Read the article, moron",
            "Who gives a shit",
            "What\u2019s even more obvious is that you didn\u2019t read a single word of the article.",
            "But is it obvious that I responded to a comment, not the article? Apparently not to you."
        ]
    },
    "Huawei unveils its own programming language the \"Cangjie\" ": {
        "title": "Huawei unveils its own programming language the \"Cangjie\" ",
        "score": 644,
        "url": "https://gsmchina.com/huawei-unveils-its-own-programming-language-the-cangjie-8687/",
        "content": "",
        "num_comments": 218,
        "comments": [
            "A lot of the English articles on this seem badly machine translated. From what I can gather:\n\n- ~~This language is supposed to be intuitive for Chinese speakers, and program composition corresponds to composition in the Chinese writing system in some sense. This may be what is meant by 'natural language' and 'user defined dsl's'?~~ Edit: syntax actually seems pretty Kotlin-Like https://www.reddit.com/r/programming/s/BxivQo0Sqq\n- The language runtime is supposed to be low-overhead, rust-like. But there are bounds/cast checks, a GC, and green threads\n- With the green threads there is a library of concurrent data structures\n- There is an 'actor dsl' that is somehow related to coding/interacting with ai models",
            "has anyone found any code examples?",
            "I am a beta tester so I can correct one thing in the comments - the code is still written in ASCII, English style. But its major audience is Chinese (at least now).\n\nThe language is heavily influenced by Swift, Kotlin and a little bit Rust (proc macro) and Python, as currently most of the work is towards mobile apps (specifically UI) and AI. It means to be a general purpose application level language, but I personally didn't notice any major breakthrough in other fields like the backend (except it got green thread like goroutine).",
            "Job postings: looking for experienced senior Changjie developer with 4+ years of experience.",
            "From what I can gather it seems this isn\u2019t really meant for an international audience, meant to join [the list of non-English based programming languages.](https://en.m.wikipedia.org/wiki/Non-English-based_programming_languages) If they manage to develop an ecosystem who knows how successful it will be, or not.",
            "> Supported operating devices: Only HUAWEI Mate60 Pro ALN-AL00 model is supported. \n\nBoo",
            "Is it the same story as their \"own OS\" which eventually appeared to be an Android stripped from most of the identifying parts?",
            "Brainiac move: naming your programming language with the same name as an [input method](https://en.wikipedia.org/wiki/Cangjie_input_method).",
            "[This article](https://news.mit.edu/2020/brain-reading-computer-code-1215)\u00a0summarizes results of brain scans done on people who were working on code while being scanned. The conclusion is that \"interpreting code activates a general-purpose brain network, but not language-processing centers.\"\n\nIt seems as though the lazy thinking that \"computer code is just like language\" is probably incorrect.",
            "Very similar to Kotlin\n\nhttps://developer.huawei.com/consumer/cn/doc/openharmony-cangjie/cj-wp-abstract",
            "The intel and infosec communities are gonna love this",
            "Is there samples od syntax? expected a unicode first language full of chinese character, some exotic programing lang",
            "This website is terrible, and so is this article.",
            "Where is the github link?",
            "I didn't see any syntax examples, and I can't read or write Chinese myself anyhow. But a while ago I did see this classical Chinese inspired project https://github.com/wenyan-lang/wenyan . It has some aesthetic focused formatting modes (\"render book\" in the online editor). But most of it seems horizontal writing. I can't really comment on the grammar since I can't understand it, it is interesting to see similar focus points on 'natural language' though to distinguish it from English grammar (or rather English mathematics).",
            "Misread Huawei as Hawaii and was really confused why the Hawaiian Government felt this was imperative",
            "The soviets also created some language of their own, which had limited use. Huawei wants to emulate MS and Google who both sport their own languages. Are they just doing it for prestige or have other intentions?",
            "Cangjie East",
            "Oh that's gonna catch just like that.",
            "https://developer.huawei.com/consumer/cn/doc/openharmony-cangjie/expression\n\nStill has English syntax/keywords.  Kind of disappointment.  I don't speak any Chinese, but it would have been cool to see a programming language in a non-Latin script.",
            "What language are you proficient in?Im good in cringe!",
            "I double checked.\n\nGuys ... today is NOT first april.\n\nNow, as we have that information ...\n\nI believe it is an awkward idea for corporations to do special-purpose programming languages that are used - let's be honest - mostly or exclusively by internal paid corporate devs. Sustaining such a language is very, very hard. You need to get people outside of that bubble to use it.\n\n> Huawei has claimed that Cangjie is a very intelligent programming language. \n\nI don't want the programming language to be cleverer than me.\n\n> Huawei further reveals its plan to integrate the Cangjie with its HarmonyOS ecosystem. \n\nWhy can't they just adjust the linux toolchain? Why this special purpose corporate-ecosystem? I don't get it.\n\n> Cangjie is reportedly a multi-paradigm language that supports functional, imperative, and object-oriented programming styles. It also includes features such as type definition, generics, and pattern matching to optimize development.\n\nApparently it is EVERYTHING now...\n\nhttps://developer.huawei.com/consumer/cn/activityDetail/cangjie-beta/\n\nSo ... not a clear english page. You create a new language but can not find a single person to offer english pages? Seriously? Yes, we can autotranslate, but still. \n\nThis is laziness on Huawei's part, sorry.",
            "Definitely not confusing to give it the same name as an already popular IME.",
            "Looks like a mix of Python and Swift or Kotlin, and doesn't seem to offer any benefits over any of them.",
            "When compiled, every method adds a call to call home to Xi Jin Ping.",
            "looking at spec its just crazy mix of every existing language in random manner\n\n  \nexamples & spec are here: [https://developer.huawei.com/consumer/cn/doc/openharmony-cangjie/cj-wp-multiparadigm](https://developer.huawei.com/consumer/cn/doc/openharmony-cangjie/cj-wp-multiparadigm)",
            "On the one hand it is really a big copy pasta of all the features you'll find in all recent languages.\n\nOn the other every company and even more country deserves and benefits to make its own computer language.",
            "Lol.... Dead language on arrival.",
            "I have one question, is it a modern language, or does it have null?",
            "It cant be more counterintuitive than this.\n\nBesides who is going to adopt it? I cant image non native speaker are interesting in programming in \u7b80\u4f53\u5b57 \n\nThis is merely a PR stunt from huawei to boost nationalism, only regarded would buy this crap.\n\nJust look on google you would finds of boosted advertisement. Headlines like groundbreaking / attract attention. Yea like the world is totally interested in programming in cryptic letters. Totally rite!?",
            "Ah that makes sense. Since most if not all programming languages are English based.",
            "Taiwanese here. From what I saw this language has nothing to do with Chinese.\n\nThis is the source of the source of the linked article:\nhttps://m.ithome.com/html/776828.htm\n\nNot once did it mention any of these keywords: \"Chinese\", \"culture\", \"native language\", \"natural language\"\u2026etc.\n\nThe so called \"native intelligence\" means that an AI agent is embedded into the language, and there is a native syntax to write prompt in nature language, in code, to generate code, probably at compile time.\n\nSee here: https://img.ithome.com/newsuploadfiles/2024/6/dafc0637-4344-4699-b4f9-b9759192ba8e.png\n\nChinese string in the middle translate to:\n\"Recent physiological parameters of known users: ${info}\"\nand\n\"Please combine the food databases and select the top ${n} items that are most beneficial to the user's health.\"\n\nI would assume you can use any model with any nature language prompt.\n\nIn terms of syntax it's just your average modern C-family language.",
            "Forgive my ignorance, but isn't \"user defined dsl\" basically macros? Or maybe it will do something smarter like work on the ast instead of just textual replacement?",
            ">GC\n\n>rust-like",
            "That is not what a DSL is. DSLs are abstractions; they are smaller \"languages\" created in a given language, often accomplished through metaprogramming facilities like macros.",
            "So basically Chinese Nim?",
            "> There is an 'actor dsl' that is somehow related to coding/interacting with ai models\n\nCool, I can safely disregard this whole project",
            "Would you know what the (translated) articles mean by \"native intelligence\"? This must be some typo, otherwise I have no idea what they mean by it.",
            "There is not much difference between it and other languages, and there is no Chinese syntax, so the first point you mentioned is wrong.\n\nCangjie can be seen as a language that is comparable to go and java.\n\n  \nThe only crude benchmark in the official documentation\uff1a\n\n[cangjie bench](https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240621215011.76880064386113642818346326764963:50001231000000:2800:38A745741EF414348B39C71ED29E3E689C468601DCF602B571694F9A84B77B51.png?needInitFileName=true?needInitFileName=true)",
            "> \n> There is an 'actor dsl' that is somehow related to coding/interacting with ai models\n\nI tried to find more information but it is using chinese symbols. No english.\n\nThis is laziness on Huawei's part. Even if they want to say \"we chinese rule the world now\", say, 1.4 billion chinese speakers ... english speaking people are also a huge number. How hard can it be for them to offer a page written in english about it?",
            "So basically go?",
            "If true, I can see it being a nightmare for malware. English is the most spoken language in the world (*not native only*) so I'd imagine this is like another layer of obfuscation.",
            "Great. Next thing ya know they\u2019ll want their own country!",
            "I found this: https://developer.huawei.com/consumer/cn/doc/openharmony-cangjie/cj-lan-spec",
            "https://developer.huawei.com/consumer/cn/doc/openharmony-cangjie/expression\n\nIt doesn't look very exotic and appears to use English keywords and c-like syntax.",
            "I tried to find info about the pipeline construction in the PDF but my browser couldn't search it.  Do you have a quick explanation of what the pipelines are?",
            "It is English-based actually. The keywords are English and so are the standard library type/function names.",
            "Except that it's completely English based. All of the keywords are English words, and everything looks like it's expressible in ASCII",
            "Well that's pretty understandable has it is the only phone using the chinese made chipset \"with 0 american patents\" and that Huawei are so proud of. It's also the latest mainland china only phone from the brand.",
            "Based on the code snippets I've seen, it wouldn't shock me to learn that this language is based off of Kotlin Native. This also meshes with Huawei having a large existing Java/Kotlin codebase, and their development environment being a modified version of IntelliJ a la Android Studio.",
            "This looks like go, so might be the case",
            "Android is open source, published under the Apache License. Anyone is free to fork it and remove all but a small acknowledgement. That is what Amazon Fire OS is.",
            "We'll see when it's open sourced.",
            "I mean you could say the same about MacOS",
            "~~Their own OS is not Android based for Mainland China,~~ they still use AOP for EMUI and HarmonyOS.\n\nThe chinese OS is also called HarmonyOS but is stricly different than the western version and don't have the same feature and cannot operate with smart accesories running the western version of it.\n\nThey are planning to release HarmonyOS NEXT soon globally to replace Android for everyone and will be able to run iOS and Android natives app natively and will have also their own installation package like ipa and apk.\n\nThe whole thing is pretty interesting to read about.\n\nEDIT: fixed some mistakes I made",
            "New coding language: Latin keyboard",
            "I'm a non-native Chinese speaker and I don't feel like it's *that* confusing. It would be like creating a programming language called [Qwerty](https://arxiv.org/abs/2404.12603)",
            ".. whose name is the creator of proto-Chinese in Chinese legends\n\nNo idea how that'd make sense in a PL context.. like the language is pretty basic?",
            "* Tracing GC\n* M:N user-mode thread model\n* ADT and pattern matching\n* Pipeline operator \\`|>\\`\n* Null safe, has \\`Option\\` type (\\`?\\` syntax sugar)\n* AST based macro\n* OOP: Class and Interface\n* Value type\n* Function is first class\n* Generic\n* Type method extension\n* Operator override",
            "https://www.ithome.com/0/776/828.htm\n\nNot sure why everyone here claims that it's in Chinese.\n\n    @AI[model = \"Pangu\",knowledge = \"dataset/recipe.json\"]\n    func recommend(info: String, n: Int64): String {\n      ...\n    }\n\nand\n\n    for (i in 0..N) {\n       spawn { task(i) }\n    }",
            "It's still in beta, but you can sign up for it: https://developer.huawei.com/consumer/cn/activityDetail/cangjie-beta/",
            "> imperative\n\nMaking another assumption here.",
            "Iran also has a version of Ada that puts all the keywords etc. in farsi. IIUC it was developed in collaboration with the US DoD before the revolution. Many countries experimented with localized BASIC dialects in schools during the 1980s.",
            "DRAKON, PROL2, and DIPOL. Programming language created for Buran space program.",
            "I mean, Microsoft, Google, and Apple also created some languages of their own, some of which are successful and others less so (Dart). Why would Huawei be less successful? Why would Huawei's intentions *when creating a programming language* be different from American companies?",
            "and had been there for like 40 years ahahahaha",
            "Doesn't that kind of describe almost every language out there?\n\n\nRust has a bit of a C++ syntax mixed with Haskell's trait system.\n\n\nKotlin is like a middle ground between Java and Scala\u00a0\n\n\nNo language is new under the sun",
            "> On the other every company and even more country deserves and benefits to make its own computer language.\n\n.....no? \n\nNO!",
            "I can't imagine you could make a programming language that would be wildly different and unique at this point. It still needs to be approachable enough that programmers can adopt it.",
            "Will be used internally only. Not dead, but you won't see any open source project using it.",
            "It'll be needed to code native apps for HarmonyOS which is used as a OS for PC, Smartwatch, Smartcar and every other stuff that can run an OS as HarmonyOS is an \"omni\" OS.",
            "null safe, but Option or syntax sugar `?`",
            "This guy forgot that more than one billion people live in China.",
            "> Besides who is going to adopt it?\n\nChinese speakers? The government could put weight behind it too in order to get away from Western control.\n\nIf it ultimately becomes a capable language, wouldn't you adopt it *IF* you were Chinese? I'd be tired of programming in Spanish if I were a native English speaker.",
            "I\u2018m interested if it\u2018s just a matter of translating keywords or if it also affects programming structures and procedures that are more aligned with the way the language is spoken.",
            "I wonder if being so dominated by English influences how we write code in general? I wonder how code being dominated by say Russian with its large case system or German with its thing for joining nouns together rather than English would make things different?",
            "Given Chinese concerns on security, I would consider the possibility of a [\"trusting trust\" attack](https://www.cs.cmu.edu/~rdriley/487/papers/Thompson_1984_ReflectionsonTrustingTrust.pdf)",
            "Dang it, should have been suspect when articles like this one didn't quote sources. Got confused because 2-3 articles generated similar nonsense https://neatsoft.eu/what-is-huawei-cangjie-programming-language#syntax-and-structure-of-cangjie-programming-language\n\n\nI assume it's some llm actually talking about the cangjie input method.  \nThanks for finding some real source code!",
            "I think macros are too broad a term, personally. Is it pre or post lexer macros? Does it need to make grammatical sense?",
            "I was picturing a higher level abstraction akin to Kotlin's [type-safe builders](https://kotlinlang.org/docs/type-safe-builders.html).",
            "[You can have both.](https://github.com/kyren/gc-arena) - for example [Ruffle](https://ruffle.rs) the Adobe Flash Emulator needs a runtime GC to emulate Flash despite being written Rust. (And Ruffle use that exact GC)",
            "No, it isn't that. They are languages designed to a specific purpose. They are not for general programming.\n\n DSL examples include SQL(domain: database) , awk(string manipulation), papyrus (game engine scripting), g-code (cnc machines), verilog (hardware), make (build system), bison(grammar parser), jinja2(html templates), the apache webserver config, promela (model checker) ...\n\nSome of these are turing complete, others not. Some are built with another language as a base, some have their compiler.\nBut they all have a niche purpose.",
            "not Rust or Nim, most like Kotlin",
            "It's all getting compiled to binary anyway.",
            "I mean, \"find and replace\" a few Chinese symbols for whatever keywords they have in the language would be probably the easiest step in deobfuscating some malware, no?",
            "looks like swift a bit no ?",
            "...it's Go?\n\nYeah. That tracks. Make something new? Nah...just steal from someone else, file off the serial numbers, and pretend you invented it *and* it's superior in every way.",
            "Not very Cangjie if you ask me",
            "    // ---- Pipeline operator |> ----\n    \n    // Increasing the value of each element in the array by '1'\n    func inc(x: Array<Int64>): Array<Int64>\n    \n    // Get the sum of elements in the array.\n    func sum(y: Array<Int64>): Int64\n    \n    let arr: Array<Int64> = Array<Int64>([1, 3, 5])\n    let res = arr |> inc |> sum\n    // res = 12\n    \n    // ---- Composition operator ~> ----\n    \n    func f(x: Int64): Float64\n    \n    func g(x: Float64): Float64\n    \n    var fg = f ~> g\n    // The same as { x: Int64 => g(f(x)) }\n\nI made a mistake in the comment. Python doesn't have pipeline operator. It's that some of the members are from Python and they want pipeline desperately (I'm sure you guys here may have the same feeling too).",
            "Interesting, any idea what would make it \"inspired by chinese culture\" and \"intuitive for chinese\", phrases I see thrown around in the limited info on it, then?",
            "Really, if they were to make a \"true\" Chinese based coding system it would be pictographs or maybe pictures that \"name\" standard library type/function/object(s).",
            "what does that have to do with them claiming they wrote their \"own OS\" which eventually appeared to be an Android stripped from most of the identifying parts?",
            "[Ars Technica reporting on HarmonyOS 2.0](https://arstechnica.com/gadgets/2021/02/harmonyos-hands-on-huaweis-android-killer-is-just-android/) found it looked very much like an AOSP fork.\n\nIf I understand correctly, HarmonyOS NEXT is a completely different operating system. It isn\u2019t in wide use _anywhere_ yet; it\u2019s only available as a developer preview. It removes the Android compatibility layer and certainly isn\u2019t compatible with iOS apps.",
            "why fit the language to the keyboard when you could fit the keyboard to the language",
            "Nah.\n\nIt'd be like naming a programming language Morse, or ASCII.",
            "imagine having to search for something HID or encoding related in either. good luck.",
            "The important thing is that I didn't find the compiler or SDK download link",
            "Looks cool to me, looks like half python half swift",
            "Because unlike western IT giants, Huawei is controlled by the state apparatus. Chinese jingoism is also a factor.",
            "> Doesn't that kind of describe almost every language out there?\n\nBe real, check syntax\n\nWe can say \"everything equals everything\" which has no benefit at all.\n\nThere are C-like language family, there are functional family, lisp etc, but here are mix of them with strange unnecessary syntax. Kotlin for example have new syntax but its understandable and easy if you are familiar with C-like.",
            "Why not?",
            "Everyone is aware. If you took the most profitable software projects in the world what percentage would be written by folks who speak Chinese and what percentage would be written by people who speak English? Consider especially how many Chinese people already speak English and how few in the US speak Chinese.\n\nEnglish gives you access to an existing base of users that includes the majority of the most successful developers including those in China. Chinese gives you basically the developers IN China only.",
            "Did you also forget how painful it's to use excel in non english languages because the function names are localized?",
            "Software development benefits from mostly using a mutually intelligible language spoken at least minimally by many parties so that all can collaborate. There is as far as I'm aware nothing inherently superior about English for this use case but insofar as being isolated from most talent there is certainly a cost to using something else.",
            "Japanese and German are, in a sense, stack-based languages.  Subjects, objects, and prepositional phrases get pushed on the stack, then a verb at the end of a sentence cleans off the stack.  I haven't heard of Forth doing especially well either of those places.  \n\nI have no understanding of Chinese grammar, so I don't know what a Chinese style programming language would be like.",
            "Umph. You do sometimes get claims online that the widely-used variations on the widespread  `arg1.method(arg2, arg3)` single-dispatch OO syntax are somehow \"natural\" ...that seem to be only based on the person being used to English SVO word order in particular, and somewhat unaware that a whole bunch of other languages don't use that order at all necessarily.    And English is actually verb-first when giving imperative commands anyway.\n\nSo as a VSO language speaker (Irish) myself it surely does seem like bullshit to say that one particular OO syntax style is \"natural\" because of English SVO word order.\n\nThere is actually an Irish toy scripting language that uses a `method@arg1(arg2, arg3)`  and Irish-based language keywords instead, if you want to play with it- https://try-setanta.ie/  , sample code (not by me, included):  https://try-setanta.ie/editor/EhEKBlNjcmlwdBCAgICA_PaOCg\n\nI suspect  it really doesn't make much difference once you get used to it as a programmer though.\n\nPlus of course there's Lisp. Lisp CLOS uses `(method arg1 arg2 arg3)` (and is multiple-dispatch). \n\nI dunno if Irish people are somehow over-represented as Lisp and Prolog fans, I know I quite like them but I'm not prepared to say it's *because* of the natural languages I speak. \n\nProlog was always Big in Japan \\(see the Japanese  [Fifth Generation Project](https://www.sjsu.edu/faculty/watkins/5thgen.htm)\\) and Japanese is SOV. Surely they'd be way more into Forth if SVO/VSO/SOV/etc. natural language influence was all that big a deal...\n\nSo I think really most programmers would just adjust, it's just not quite the same thing as speaking a natural language.  Main problem with a programming language using a bunch of Chinese logograms is just not knowing how to enter the things. And there's just so many of them....\n\nBut I'd expect much like you can code in [APL](https://en.wikipedia.org/wiki/APL_\\(programming_language\\)#Game_of_Life)  - once you learn the symbols and how to enter them... you can presumably learn a new programming language using Chinese logograms, even without properly knowing Chinese, much like the way countless European schoolkids in the 1980s microcomputer revolution used English-based BASICs without really speaking English. It's conscious symbolic manipulations.",
            "    CamelCase\n    snake_case\n    kebab-case\n    germanspeakercase\n\nSeen it in the wild. They just forget themselves.",
            "> I wonder if being so dominated by English influences how we write code in general? \n\nSyntax for programming languages is more dominated by math and logic, than the grammar rules of human languages. The only influence of the human language is how keywords are named.\n\nThere were attempts to make computer programming more \"human friendly\" with languages like COBOL, which lead to monstrosities like this:\n\n    ADD 1 TO x\n\nI think later versions of COBOL realized how stupid this is, and provided a more mathematical syntax. I mean, did COBOL ever achieve the goal that a business person would be able to understand COBOL code?\n\nAnother example is SQL, which was designed to make querying databases more \"human friendly\", and is modeled by the way humans talk: \n\n    SELECT this FROM that\n\nWhich is again terrible, from a programming language perspective. Later query languages have opted for a more \"computer-friendly\" syntax in their query languages. For example, Mongo:\n\n    db.collection('inventory').find({});\n\nTLDR - Aside from the choice of keywords, regardless of the original language, I think language designers would eventually realize that the more universal languages of math and logic would make more sense for programming.",
            "> Russian with its large case system\n\nCase systems don't vibe well with programming. There are Russian-based programming languages, but they all ignore cases, and basically look like English-based languages with different keywords.\n\nThe only attempt at using cases in programming (that I know of) was the [Perligata](https://metacpan.org/dist/Lingua-Romana-Perligata/view/lib/Lingua/Romana/Perligata.pm) module for Perl, which uses an extremely simplified version of the Latin case system.\n\n(Unless you count English as having a vestigial case system (I don't, but some people do) and see how personal pronouns are used in Inform 7.)",
            "Eh, pretty much all (or most, idk) programmers can already speak English. For China specifically this makes more sense, because have extremely few English speakers [(0.9%)](https://en.wikipedia.org/wiki/List_of_countries_by_English-speaking_population)\n\nLike in a Finnish university we didn't even ever think about using Finnish for variables or even comments",
            "You're not really using *language* as much as just the *vocabulary*, but that's just words, you're not really stringing whole sentences.",
            "Oh very cool, read through the link, that seems way more useful than what I was picturing. Thanks!",
            "So it runs in a JVM-like environment? Thay doesn\u2019t sound very \u201clow-overhead, Rust-like\u201d but okay",
            "Nobody debugs binary. Assembly, sure. The higher the level the easier though.",
            "I think that's a surface level thought that's probably not born out in reality.\n\nProgramming languages follow language/grammar patterns. \"If this, then that\" == `if (<clause>) then { <action> }`\n\nIf you saw [this video about the German language + grammar](https://www.reddit.com/r/videos/comments/1dkh8pl/what_english_would_sound_like_with_german_grammar/), it explains my point.\n\nI don't know anything about the Chinese language, but if it doesn't follow our pattern of grammar/thinking, it could be very difficult.",
            "No one serious would look purely at the syntax of a language and conclude it's plagiarized. Languages have borrowed from eachother since the beginning. It's practically essential if you want broad adoption because it needs to be familiar.",
            "By this superficial syntactic standard, Go itself was nothing but a complete rip off of 50 year old [Algol 68](https://cowlark.com/2009-11-15-go/). \n\nI guess Rob Pike and Ken Thompson had a fever dream that they were in China.",
            "The pipe operator is from Julia. It is god sent cause piping functions together is a joy, especially for functional programmers a whole program can be a combination of piping the results of functions.",
            "Propaganda",
            "I know too little about the Chinese culture, unfortunately, so cannot even guess.",
            "While I doubt this project will go very far... that also applied to Linux, which was essentially MINIX at the start. It will likely deviate more greatly as time goes on.",
            "I'd say it is their 'own OS' if they take over development and maintenance and move it in their own direction (losing compatibility with mainstream Android apps).",
            "[deleted]",
            "HarmonyOS is not ripped off from AOSP you're confusing it with EMUI that is the Western version of OS that are running Huawei phones",
            "They will have cross platform support on NEXT: https://www.reddit.com/r/Huawei/comments/1di5t5q/huaweilinux_foundation_led_open_mobile_hub_20/#lightbox (bottom 2.)\n\nOr I did not understand what they meant by crossplatform support",
            "Agreed, but I think it's incorrect to dismiss their *programming language* on that basis. This language seems similar to Kotlin, Swift, and Dart, both in design as well as intended use cases. I don't think it'll be less useful or relevant just because it was developed by a state-controlled company.",
            "I think most newer languages are kind of a mix of various features.\n\n\nOne might argue that Kotlin is a kitchen sink language too. They've also picked random features from Scala, Go, Java. It's not as \"pure\" conceptually as Racket, OCaml, Haskell, Smalltalk, which revolve around a central unifying concept.\u00a0\n\n\nWhether it's uniform syntax (racket and the lips), first class modules (OCaml), pure functional programming (Haskell) or pure object orientation (Smalltalk).\n\n\nThere's nothing about Kotlin or Swift or even Java, to an extent that I can point to as being a core philosophy.\n\n\nI do agree with your broad point that there's a distinction that can be made, but my point is that Kotlin and Swift fall on the other side of the spectrum.",
            "Because there just aren't enough use cases unique enough to require every country and company to make their own language. \n\nBecause there aren't enough people capable of making good languages.\n\nBecause joining a new company and needing to learn their language would slow onboarding massively. \n\nBecause making a new language is a huge engineering effort that doesn't necessarily offer any benefits over using existing languages.",
            "Why would you assume the person you're replying to has used Excel in non-English before? Besides, wouldn't that be a reason for a non-English company to create a non-English based programming language?\n\nDid you forget to use your brain?",
            "The most basic things like a find function, or a httpwebrequest class tell you their purpose in their name. That's tremendously helpful when developing. Especially if you're developing something using technology you're not familiar with. You might start looking for objects that have keywords you think would be useful. If it's not your language, you need to learn the language lol.",
            "So is English considered FILO or LIFO? \ud83e\udd14",
            "You haven't looked very well then -- Forth still has a very active community in Germany, with a magazine that's been running continuously since 1984 (Vierte Dimension).",
            "This comment was featured in r/programmingcirclejerk, and I thought it's fun.  \n\nIt's interesting to see how people from other part of the world think of eastern languages, being myself from Asia and familiar with them. \n\nThe opinion about Forth is especially amusing.",
            "Chinese word order is subject-verb-object like English as well as topic-comment.",
            "'Stack based' doesn't really apply to programming languages though because it's not like you have lots of compositions of keywords, except maybe function signatures with several words that are unrelated.\n\nIf it's anything other than basically translation of keywords and support for complex characters, I imagine the 'grammar' aspect of it is superficial too. For example changing 'assert not X' to the equivalent of 'X prohibit'. Basically what you could do with a custom compiler of existing languages. \n\nAs someone who has studied it a bit, east asian languages are fascinating for many reasons, but there's nothing about a difference in function that would be reflected, like in 'Arrival' where you can actually see time differently.\n\nThe only thing I can think of is that in both Japanese and Korean, the words for 'when' and 'if' are somewhat interchangeable, so clarifying that through the language might be helpful for Asian language speakers. Basically replacing 'if' with 'conditional event' or something.",
            "Chinese actually uses the SVO (subject verb object) structure as opposed to Japanese\u2019s SOV structure.",
            "You are wrong about German word order. Most sentences in German are subject - verb - object. Except for questions (where the verb comes _before_ the subject) and sentences with an auxiliary verb.\n\nQuestion: \"Bist du bereit?\" - \"Are you ready?\" **verb - subject - object**\n\nSentence with aux. verb: \"Ich kann die Musik h\u00f6ren\" - literally \"I can the music hear\" **subject - auxiliary verb - object - main verb**\n\nNormal sentence: \"Ich spiele Karten mit meinen Freunden\" - \"I play cards with my friends\" **subject - verb - object**",
            "Stack based language is one of the things that got dropped in the Dutch update to German, weird side effect of the move to heap based language.",
            "This is a nonsensical way to explain Japanese. I\u2019m assuming it\u2019s based on the idea that the order of what precedes the verb doesn\u2019t matter in terms of being grammatical, but considering how important context is for sentences to make sense in Japanese, treating it as a stack is weird.\u00a0",
            "> So as a VSO language speaker (Irish) myself it surely does seem like bullshit to say that one particular OO syntax style is \"natural\" because of English SVO word order.\n\nAren't you just arguing it's not universal? If a language is designed by English speakers using English keywords, and its structure is reminiscent of English, and the person who is describing the language as \"natural\" is using English, it feels fair to call that natural because it's making comparisons to a natural language. I mean, the term for English and Irish and ASL etc. is \"natural language\", despite the fact that they're so different.\n\nThe actual merits seem pretty dubious to me, but I don't think the adjective is a bad choice. Though it does make it weird to specify actual natural languages.",
            "> There is actually an Irish toy scripting language\n\nI love the Ogham-inspired comments:\n\n    >-- comment --<",
            ">arg1.method(arg2, arg3)\n\nit may not be optimal for some human languages.\n\nBut for coding efficiency (especially in unfamiliar libraries/languages), arg1.method(arg2, arg3) wins over method(arg1, arg2, arg3) any day because code is fundamentally about doing things (methods) to data (args). Only the arg1.method() syntax allows code completion to efficiently list a useful subset of methods for the given data.\n\nYou always know which data you're operating on, but the exact naming of the procedure isn't always known.",
            "object.method(args) seems to me to be optimal for cognitive load because of how the interpretation of the three elements in this order only depends on the elements preceding them. If the receiver is some complicated expression, you can read and understand it completely without needing to interpret the method and arguments. If the method came first you\u2019d have to remember its name without knowing its meaning until you\u2019ve seen what the receiver is. And arguments first would be even more to remember, especially if they\u2019re simple types like primitive values that don\u2019t mean much without context.",
            "My personal favourite, for constants at least:\n\n    SCREAMING_CASE",
            "    camelCase\n    PascalCase\n\nJust for the sake of accuracy :)",
            "Germanspeakercase. German capitalizes all nouns.",
            "Someone over in r/ProgrammingHorror described my naming style as `snake_Riding_a_Camel_Case()`.",
            "I'd argue that most testing DSLs are modeled very closely to English.\n\n\n```\nassertThat(thisContainer, hasSize(17)); assertThat(variable, Is(NotNull()));\n```\n\n\nI wanted to say that this wouldn't work at all in German, but I actually think it's possible. It's more complicated, but looks doable.\n\n\n\n```\nstelleSicherDass(variable, Nicht(Null).Ist());\n```",
            "I don't have any problem with SQL. It hits a pretty sweet spot for querying",
            "> Later query languages have opted for a more \"computer-friendly\" syntax in their query languages. For example, Mongo\n\nMongo doesn't have a query language. It has an API.\n\nThe two things are very different.",
            "There's more than one way to write maths though, the version you use is the English version.\n\nSQL replaced nonsense like you gave as your example requires you to already know how the database works before interrogating it.",
            "To be honest hibernate, a java orm, has query builder as well, and at least forces you to explicitly state which operators you're using, unlike mongo driver where you have to guess what operator will be used in what context.",
            "> Case systems don't vibe well with programming.\n\nIs that because the development of most early programming languges was done in Anglophone countries though, or is there something more fundamental to linguistics that makes this true? Genuinely asking, I don't really know much about linguistics.",
            "You're talking about malware, though.  Malware authors aren't going to ship their source code.",
            "Humans don't process programming languages the way they process natural languages and a programming language's grammar bears no relation to natural grammar.\n\nCase in point, `while me hungry apple eat` is not a sentence in the English language.",
            "on top of that, it doesn't even look like Go in the slightest. If you read the spec it includes a lot of syntax and/or features which are not present in Go. like `let`, sum type enums with associated functions, match expressions....\n\njust about the only similar things are the `for`, `func` keyword and the fact it is C-like",
            "Marketing, more likely.",
            "i dont think is disputing the legality, but the objectiveness. Its not their OS, its just android",
            "That\u2019s about supporting popular frameworks/languages/APIs to make it easier for developers to write cross-platform apps. That\u2019s very different from being able to drop an Android APK on a HarmonyOS NEXT device and having it work.",
            "> Because there just aren't enough use cases unique enough to require every country and company to make their own language.\n\n\"I want to\" is enough of a use case.\n\n> Because there aren't enough people capable of making good languages.\n\nHow do you know this?\n\n> Because joining a new company and needing to learn their language would slow onboarding massively.\n\nThis language looks pretty much like a bunch of other modern languages and I wouldn't expect anybody except the most junior of employees to have much trouble. \n\n> Because making a new language is a huge engineering effort that doesn't necessarily offer any benefits over using existing languages.\n\nIt can't be that huge, people do it all the time, even individuals.",
            "because the lot of you are throwing around baseless assumptions that this is a good idea, when it's not.",
            "WTFO :)",
            "Infix.",
            "English is like this one application I wrote a while back: used three different languages at the same time all mixed together (there was PHP writing JavaScript into an HTML script tag rendered in a NW.js Chromium window), stealing other stuff from a bunch of random places (it executed a mail merge app on the command line and piped it CSV data for generating PDFs that were then sent to an iframe), and super hard to understand for anyone who wasn't already deeply familiar with its quirks (even if you installed it correctly it would break unless you edit a specific line of an XML file in `/etc` that was put there by a system library)\n\nUnlike English though, my software was successfully shot in the head and replaced with an entirely new application that only does things like have functions that import Node.js libraries and then insert their output directly into browser DOM.  There isn't a single line of PHP in it, and the only external binary it uses on the command line is from a random 90s-looking website to work around the Windows print stack being a fucky shitshow.",
            "English is mostly [head-initial](https://en.wikipedia.org/wiki/Head-directionality_parameter), but like most things in English there are exceptions and quirks.",
            "English is Bastard German /s",
            "garbage in garbage out",
            "Fair enough.",
            "Although when you add stuff it becomes Subject-Time-Manner-Place-Verb-Object, while English is usually Subject-Verb-Object-Manner-Time-Place. And you can also take a sentence and \u628ash it into SOV submission",
            "Forth and Postscript really are stack-based in a very real sense. Read up on them.",
            "\u628a has entered the chat",
            "Who's to say that we should limit this to 1 data type as the owner?\n\nIn some cases I may want to express that the function `f` is defined on a tuple of data objects, `(A, B).f(x, y, z)`. There's no implementation reason why my editor can't auto complete after the second parenthesis, but the language restriction of only a single owner is an English-inspired construct.\n\nTaken to the far other end of the spectrum, `(A, B, x, y, z).f` could match your description even more. I've listed *all* the data I'm operating on, not just the first object, and the only remaining piece to specify is the name of the procedure.\n\nAlso, speaking from experience, my editor has no trouble providing code completion in Lisps, despite leading with the function name first.\n\nIt's constructs all the way down, always has been.",
            "Or like ... I think it was openssl: snake_ATE_A_CAMEL_case",
            "Ah yes, I also use BASH_VARIABLES",
            "Excuse me, I think you mean\n\n    SCREAMING_SNAKE_CASE",
            "    SaRcAsM cAsE",
            "Oh so this is the Italian Case?",
            "That's also just German",
            "CamelCase \ndromedaryCase",
            "PascalCase is CamelCase though, it's a sub type of it. All thumbs are fingers but not all fingers are thumbs.",
            "The problem with SQL is the term ordering. which is designed around the way a human would ask for things:\n\n    SELECT k.id, k.name, c.id mother -- what are k and c?\n    FROM cats c\n    INNER JOIN kittens k ON k.mother_id = c.id\n\nThe aliases are used in the `SELECT` before they are defined. If you're using IntelliSense to pick out columns, this is super annoying.\n\nI usually end up writing SQL like this:\n\n    SELECT 1  -- I'll worry about the selections later, I want IntelliSense!\n    FROM cats c\n    INNER JOIN kittens k ON k.mother_id = c.id\n\nBut! What if SQL were like this:\n\n    FROM cats c\n    INNER JOIN kittens k ON k.mother_id = c.id\n    SELECT k.id, k.name, c.id mother\n\nThe aliases are defined in the \"normal\" manner as in a programming language, where you have to assign variables before you can use them. But that's computer thinking, not human thinking.",
            "SQL I'm fine with, what I don't love is having to juggle Postgres and SQL Server syntaxes quite often.",
            "That's Mongo, I just used it for an example for \"computer friendly\" query structure. I'm not a huge fan, but that's another story.\n\nThe Criteria API in is the way you programmatically construct queries in a more intuitive manner. Too bad it's ridiculously verbose:\n\n    var cb = em.getCriteriaBuilder();\n    var q = cb.createQuery(Kitten.class);\n    var c = q.from(Cat.class);\n    var k = c.fetch(Cat_.kittens);\n    return em.createQuery(q.select(k)).list();\n\nvs JPA QL, which has the same annoying quirks as SQL of terms ordering (`k` in the `select` isn't defined until the `fetch join` all the way at the end), but looks a lot better:\n\n    return em.createQuery(\"select k from Cat c fetch join c.kittens k\", Kitten.class).list();",
            "Case systems apply to nouns. Nouns are open class, and are usually what most identifiers are. Case declension is never regular, at least not in any major language that I know of (I just checked Turkish, just in case, and it's not regular there either, although it's close). \n\nSo you'd have to fit out the compiler with an ability to do a relatively correct morphology on arbitrary words. Which is, I'd say, extremely hard in particular, and impossible in general (as you can have two words that look the same in their dictionary form, but decline completely differently).\n\nLet's take a simpler example: English has noun morphology too, nouns have a singular form and a plural form. Is there a programming language that takes an advantage of that (other than Inform 7, as it's probably the only successful natural-looking programming language)? So for example, if I define a `widget`, then does `widgets` also become a meaningful something?\n\nIn general, I don't think programming languages fit any natural language morphology at all. Every identifier, be it a variable, function, or type, is a completely opaque blob of letters. This blob is indeclinable, immutable, you cannot change, add, or remove any letters to it under any circumstances. Which is why case systems,  as an example of a morphology, are not a thing in programming languages.",
            "> programming language's grammar bears **no relation** to natural grammar.\n\nAnd this\n\n> Case in point, `while me hungry apple eat` is not a sentence in the English language.\n\nDoes not prove any point. Nobody said programming languages == language. They're influenced and for you to say \"no relation\" is just patently false. My case in point from before `if (I'm hungry), then {I eat}`. That **IS** a sentence, and I also didn't say anything would *be* a sentence.\n\nThe word `if` itself proves my point. It's a conditional in programming and English.\n\nHere's the crux - modern programming languages aim for a readable structure, resembling natural language sentences to make code easier to understand and maintain.\n\nNow imagine if Germany developed the first computers and programming languages. You'd need to read it like a German reads with different grammar structures that make little logical sense to English speakers without learning it.",
            "There\u2019s no difference when you\u2019re talking about a national champion company.",
            "\u00a0 I feel like this would be shooting themselves in the foot. I know Huawei is huge in China, but so are other domestic brands like Xiaomi, Vivo, Oppo, etc etc. All of which use the Android ecosystem, and thus have access to countless apps. How does Huawei plan to play ecosystem catchup from scratch?\u00a0 A game that even Microsoft (that only had to contend with relatively \"young\" versions of Android/iOS) failed miserably at.",
            "To be fair... you take three normal languages, lock them up on an island for 900 years, and some weird shit is bound to happen.",
            "What do you mean I cannot know how to pronounce a sentence without the full conversation?",
            "\ud83d\ude02\ud83d\udc4c",
            "\u628a would be a verb with an implied subject much like it would be in English",
            "you stop that",
            "The bash naming convention is actually lower case for non exported variables and upper case for exported variables. But some people just love  upper case.",
            "\uff26\uff35\uff2c\uff2c\u3000\uff37\uff29\uff24\uff34\uff28 case",
            "italic?",
            "snake_ATE_A_CAMEL_case",
            "prql does something like this",
            "ts/js has a similar issue with their destructuring syntax. if you want autocomplete you need to first write\n\n    const x = foo;\n\nand then you can replace x with the destructure\n\n    const {fieldA, fieldB, fieldC} = foo;",
            "whether the select comes at the beginning or end is entirely trivial, and I doubt it is the source of any real pain. the complaint seems purely theoretical to me, rather than practical.",
            "Re-arranging the order doesn't make it easier or harder to read you are inventing problems that don't exist.",
            "> Let's take a simpler example: English has noun morphology too, nouns have a singular form and a plural form. Is there a programming language that takes an advantage of that (other than Inform 7, as it's probably the only successful natural-looking programming language)? So for example, if I define a widget, then does widgets also become a meaningful something?\n\nNot a language, but Rails has an inflection system that automatically handles pluralization (and can handle many of the more common irregular plurals) in certain situations to allow for more natural sounding method calls, e.g. if you have two models, `Widget` and `Doodad`, you can declare a relation that `Widget` `has_many :doodads` and it will automatically infer the correct class for `Doodad`.",
            "No need to imagine. Germans did develop the first structured programming language.",
            "Huawei has already a lot of apps ready to be compatible with NEXT. They have some build tools to ease that problem. Apparently they are partnering with game studios and application makers for it.",
            "Your biweekly reminder that you don't know what \"biweekly\" means, nor does anyone.",
            "So PHP?",
            "Chuckle. There are days where the internet is truly a joy. Thank you.",
            "Worse, you can't pronounce a word until it is written completely, and even worse: The word read can be pronounced read or read.",
            "Nah, I'm talking about [these kinds of sentences](https://resources.allsetlearning.com/chinese/grammar/Using_%22ba%22_sentences).",
            "I think the issue is that a lot of tutorials either never make that clear, or flat user all uppercase for everything.\n\nI also, correctly, or incorrectly use all caps for variables defined in sourced files.\n\n\t> cat commonFile\n\tDISTRO=$(lsb_release -si)\n\tCODENAME=$(lsb_release -sc)\n\tVERSION=$(lsb_release -sr)\n\n\t> source commonFile\n\t> echo \"${DISTRO}\"\n\tDebian",
            "i think that's called what my wife likes case",
            "It 100% is, but having been forced to work with it (C# LINQ, sql syntax) AND SQL at the same time, it made me hate LINQ, because it was horrendous to read.\n\nEvery other place Ive worked has used chaining LINQ instead. Its only MS that loves the sql type syntax. \n\nSticking to convention means a ton syntactically.",
            "The example is not about reading it, but about how it feels to write the code. First you think about \"where\" do you want data from, and then \"which\" data you want and in what shape. While SQL forces you to first write \"which\" data and shape, and only then the \"where\" is it located part. Which makes you write code bottom-up.",
            "Really? What was it? And I'm sure it's not really relevant to the debate here simply because we're talking modern programming languages, but I'm curious.",
            "In the UK, fortnightly means every two weeks, so there's a default assumption that biweekly means twice a week. It's still not 100% accurate.",
            "To be fair that is also the case in Portuguese and Spanish at least.",
            ">The word read can be pronounced read or read.\n\nThe natural order to read the pronunciation is \"reed\", \"red\".\n   \nFite me irl.",
            "\"red\", \"red\"",
            "You're missing re-add; to advertise something for a second time."
        ]
    },
    "Let's write a video game from scratch like it's 1987": {
        "title": "Let's write a video game from scratch like it's 1987",
        "score": 19,
        "url": "https://gaultier.github.io/blog/write_a_video_game_from_scratch_like_1987.html",
        "content": "",
        "num_comments": 1,
        "comments": [
            "Wow. Would like to reproduce in c,cpp, and rust. (And D!)."
        ]
    },
    "Why Swift's type checker is so slow": {
        "title": "Why Swift's type checker is so slow",
        "score": 15,
        "url": "https://danielchasehooper.com/posts/why-swift-is-slow/",
        "content": "",
        "num_comments": 2,
        "comments": [
            "Repost?\n\nhttps://www.reddit.com/r/programming/s/DHZFidGTL7",
            "This guy's face haunts my dreams, it's diminsions are only rivaled by its intensity.\n\nPlease stop reposting this man, my doctorr has affirmed that five hours of sleep a night is not enough"
        ]
    }
}