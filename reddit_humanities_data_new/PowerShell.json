{
    "What have you done with PowerShell this month?": {
        "title": "What have you done with PowerShell this month?",
        "score": 83,
        "url": "https://www.reddit.com/r/PowerShell/comments/1d5letk/what_have_you_done_with_powershell_this_month/",
        "content": "",
        "num_comments": 161,
        "comments": [
            "Started using powershell 7 :)",
            "I converted my onboarding script from MSOnline and Azure AD modules to Graph and thus said goodbye to PowerShell 5",
            "connect to a computer, list all the USB printers by number the computer has. you select the printer you want, it renames the printer and sets the share on the printer.",
            "The same thing I always do pinky. \n\nWrite simple software installers the engineers are too lazy to write themselves...",
            "Creating a script to read data coming in from a serial port (Daktronics) and use a reference csv file to match the raw data to correctly output racing splits",
            "I automated SSL certificate creation/approval/download using the Sectigo API using a CSR automatically created with OpenSSL.",
            "I wrote [Decode-AsusRouterConfig.ps1](https://github.com/VladDBA/Asus-Router-Config-Decoder) - a script to decode Asus router config backups and retrieve admin username & password, and SSIDs and passwords.\n\nThis is besides my constant work on [PSBlitz](https://github.com/VladDBA/PSBlitz) (a PS script that outputs SQL Server health and performance diagnostics data to either Excel or HTML, and saves execution plans and deadlock graphs as .sqlplan and .xdl files)",
            "Wrote a function that takes an array of objects and turns their properties into into columns and then uploads them into an azure storage table, I built a powerBI report that reads the azure table and pretty visual visuals",
            "Work related \n\n- uninstall stubborn apps\n- Patching\n- get win logon events\n- created a del profile except mentions profile (Extremely proud of this one)\n- create a deployable debloater\n- create a script to boot pc in Safe mode , add a run value to launch the uninstall of an AV , take the pc out of safe mode and restart it back into normal",
            "Found that the C/C++ compiler for Windows has a powershell command line as well as a CMD one.",
            "Deployed a logon script that collects the user\u2019s work station information (Get-ComputerInfo) and save it to a network share so I can have my Jira process pick them up and update my Asset Management project.",
            "Made it possible to export a discord channel to html file with text, embeds, and attachments all getting preserved.\n\nUsed pode.web",
            "Updated most of my VPN creation scripts and wrote a new one for our second largest customer to create the connection, then import a user-specific cert for the third part of the authentication based on their domain username pulled using $env:username. \n\nAs a side note, I learned about new-psdrive and that you can utilize it for just that script to reduce potential vulnerability footprint. That was a fun one to put together.",
            "With the help of AI, I was writing some code to cap the memory of a process at 10 GB due to a memory leak. \n\nStarted getting deep into the weeds with working sets and privately allocated memory and went down several rabbit holes",
            "worked powershell graph api sdk",
            "Created an RSS feed reader for the Distrowatch torrent feed to share some of my bandwidth. It grabs the RSS XML into an object with room for tracking status/history, then filters using switch to get my favored projects, checks that it's new to me, downloads the torrents, and commands a tiny computer to start the download and seeding. Took about 45 minutes to write 30 lines of well spaced readable code with a tiny rabbit hole to find an efficient language to embed for the XML processing to then relearn that PowerShell doesn't need XML commands, it's native, you just cast the type using [XML] and get an object.",
            "I have a folder of employees that I put training certificates into. Licensing people want to see certificates for some stupid reason. I automated the process of moving them out of our LMS and into a network share that contains folders in each employee's name.\n\nHR fell in love with these folders, of course. They wanted to create a bunch of new subfolders in these employee folders: Education, Background Checks, Evaluations, Medical, and a folder called Training which all the certificates that were already in the folder needed to moved into. There are 800+ employee folders and over 6000+ files in the folders.\n\nI am a Database Developer and not a Systems guy, but I have used PowerShell before and I knew that PS was the tool I needed. With a bit of research and testing, I gummed up a script that did all the things. I use it so infrequently that I still get a thrill when I see the progress flying by in the PowerShell window.\n\nEdit:[ I made a screen capture of it to show to folks](https://www.youtube.com/watch?v=gfBixFgHw18)",
            "Created a script to deploy and link group policies across many disjointed domains from a central repository. Deployment and management of multiple domains just got easier.\n\nCurrent the repo is git but it\u2019s flexible",
            "I created a AD users to contacts script. Needed it after a security assessment where we discovered 600 users that had never logged in before. Turned out someone created user object for external contacts.\n\nScript is here. https://github.com/mfgjwaterman/Powershell/blob/master/Scripts/Convert-UsersToContacts.ps1",
            "After many years of trying finally found a way to list logged on users that does not rely on cleaning up text output of the \"QUSER\" command in WIndows.\n\n    <#\n    .Synopsis\n    \u00a0 \u00a0Get's a list of currently logged on users on a Windows computer\n    .DESCRIPTION\n    \u00a0 \u00a0Queries WMI class Win32_UserProfile for user profiles which have a proprty of \"Loaded\" which means the profile is loaded and therefore the user must be logged on\n    .EXAMPLE\n    \u00a0 \u00a0.\\Get-LoggedOnUsers.ps1\n    .EXAMPLE\n    \u00a0 \u00a0.\\Get-LoggedOnUsers.ps1 | Sort-Object LoginID\n    #>\n    $UserProfiles = Get-WmiObject -Query \"SELECT * FROM Win32_UserProfile \u00a0WHERE Special != TRUE AND Loaded = TRUE\"\n    foreach ($Profile in $UserProfiles)\n    \u00a0 \u00a0 {\n    \u00a0 \u00a0 $UserID = $Profile.LocalPath.Split('\\') | Select-Object -Last 1\n    \u00a0 \u00a0 $LoginTable = [ordered]@{'LoginID'=$UserID}\n    \u00a0 \u00a0 $LoginID = New-Object -TypeName PSObject -Property $LoginTable\n    \u00a0 \u00a0 Write-Output -InputObject $LoginID\n    \u00a0 \u00a0 }\n    \n\nParsing QUSER text output **The old way**. . .\n\n    Function Get-LoggedOnUsers\n    {\n    (quser /server:$ComputerName) -replace '^\\s+|^>|\\s+$' `\n        -replace '(?<=^(.{22}|.{41}|.{45}|.{53}|.{64}))', \"`t\" `\n        -replace \" *`t *\", \"`t\" |\n        ConvertFrom-Csv -Delimiter \"`t\"\n    }\n\n  \nWhat I found while helping someone else here on reddit was that the WMI Object \"Win32\\_UserProfile\" has a property for accounts who are currenlty logged in. That property is \"Loaded\" or in otherwords the Windows profile is loaded which means they are currenlty logged on. Filtering for any accounts that run services and other \"Special\" accounts you get a list of real loggedon users. Until I see otherwise this will be my script from now on.",
            "Created a module to load a SharePoint list (either on prem or online) in memory and index it by columns for lookups (to save time), and then write adds, updates, and removes to the actual list (while making the same change in memory). But the crown jewel is it also backs up the list  - which is importing bc there\u2019s no native way to save an SPO list.",
            "Get-content and output to printer lol. Recursively printed every file in a directory!",
            "Nothing.",
            "Wrote a script to transfer an entire wordpress site to another server including the db, yes..within Windows",
            "I finally took the time to make some custom powershell modules to deploy fully configured VNETs, VMs, and NSGs in Azure to use when building out Azure environments for our customers.",
            "Created a tool with the new graph module that searches for users then returns all the 365 groups they are in.\nThe console looks something like\n\nEnter name: joh\n\n1 John smith\n\n2 John Doe\n\n3 John wick\n\nSelect a user: 3\n\nGroups John Wick is in\n\nGroup1\n\nGroup2\n\nBlah\nBlah\nBlah\n\nMy lead asked for a quick way to see all the groups a user is in without having to go through the Microsoft admin site. I made a script to build a new user and sometimes he wants to see what groups the new user should be in based off a user with the same job",
            "I find just doing exercises to practice doesn't work for me so I instead help with public projects.\n\nThis week I have been using it to update/fill-in the information about podcasts that Wikipedia's database has, I do this by first querying it's API, then the Apples podcasts API and finally  outputting the results in its scripting language.",
            "Did a few different things this month!\n\n\\* Created a script that is triggered by PRTG and monitors SQL Database Mail Logs every 10 minutes for any failed emails in the last hour. Has logic in it that tells it to double-check it's a real failure and if so try to send a test email to us.\n\n\\* We have a major issue with the amount of SQL Mail our DBA's send so i was able to generate a report of SQL Mail sent in the last 30 days from all our production SQL servers. The script goes through each recipient, gets the nested group memberships whether they're internal or external contacts and gets the \"real\" number of emails sent which is something like 930k and 90% of it going internally smh.\n\n\\* I updated our password expiration daily reminder script to send a report to each manager with their users that need to update their password in less than 5 days. We have way too many users who let their password expire and just causes stupid tickets so we're going to hold managers more accountable.\n\n  \nFrom just doing these 3 things recently it made me so glad that I started to use functions and modules so heavily like a year and a half ago. Makes things so easy to edit now!",
            "I worked in some scripts for tenant-to-tenant migrations.\n\n1. The first script adds an alias with a replacement domain to all users and mailboxes of specified domains.\n2. The second script goes through all users and mailboxes and removes aliases with the specified domains, so that I can remove the domains from the tenant.\n3. The third script is used after the domain has been added to the destination tenant. It reapplies the domains to the correct users and mailboxes, according to a CSV file.\n\nIt worked very well for a migration of 500 users.",
            "Queried the NSX API to grab all configuration and format it in to Terraform config, which we're now using to manage NSX changes going forwards.",
            "Reworked some scripts that I'd built for things like AD creation and folder creation.",
            "Used the Security APIs via Restmethod to automate periodic policy push for MDE-Managed Defender for Server devices instead of having to click \"Sync Policy\" and add a note for each machine.\n\nAutomated the detection of all roles marked by MS as privileged via automation account and and update conditional access policy for Admins in Azure to enforce Phishing resistant MFA for new roles marked as privieged automatically.",
            "Educated some coworkers on PS who weren't familiar with it. Was able to show them how our home-built exchange management tool works on the back end. Also rebuilt one of my scripts and tested it on a VM to make sure it could be launched on a fresh system without needing to know much about PowerShell. Really focusing on making sure I'm replaceable lol\n\nAlso massively confused myself because the script that maps my network drives upon login now runs, but they don't show up in explorer. Still accessible, just not where the other hard drives appear.",
            "Some sql server backups during a 5 version step migration of a dms. \n\nFixed AD Attribute Homepage for 350 users, since it has a typo that nobody noticed for 4 years. (It's in their mail footer).\n\nProfile/ home folder migration script, that only picks the needed folders an fix the brocken ntfs rights that are occoured during the last migration.",
            "I created a backup and a recovery script\nThe backup script runs on an azure application and looks for all azure dns zones and exports the recordsets into a json file on a blob storage. That way we have a backup also for newly created dns zones.\n\nThe recovery script iterates through the json file and resores each recordset including metadata",
            "Converted many PowerShell scripts to JScript because it is so much faster and avoids the console window being displayed and many other problems.",
            "Trying to make a script to remove a list of our e-wasted machines from Ad and SCCM. I have a one liner for AD. SCCM is a bit difficult. I\u2019m still really new to PS but want to automate a lot of my non physical workflow. \n\nMy favorite thing was a \u201cshopping list\u201d of AD groups that we can put out newly imaged computer. Make the list then push out software. Saved us a ton of time lol. \n\n\nMe and a few coworkers made a \u201ctoolbox\u201d I want to upgrade. It prompts for credentials and we use out uplift/admin accounts. It has some menu buttons that let us  remove a single computer from SCCM and AD and tells us the OU. It also has buttons for programs that launches under our admin/uplift accounts like AD, remote control program, SCCM manager and power shell ise. \n\nMy boss and I are learning powershell as it\u2019s not really needed in our field services/desktop support role. We both tend to ask ourself \u201ccan this be automated?\u201d",
            "Cleared out users recycle bin, disabled tls cipher suites on servers, ran Sharepoint on prem server product config after patching, got a \ncount of our vms on VMware on specific hosts. And remotely made my former teammate at the help desk computer beep randomly",
            "Tried to make a script on ps to get a list of mailboxes that I have delegate access to (no admin).",
            "Created a script to be used with PDQ to record all pgp keys held in kleopatra on user workstations. It's not perfect since it requires the logged in user but is a lot better than nothing.",
            "Wrote a script to read a json file. Figured that some day I\u2019d need to manipulate that format. Next step is saving to csv and emailing.",
            "Wrote a script that pulls the list of all apps installed on a machine. Matches the list with the lists I want to be installed using chocolatey. Reinstalls the app using chocolatey.",
            "Pull vuln analysis from the Tenable API and export to Excel. Had trouble utilizing the builtin csv export since pluginoutput often includes commas. Plus its nice to be able to format the data automatically.\u00a0\n\nAlso used it to install a lot of \u00a0Splunk forwarders and Trelllix agents via PSRemoting this week.",
            "Last week made a simple script that when run from intune, checks the users laptop battery condition (% of brand new battery) along with a few other battery parameters and then emails the results to me via make.com integration. This group is around 25 users, so it works for me to see who should get a replacement battery before the next hw refresh.",
            "Did a few different things this month!\n\n\\* Created a script that is triggered by PRTG and monitors SQL Database Mail Logs every 10 minutes for any failed emails in the last hour. Has logic in it that tells it to double-check it's a real failure and if so try to send a test email to us.\n\n\\* We have a major issue with the amount of SQL Mail our DBA's send so i was able to generate a report of SQL Mail sent in the last 30 days from all our production SQL servers. The script goes through each recipient, gets the nested group memberships whether they're internal or external contacts and gets the \"real\" number of emails sent which is something like 930k and 90% of it going internally smh. Next step id like to add to this is checking which users are in redundant groups \n\n\\* I updated our password expiration daily reminder script to send a report to each manager with their users that need to update their password in less than 5 days. We have way too many users who let their password expire and just causes stupid tickets so we're going to hold managers more accountable.\n\n  \nFrom just doing these 3 things recently it made me so glad that I started to use functions and modules so heavily like a year and a half ago. Makes things so easy to edit now!",
            "Built a script to create windows install flash drives simultaneously instead of sequentially reducing the time to create said drives (3 drives, but can scale to the limits of your devices usb bus and ssd speed) from 21 minutes to ~8 minutes. Figuring out and learning how the start-job command works was challenging but worth it!\n\nEdit: these drives don\u2019t use .wim files. They use full flash update files (.ffu)\n[docs- image a computer in 2-3 minutes](https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/deploy-windows-using-full-flash-update--ffu?view=windows-11)",
            "Wrote a script to download and run Dell Command | Update.",
            "Put elapsed time in all our scripts to compile a \u201cHow much time saved\u201d report.  No one is gonna admit to time taken for a manual process. Automation time can easily be generated.",
            "Made a web application where you can trough smart card and or id trough smartphone application in Sweden reset your own password in AD",
            "Made a tool to pull commvault reports from commcells across the enterprise.",
            "Wrote a script to reset users' MS Edge after they all stopped being able to open it after an update.",
            "Wrote a script with a gui to download and install Dell drivers you choose at a click of a button for our tier 1 support. \n\nContinued to write a script to scrape user data for data transfers for to new PCs we deploy. Started looking into how I can save printer drivers and configs to move between computers.",
            "Deactivated two local admins on every citrix server, domain controller and print server that our msp created a few weeks ago for a possible rollout of some software and as they didn\u2018t react to my ticket i did it myself",
            "I wrote a tcp/udp port sniffer. Then a session tester.\n\nWas troubleshooting \"down/recovered\" notifications being sent by one system on the receiving end of interface transactions from another system.\n\nMy theory was that the \"sensor\" being used to determine if the interface was in a \"down\" status was simply reacting to tcp handshake packets. Unfortunately the alerting system is a black box on our end, so I had to nibble around the edges by trying different approaches to connecting/disconnecting.\n\nUsed the script to establish tcp sessions hold the session for long enough to match notification emails to specific tests, then drop the connection and establish a new one on the next port on the list. Set this up with each IP, Port, and delay as parameters for easy iteration of different tests.",
            "Used it to parse the JSON dump of our call center call flow since the web portal has no easy way to extract info from it. And the visualizer is kind of junk.",
            "Import two spreadsheets, creating a hash table from one while manipulating the data from the other row by row, to create dozens of other spreadsheets with prper labels, sheet names, and tables based upon multiple criteria.",
            "My big thing this week was creating a script to bulk invite 80+ guest users to our tenant, and set some attributes required onto the newly created user account.\n\nI wanted to also be able to on the fly modify external collaboration domain allowlist, but I couldn't find any support for that in the graph module and even the AzureAD cmdlet was pretty poorly documented, so I just did that by hand.",
            "Used it to run robocopy lol",
            "Same thing I did last month,  everything.",
            "A lot of freelance projects \ud83e\udd29",
            "Everything. I'm burned out.",
            "Improved the load times of my custom vmware module for horizon and vsphere functions so that it doesn't rely on powercli as a whole but the modules needed.\n\nAlso updated a custom function I have for horizon api queries and filters, so if our helpdesk enters an application, desktop, or server name and one already exists with a partial match (say they got a prefix or part of a name wrong with our naming standard) it'll output the match to confirm.\n\nTimed getting all of our horizon data, including formatting and the machines in vsphete that are in horizon (my team can't see all servers in vsphere because we only manage horizon) to less than 15 minutes and we have alot of stuff",
            "Wrote a script to collect perfmon data from windows laptops and upload to New Relic.",
            "Used our MDM to push our a PowerShell script that uses winget to remove the junk software that users installed on their devices.\n\nGood luck to anyone who wants to fight the script and reinstall the junk every four hours.",
            "Created windows ci/cd pipelines with gitlab runners to build and deploy apps. With the runners running on pws7 and all scripts and functions being written in Powershell.",
            "Build a script that generates ad-users for a testenvironment. Names are generated by grabbbing random first and lastnames from csv and txt file, a parameter dictates how many users are created. SAMaccountname is based off of first and lastname, if it is taken, it randomly generates a new one based on users fullname until a unique one is made.",
            "Create two small script to find out all computer object that not login from 90 days then delete it :))",
            "For me the question is what haven\u2019t I done with powershell.",
            "Creates a script that accepts a specific user's unique ID number as a required parameter to search two Active Directory OUs based on the UserPrincipalName property. It then deletes the account found in the Visitor OU if one exists, then it enables the account in our full access OU by restoring its UserPrincipalName to user ID number and department code without any disable flags created by our disabling script. It will also tell you if the user only had a visitor profile and no full access account.\n\nI'm currently working on allowing the script to accept an optional parameter for account expiration date, and a few other fields, too. I'm running into a hiccup with setting the expiration date, however, as the date provided results in a date set one day earlier than requested.\n\nMy ideal next step, is to find a way to turn a PDF into a usable CSV, and use that as feeder information into my account enabling script to update all tracked fields we use for account requirements.",
            "Created a bulk update script for our 5000+ AD users to change some properties like street address, city etc.\n90% done with ChatGPT \u263a\ufe0f",
            "Pull calendar events from sales accounts in365  and populate a table with the data for powerBI and other tools to ingest.\n\nRuns as azure runbook few times/day.",
            "Took a list of servers from SQL and catalogued all of the IIS application pools running on each, then parsed the app pool names to identify which customer each one belongs to.",
            "Not done yet, but I'm working on a script that finds all the .NET software installed on a device. It identifies those that create vulnerabilities and automatically updates them to the latest version using winget.\nThe code is reusable and not version-dependent, so I can deploy it to any machine in my corporate environment.",
            "I started playing with PSSVG to draw SVG images, which also involved learning how SVGs work.  Pretty cool stuff.  Drawings as code are my bag, baby.",
            "Written PowerShell scripts to manage group based licensing like   \n-assigning licenses via groups, \n\n-finding users license assignment path (whether the license assigned via group or directly), \n\n-identifying duplicate license assignments, \n\n-getting status of group based license assignment.",
            "Published PoshSvn",
            "Converting various node.js and python scripts to powershell, for better integration into our overall system, since we are about 90 percent windows and powershell is more maintainable with our team.\n\nUsed zxing to create a script that takes manual paperwork scans and using the barcodes in the images and information from a SQL server confirms that we have all paperwork for each day. Replacing an ancient batch scanning software requiring licensing. \n\nUsed PSWriteHTML to create a daily production report then used print to PDF with a headless edge browser to print it to a PDF and email it out.\n\nCurrently working on a similar process with an inventory report, though the result will just be emailed with the HTML as the body. \n\nWriting an API wrapper around our low code automation cloud provider to teach myself how to build modules and hopefully make it easier to use since the documentation on the API itself is terrible. About 1/4th through it. \n\nVarious other small Database queries and jobs. I'm finding it very intuitive to use SQL with powershell for reporting, which is nice change from needing additional libraries and things to query oracle databases in other scripting languages.",
            "Greatly improved our NewPC script (small company, don't qualify for volume licensing and therefore don't qualify for imaging rights) - What started as a pretty simply script to set some Windows settings and join the domain now uninstalls default windows bloat, installs and joins the computer to our RMM, and installs our A/V!\n\n  \nI totally copied the debloat functions and repurposed them, but the script as a whole is a creation of my own (and the RMM and A/V portion I did code entirely myself!)",
            "Setup [Perplex](https://github.com/EthanC/Perplex). It\u2019s awesome.",
            "Used chatGPT to show me how to parallelise an existing script which searches for a list of IP addresses or subnets within a dump of routing tables. I have site ids against those routes also so now given a list of IPs or subnets I can find out which buildings they\u2019re in easily. It now runs around 4-5 times faster.",
            "Updated automation scripts to use EntraId Application Registration for authentication. \n\nUpdated scripts to use Graph API in favor of Azure AD. After some days of getting a feel for Graph, i think its a better scripting platform. Easier to fetch data vs the traditional cmdlets.",
            "Finished updating our inhouse scripts with Graph cmdlets and putting it into production. Also found out the [powershell.org](http://powershell.org) youtube channel has several videos about working with the Graph API from the recent Powershell Summit.",
            "Script that renames GoPro videos so that they sort properly, and in order the videos were taken.",
            "Not much.  While returning from a holiday last week, I wrote a $PROFILE script to autocomplete [ollama](https://github.com/ollama/ollama) commands.  Probably the first time I did something useful with Register-ArgumentCompleter.  I also began writing a script which converts SteamID types.  I'm sick of doing it via third party websites.",
            "A while back I wrote a very rough script to replace some functionality of MDT using more modern technologies and techniques. I was not fully happy with the script but I learned a whole lot about what was required so I took another stab at it last month and Wrote [JINX](https://github.com/mrbiggbrain/JINX) which is my first stab at writing a replacement for MDT. \n\nRight now it's a glorified install script for Windows 10 but I am working on adding additional functionality. My end goal is to have an imaging process that can use modern web systems like S3 and HTTPS REST APIs to automate the configuration of computers with internet connections.",
            "getting data using API and enrich data, and manipulate",
            "Combined two modules together to give a quick'n'dirty TUI for Winget:\n\n\\`\\`\\`  \nfunction WingetTUI{  \n\u00a0 \u00a0 get-wingetPackage | ? IsupdateAvailable -eq $true | ? InstalledVersion -NotMatch '<' |Out-ConsoleGridView | Update-WinGetPackage -Mode Silent  \n}  \n\\`\\`\\`\n\nSee [Quicknote: Winget + ConsoleGUITools = TUI (pontifextech.blogspot.com)](https://pontifextech.blogspot.com/2024/06/quicknote-winget-consoleguitools-tui.html) for screenshots/links.",
            "I just wrote my first script. With syntax help and PowerShell ISE it's not as hard as I thought it'd be. I wrote the one that adds a VPN connection. Kevin Brown is my instructor. Labbing AD and it covers some PS.",
            "Spent way too much of my time migrating scripts that used AzureAD and/or MSOL modules and trying to get them over to MgGraph.\n\nAll I can say is that this MgGraph module, or should I say module(s) are all stinking pieces of $hit. OMG...",
            "I needed to send tome special files over email, they were blocked by the firewall (either there was a ps1 or a batch file, or the zipo package was encrypted and couldnt be scanned).\nSo I made a script that compressed, encrypted(aes) and converted the file in a pdf document. The text inside the pdf document contained the file name and data. I sent the pdf and the other side converted the pdf to original file.",
            "It's only been a day...",
            "It\u2019s the weekend\u2026.and only the second day of the month.  F\u2019 off with your unpaid work on my off time nonsense.",
            "Next level, it\u2019s a significant improvement. I love it.",
            "I need to get around to doing this.\n\nI briefly glanced at the documentation for it and quickly got annoyed.",
            "I need to do this. The documentation for Graph is just awful.",
            "I just made my first MSOnline script this past week and am looking to Graph API for the email notification part of the script and I'm very annoyed at the setup...",
            "I keep trying to do this, but keep getting stuck on a few things. \n\n\n-  can't add users to traditional distribution lists (have dozens, org heavily relies on them, and doesn't want to recreate them as groups)\n\n\n-  can't add users to SharePoint groups to give access to sites (at least not that I have found)\n\n\n-  can't enable litigation hold on the new account \n\n\nVery frustrating that not everything is supported. Everything else is done and ready and can be done automatically, but those would require more legwork to automate with the older modules and making a new service account and blah blah. Stupid Microsoft.",
            "Ya got a sanitized version for us peasants?",
            "hey u/HerrJacuch  do you have this documented anywhere? (like git repo?) very interested myself on stop using powershell 5 :)",
            "i gotta ask...how many USB printers do you have?",
            ">the engineers are too lazy to write themselves...\n\nMy daughter worked at my job for three months after graduating from college. That is the first thing she did for me to help me with all my in-house apps. That was 5 years ago and those install files are still in use plus they have been copied and repurposed a dozen times. I went without those files for about 18 years haha. Sheesh, guilty as charged.",
            "That's very cool, how do you interface with the serial port/data?",
            "I could really use this, would you share the script?",
            "My boss has been throwing the need for something like this nonstop, do you have a version you could share?",
            ">create a script to boot pc in Safe mode , add a run value to launch the uninstall of an AV , take the pc out of safe mode and restart it back into normal\n\nCould this be run remotely or does it require user interaction after the boot into safe mode?\n\n>uninstall stubborn apps\n\nDoes this include apps installed with EXE or.is this for MSI installed apps only?\nI've been trying to make a silent uninstaller for all apps but not all EXE apps have the ability...or at least that I've found",
            "Do you mean that the binary is callable, that there are PowerShell functions to call the libraries (e.g DLL loading), or something else?",
            "Did you use GPO to get the login script pushed?",
            "I like this one. We manually update our asset list in Jira",
            "I love the ease of the native PS cert utilities as well as the abilities of Get-ChildItem to navigate the cert store. Also, the abilities of PSDrive to interact with databases is neat =)",
            "It's very easy to follow those rabbit holes for me.  Sometimes I get so fricken far down them I forget why in was even there distracted by the new shiny method or piece of data I found.",
            "How do you run it?",
            "Oh could i have a look at that? Sounds interesting.",
            "This is awesome. And I didn\u2019t realize there isn\u2019t a native way to backup an SPO (just starting using SPO recently). How/Where do you back the list up to? as a csv?",
            "Nice! We have something similar. Make sure to be ready for people with the same name so your script is extensible. Probably best to switch it over to using emails or UPN's as the search string. Also make sure to clear or remove variables if it's not just a bunch of modules. Also also, make sure it runs on different tools (ISE, Terminal, PowerShell, or VSCode).",
            "For SCCM (Assuming you have the console and powershell module installed):\n\n    #I do this in a foreach loop with a list of PC Names\n    $PC = <Name of PC>\n    set-location <Your SiteCode here>:\n    #Remove Device from SCCM\n    Get-CMDevice |where name -eq $PC |remove-cmdevice -Force",
            "Am I missing something that convertfrom-json doesn't do? Cuz that's what I use for jsons. Also user converto-json. Should be able to do export-csv and then email using just SMTP settings with send-mailmessage.",
            "Care to share your script",
            "Could you share the tenable script?",
            "Any chance you could share? We have a lot of imaging to do soon and this sounds like a good avenue.",
            "Simple yet unique. Did this as well",
            "Be interested to know how you got the commands to work. I can't even get connected with Connect-CVServer. We do still use the fat client.",
            "Do everything manually for a while to get that spark back.",
            "Oh and also you\u2019re prompted for which ou( s ) to put the users in, multiple are seperated with ; and the users are put in a random one in the array - else just in users container.",
            "When did you learn it?",
            "Care to share your script",
            "Since I stopped relying fully on documentation and started testing a bit more, it went easier than I expected. Good luck.",
            "I think we're 'supposed' to be transitioning over to new methods to do Litigation Holds, like Data life cycle policies or their ediscovery stuff.\n\nI say this having not done it, either.  I wouldn't expect them to enact support for legacy features, unfortunately.  It's part of how they slowly push us over to what they want.",
            "Unfortunately, the core of the script was written by me a few years ago when I was still at Service Desk. It is disgusting spaghetti code with many illogical solutions. But it works. But the problem is the hardcoded schemas and names used in the company. I would have to clean it up and improve it.",
            "Yes, but actually no. It's on the company's on-prem git instance. And as I mentioned above, the current version is contaminated with a lot of company data, I would have to clean it up.",
            "haha just different models...not always the same unfortunately, so that was the easiest way i could think of to achieve it.",
            "I hope she knows the impact those had. It's really nice to know those little scripts make an impact that lasts. I did a remote session on a device from the department I used to work in and found my scripts still available in SCCM that fixed driver issues that popped up with certain docks. I remember that garbage code, and it makes me happy knowing it's still making a difference",
            "I've sent myself a reminder on my work email to share it tomorrow when I'm back at work.",
            "The method I\u2019m using is not quite as secure as you can make it be, let me sanitize my code over lunch and I\u2019ll post it here for you !",
            "[https://pste.link/ao47u0vj](https://pste.link/ao47u0vj)  \nHere's a link to the code, its chonky at 170 lines, but can prolly be lightened by removing all the verbose stuff. I just use it for a longrunning script that makes the verboseness helpful to detect hangs/api throttling.",
            "hoping that helps!",
            "Something else.\n\nInstead of using bash or cmd, I can call the compiler in a formatted environment for powershell.\n\nEssentially it's powershell 5.1 with functions loaded. It's just nice there's a standard I can point to and say, use this well known default.",
            "I did!",
            "My philosophy;If you do something more than once it can and should be automated.",
            "It's beautiful.",
            "On prem is on your disk. So backup your disk and you have your data. \n\nAll you have with SPO is the recycle bin and version history. Which is *usually* enough. Until it\u2019s not (like, say, hypothetically speaking, someone deletes a list). \n\nOh, and it asserts your items on whatever criteria you want (maybe valid values on the list are >= 0, but you want to be alerted on items where it is zero)\n\nOops. And to answer your question. By default saves a csv under the scripts directory. But it will also return an array for your pleasure. I plan to add the ability to upload the csv to the SharePoint site (by default, or pick another site). There are default limits to the number or age of backups kept.",
            "Thanks\n\nDon\u2019t have access just use ISE under my uplift account. I found a script online I modified to do the task.",
            "Don't you lose nested data when you go from json to csv?\n\nI figure it would be the same issue with trying to export PSobjects with an array or hash member to csv.",
            "I hope they do. I'm interested as well",
            "So you figured out how to download with Invoke-WebRequest as well, eh. That was weird.",
            "Ain't nobody got time for manual stuff. Powershell is the only thing keeping my head out of the water. My real solution will be this new job if my interview today goes well \ud83d\ude02",
            "Sure.\n\n* [Group based license report](https://o365reports.com/2024/05/28/export-m365-group-based-license-assignment-report-using-powershell/)\n* [Finding license assignment path](https://o365reports.com/2024/05/14/find-export-microsoft-365-user-license-assignment-paths-using-powershell/)",
            "I think this is actually one of PowerShell's biggest strengths.  By virtue of its design it allows people to infer actions or future information flows.  Similar to python in the aspect of using understandable (loosely similar to the English language) object naming.\n\nThe more I was using it when I was employed that is.  I found myself thinking and writing to help troubleshoot situations on a machine or something.  It pretty-sesmlessly gives you the ability do CRUD operations against formatted objects of data. Even better it allows a decent set of tools or modules to convert those objects to many easily readable formats or outputs.",
            "I remind her all the time. She did a lot of cool things in the 3 months she was here. Some of the things ended up up being adopted by the whole city, not just our department. \n\nShe went on to bigger and better things but I know she sometimes wishes she was in a situation where she could crank out cool stuff like that again.\n\nThat is the problem with working as an engineer in the big companies. You become a cog in the machine. Where I work is kind of a crappy public sector environment but someone smart can really make a difference.",
            "Thank you!",
            "Yes. This would be very cool to see. We\u2019re doing more with Setigo.",
            "I feel like I need to pester you about this one bro, too sweet to let go.",
            "I'm not seeing it - did you post it in a new thread?",
            "To be honest, I never even thought about it. I mean, it's a pretty simple process. Export csv from rmm, copy paste, but the way we name our endpoints this would work perfectly I think. I'm in a weird environment. The most we do frequently is update software that we get from outside vendors, and hell, we don't even get a release schedule, or at least I can't find one. It's usually a surprise that one has been released. And as far as I can tell, there's no real automation for it.",
            "wow thanks!",
            "There's issues with sending json's in things like API calls because of how they're formatted at times, but usually you can specify the -depth parameter to show how far down it should create the json. I set it to a silly number like 100. Sometimes you need to grab a property and convert that instead, such as API responses that send the status, headers, response, content, and other stuff. I have to convert ($response).content to or from json (forget off the top of my head), and then I get the whole thing like an object. It can be a bit finicky sometimes, but usually not a problem. \n\nAlthough, that's all just handling a json in PowerShell. Sending it to CSV would be something else and would probably require some futsing around to get headers and columns set up.",
            "Yup \ud83d\udc4d\ud83c\udffd I first tested with chrome to have computers download chrome and update them (just for fun)",
            "Samesies working public sector and being in a position that doesn't let me be creative and make useful tools. Just skirt by on as little dev time and innovation as possible lol",
            "I'll be in touch!",
            "https://pste.link/ao47u0vj",
            "My skin crawls when someone tells me it\u2019s part of their job to copy/paste.",
            "Well, in my opinion, it takes seconds to copy and paste, where as creating automation might take...IDK, an hour at the least for a skilled professional, which I am not. 3600 seconds is a lot of copy and pastes. More than my career when I only do it twice a year."
        ]
    },
    "Powershell Useless but fun projects": {
        "title": "Powershell Useless but fun projects",
        "score": 26,
        "url": "https://www.reddit.com/r/PowerShell/comments/1dlo6hx/powershell_useless_but_fun_projects/",
        "content": "I\u2019m making a joke portfolio full of pointless, silly or amusing projects. So far I have a script to have pop up windows with sarcastic error messages, auto launching a Rick-roll, and changing the default cursor to a pickle. \n\nIt\u2019s fun but I need more ideas.",
        "num_comments": 28,
        "comments": [
            "As mentioned elsewhere in this thread, here's the guts from my much longer invoke-catfact.ps1 script I wrote. If you can etsn or ssh into another PC on your domain, this would do the job to randomly play a cat fact on another computer..\n\n    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072\n    Add-Type -AssemblyName System.speech\n    $speak = New-Object System.Speech.Synthesis.SpeechSynthesizer\n    $speak.SelectVoice('Microsoft Zira Desktop')\n    $RandomCatFact = (ConvertFrom-Json (Invoke-WebRequest -Uri \"https://catfact.ninja/fact\" -UseBasicParsing).Content).fact\n    Write-Host $RandomCatFact\n    $speak.Speak(\"did you know that $RandomCatFact\")    \n\nThe full script was set to run as a scheduled task, and would add a random delay of up to 30mins, but then my target kept muting their speakers, so I added a bit to unmute them and set the volume to max.. When they started plugging in headphones, I updated the final version to change the audio back to speakers, unmute, set max volume, then play the 80s \"the more you know\" jingle, and then speak the random cat fact.\n\nThe final script is a bit too long to post here in the comments, but if someone is really interested, either reach out or upvote and i can toss it on pastebin or something..",
            "Set a scheduled task to have powershell invoke the text to speech feature to say random messages at random intervals. I did this to a buddy years ago who kept his speakers at high volume to listen for alerts.\n\nAdd-Type -Assemblyname system.speech \n\n$jerkbot = New-object System.Speech.Synthesis.SpeechSynthesizer \n\n$jerkbot.speak('I am watching you')",
            "Something which sets the user\u2019s wallpaper to a random picture of a goat",
            "I have a function called Get-CatFact that calls the Cat Fact API (Google it) then uses text to speech to read it aloud.",
            "I made functions to roll 6 sided dice, 8ball, d20, and coin flip that I think are amusing",
            "Awesome!",
            "Turn off someones display\n\nPlay a sound file on repeat that they cant stop, even if they close the powershell window.\n\n  \nIve done both through powershell so I know they are possible.",
            "Care to share the script for sarcastic error messages",
            "I've got Snake on Powershell somewhere on my computer still :p",
            "An interesting one I did on Fiver sometime ago was make a script to launch and play 4 copies of the same video on 4 separate screens at full screen. I never really understood the point, but I imagined it as a pseudo-presentstion setup. Was an interesting problem to solve at least.",
            "Makes a GUI that takes up the entire screen with one button labeled \"Exit\". When you try to move your mouse over it, it move away. When it hits the edge it wraps around to the other side.",
            "Wrote a script that opens a random meme from the internet every 5-30 minutes. I put it in my buddy's startup folder so I had to distract him for a sec as a powershell window briefly flashed before hiding but it was good fun\n\n\nYou can also make a tiny keyboard lightshow by making powershell engage scrl/num/caps lock in whatever sequence",
            "Make start button move away from mouse cursor and disable keyboard flag :p",
            "!RemindMe 1 week",
            "I have a function that gives me a random lunch option, and a speech synthesizer tied to ping so I can hear when it's up or down :) simple and actually useful, so maybe not what you asked :D",
            "Play the Star Wars imperial march in tones",
            "Some ideas:\n\n- Draw something in the console, using [ANSI escape sequences](https://en.wikipedia.org/wiki/ANSI_escape_code) to add colors\n- Processian roulette; every time you press `Enter`, a random process is killed\n- Use [`[System.Console]::Beep`](https://learn.microsoft.com/en-us/dotnet/api/system.console.beep) to play a melody\n- Tic-tac-toe in the console\n- Create a custom [`prompt`](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_prompts) function\n- A process monitor, which writes to the console whenever a process is started or stopped",
            "A nodes like web server construct",
            "Wow. You all have too much time on your hands \ud83e\udd23",
            "Powershell's power comes in focus when used with .NET APIs (object-oriented) & common linux tools like sed/awk (strings). Also, writing easily customisable cmdlet functions is fun.",
            "Pastebin pls. I have a colleague who loves cats, and it is my belief they need to learn more random facts about them.",
            "Hahahaha Bastard Operator From Hell stuff this is \ud83d\ude02",
            "Would love to see the full version of this",
            "Please cooperate with the cat fact guy... Joined project, please.",
            "Go get the bee movie and the shrek scripts, randomly select one of the files, then randomly select a line and say that.\n\nI have my powershell window set a random bee movie line as the window title on open. It's perfection.",
            "I used something similar to this to make a coworker's computer say \"penis\" at a random interval between 1-5 minutes or something.",
            "I did something similar on April Fool's to a co-worker several years ago. He used YouTube to listen to music so I'd send random messages at random intervals, making the messages more absurd and tailored to him. He went hours dealing with this before he turned to say something about it to me and saw me barely holding in my laughter.",
            "I will be messaging you in 7 days on [**2024-06-29 11:14:46 UTC**](http://www.wolframalpha.com/input/?i=2024-06-29%2011:14:46%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/PowerShell/comments/1dlo6hx/powershell_useless_but_fun_projects/l9qyghq/?context=3)\n\n[**1 OTHERS CLICKED THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2FPowerShell%2Fcomments%2F1dlo6hx%2Fpowershell_useless_but_fun_projects%2Fl9qyghq%2F%5D%0A%0ARemindMe%21%202024-06-29%2011%3A14%3A46%20UTC) to send a PM to also be reminded and to reduce spam.\n\n^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%201dlo6hx)\n\n*****\n\n|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|\n|-|-|-|-|"
        ]
    },
    "Remove old and add new permissions to document library": {
        "title": "Remove old and add new permissions to document library",
        "score": 1,
        "url": "https://www.reddit.com/r/PowerShell/comments/1dlv1h9/remove_old_and_add_new_permissions_to_document/",
        "content": "I\u2019m trying write a script that will create a document library on a SharePoint online site and give it different permissions to the site.\n\nI can create the library, the relevant group, break inheritance and add the group but I can\u2019t remove the other site groups.\n\nDoes anyone know how I can do this?",
        "num_comments": 0,
        "comments": []
    },
    "SecretBackup PowerShell Module": {
        "title": "SecretBackup PowerShell Module",
        "score": 40,
        "url": "https://www.reddit.com/r/PowerShell/comments/1dl5sb6/secretbackup_powershell_module/",
        "content": "The official SecretManagement module is excellent for securely storing secrets like API tokens. Previously, I used environment variables for this purpose, but now I utilize the local SecretStore for better security and structure. However, I've encountered a significant limitation: portability. Moving API tokens to a new machine or restoring them after a rebuild is practically impossible. While using a remote store like Azure Vault is an option, it's not always practical for small projects or personal use.\n\nTo address the lack of backup and restore features in the SecretManagement module, I developed a simple solution: the SecretBackup module. You can easily export any SecretStore (local, AzureVault, KeePass, etc.) as a JSON file, which can then be easily imported back into any SecretStore.\n\n# Key Features\n\n* **Backup and Restore Secrets**: Easily create backups of your secrets and restore them when needed.\n* **Cross-Platform Portability**: Move secrets between different machines seamlessly.\n* **Backend Migration**: Migrate secrets from one backend store to another (e.g., KeePass to Azure Vault).\n\n# Module Source Code\n\n* **Module Link**: [PSGallery](https://www.powershellgallery.com/packages/SecretBackup)\n* **Repository Link**: [GitHub](https://github.com/belibug/SecretBackup)\n\nIt's a straightforward module. If you're hesitant about installing it, you can copy the source code directly from the GitHub repository.\n\n**Note**: The exported JSON is in plain text by design. I plan to implement encryption in the next release.\n\n**Note 2**: This is definitely not for everyone, It addresses a niche requirement and use case. I wanted to get my first module published to PSGallery (and learn automation along the way). Go easy on me, feedback very welcome.",
        "num_comments": 4,
        "comments": [
            "I'll be happy to be your first official fork on GitHub :). Looking to contribute to this VERY relevant and important project to ANY automation lover.",
            "Nice! That was a pain point I had too. I built one of these for the company I'm at now. You can import/export secrets, and load them up to your session's environmental variables for usage by calling that secret's name. Unfortunately that was specifically for work so I can't release it.",
            "Please do. Call out your contribution in issue tracker so we can brainstorm and track.",
            "I did write adhock export command by simply looping. But it miserably failed to export PS credentials and metadata types. Built this module to address that once for all."
        ]
    },
    "53504 event": {
        "title": "53504 event",
        "score": 1,
        "url": "https://www.reddit.com/r/PowerShell/comments/1dlr5k1/53504_event/",
        "content": "Hello when I recently turned my laptop on after 6 hours turned off (not hibernation) I saw what I think were three command terminal windows open and close in one second. I don't really recall if the windows were blue-background powershell or black cmd but I checked event viewer to see what it might have been and saw three processes in quick succession around that time: powershell opens (40961), IPC listening (53504), then ready for input (40962) happening within a second, but NO remote command is executed (4104) after nor are any security logs deleted. \n\nIs 53504/IPC listening a normal process or should I be concerned? Thanks ",
        "num_comments": 0,
        "comments": []
    }
}