{
    "Introducing React Compiler \u2013 React": {
        "title": "Introducing React Compiler \u2013 React",
        "score": 264,
        "url": "https://react.dev/learn/react-compiler",
        "content": "",
        "num_comments": 48,
        "comments": [
            "One ever present debate in the React community had been whether you should \\`useMemo\\`/\\`useCallback\\` all non-primitive props or not. I've often taken [the position that you should in real world teams because it's too much work to determine exactly when to otherwise](https://attardi.org/why-we-memo-all-the-things/), whereas others argue that it's too much runtime overhead (and noise) and not worth it. u/acemarke has [a good summary of the arguments](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/#memoize-everything).\n\nAll that to say, I was curious if this compiler is essentially the React team conceding that you \\_should\\_ memoize everything. The answer is pretty interesting - [the compiler actually memoizes things in a more efficient way than \\`useMemo\\` can](https://github.com/reactwg/react-compiler/discussions/6). So it's almost the best of all worlds: improved rendering performance from memoization, cheaper memoization cost, and none of the noise of \\`useMemo\\`s sprinkled everywhere.\n\nI think we'll have to wait a bit longer to see if this works out in practice, and I'm not crazy about having to add another layer of transpilation, but if it works well this will be a pretty big win for React projects in general I think.",
            "Conference-driven development is for real :-)",
            "Praying for everyone who\u2019s dependent on esbuild/swc and now needs to add babel back into their build pipeline.",
            "This is awesome!",
            "It\u2019s funny, posts in r/sveltejs of them becoming more like React. And now React becoming more like Svelte. I wonder if they\u2019ve ever thought of actually working together? It\u2019s not like they\u2019re making any money off this stuff right?",
            "It\u2019s happening.gif",
            "!remindme 6h",
            "429/472 components compiled. Interesting and strange.",
            "Would this make Preact obsolete?",
            "I am working on my first react project, I am building a signup form that performs a CRUD operation on MySQL database, (https://github.com/nyendwa/React-Signup). However, though everything looks okay, I am not sure why I am unable to populate my database, I am asking experienced developers to look at my work and point out any missing pieces from my project. Your reviews will greatly put me on a path of great success as a self-taught developer.",
            "Commenting for flair",
            "I\u2019d hardly call it a compiler, but I guess it is to some degree. Really reminds me of what Million.js did like 4 years ago.",
            "Looks pretty hacky. IMO such thing shouldn't exist, rewrite core instead of duct taping more and more stuff on top of existing technical debt.\n\n\nI know Vue, Svelte and others have a compiler as well but that's the build process itself, not a plugin.",
            "Here\u2019s hoping this is not an escape hatch to enable people writing bad codes. (E.g. create a function component inside another function component. Usually it will work but if you got states inside the function component, it gets reset whenever the parent component render. I have seen way too many people doing that and ended up using useMemo.)\n\n\\[Edit\\] I am talking about this (scroll down to pitfall): [This is why you should not nest component function definitions.](https://react.dev/learn/preserving-and-resetting-state#different-components-at-the-same-position-reset-state)\n\n  \n[React Playground](https://playground.react.dev/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEwBUYCAyngIZ4IEC+BAZjBBgQOQwJVx4cBuADoA7UQgAeOfAQAmCJlSgAbQkygi+aCCIIBZAJ4BhNjhEIReABQBKIqIIE4OsIQDazjbRgAaAmTwTLwQYAF0CAF4SMkoaBCsABhthMV0nF0IAFQRXSIJbSIA+AgAeQ2yJPAAxNARlWXTgmAjgT0sQxgB6QtEHAm48WF0rPscSnrTHMezc7tGpkoAjKDw8HQIdI2U0OABrFoKI4uB5qf8EQOh2mCs27wIAagIARhtThnpCrZ3dhAbWq7eRh4TA5EqdZarHQTM7gmEEZKiei9ETqTQg9blSTVWr1AonNLOES5Ny0Sp+AIVPDhKKkCjUWhWDgcRGpRwDIb5eYlNAiLArd4ANyoyigCBaZLwyMmU02AAsqCIAObi4B0I7nPBUqwIAB01BgKrwuuFooQNmlZzmaVZ9BA9CAA)",
            "Yep! I've been hugely enthusiastic about the potential for the compiler ever since the first announcement at the virtual ReactConf 2021.  \n\nThe key thing to understand is that it actually **flips [React's default rendering behavior](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/#standard-render-behavior) upside down.**  Instead of \"recursively render all children by default\", with the compiler it now effectively behaves the way many people always (wrongly) assumed it behaved: **it will now only re-render child components _if the input values actually changed_!!**.\n\nThis is because of [React's \"same-element reference\" optimization](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/#component-render-optimization-techniques) allowing React to skip rendering child components in the same way `React.memo()` does, except that now the _parent_ controls if the child is skipped or not.  \n\nYou could already use that technique yourself, by memoizing JSX:\n\n    const memoizedChild = useMemo(() => {\n      return <TodoListItem todo={todo} />\n    }, [todo])\n\nbut you would have had to add it manually all time.\n\nThe compiler will now do that work automatically.\n\nSo for example, take the common case of a context value that is an object like `{a, b, c}`.  If you do a `setState` in the root and pass `{...oldValue, c: somethingNew}` to the provider, every component that reads the context will still re-render. _But_, instead of all their children automatically rerendering too, anything that reads `contextValue.a` or `contextValue.b` will still have the same memoized children, and thus React will skip re-rendering those subtrees entirely.\n\nThis is a _really_ big deal for perf :)\n\nTalking to the team at the conf today, I also found out that while the compiler relies on a new hook that is in React 19 for the output, they've backported a polyfill of that hook to work with existing versions of React.  So, it seems like in theory you could drop the compiler into an existing React 16.8+ app , add the polyfill, and it _ought_ to work!",
            "That polyfill code is really interesting. So they\u2019re essentially using the state part of useState and mutating it? Now I\u2019m wondering if refs work similarly under the hood\u2026",
            "> and I'm not crazy about having to add another layer of transpilation, but if it works well this will be a pretty big win for React projects in general I think.\n\nI\u2019d take a longer compile time over a longer runtime",
            "I refer to CDC all the time. But in my experience, it's usually introduced when the business side of your company has a looming industry conference coming up, so they decide (without consulting anyone) that the release dates for features is going to be shifted forward months to make the cut. Capacity be damned! Sometimes they even invent features to announce so they can get publicity! No specs necessary or time to prioritize and plan! Just push the code before our presentation you silly code monkeys!",
            "Heh, in this case I was told it was sort of the other way around :) They didn't start planning the conf until January, when they realized they had some features getting close to being ready.",
            "Yeah, that sounds like a no-go for me, but we\u2019ll see how things shake up in the coming months.",
            "Didn't they also somewhat announce a rust version of the compiler as an alternative to babel?",
            "Those tools learn from the mistakes of the other. Fanboys make it seem like there is some kind of war.",
            "React team had plan about compiler for years before Svelte exist. Same with hooks APIs, memorization APIs, etc, they're in plan for years before react team got to start working on them.",
            "I will be messaging you in 6 hours on [**2024-05-16 16:18:21 UTC**](http://www.wolframalpha.com/input/?i=2024-05-16%2016:18:21%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/reactjs/comments/1css9xs/introducing_react_compiler_react/l4abbjp/?context=3)\n\n[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Freactjs%2Fcomments%2F1css9xs%2Fintroducing_react_compiler_react%2Fl4abbjp%2F%5D%0A%0ARemindMe%21%202024-05-16%2016%3A18%3A21%20UTC) to send a PM to also be reminded and to reduce spam.\n\n^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%201css9xs)\n\n*****\n\n|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|\n|-|-|-|-|",
            "It's _very_ much a true, no-kidding, parse-the-AST-and-run-through-numerous-optimization-passes compiler.  See all the talks from ReactConf the last two days, as well as the examples of the compiler passes in the playground:\n\nhttps://playground.react.dev/",
            "Who the f cares where the compilation happens. It doesn't matter, if once it is set up it doesn't interfere with your workflow then it's a non issue",
            "> I know Vue, Svelte and others have a compiler as well but that's the build process itself, not a plugin.\n\n\nWhat's the difference between the build process and a plugin, according to you? I would argue that the build process *is* the list of plugins you are using.\u00a0",
            "That's what Google did with Angular.js > Angular and look how positive the response was to that. The primary production app a couple of workplaces ago became legacy software overnight since there was no upgrade path.",
            "I\u2019m willing to bet that the Vue and Svelte compilers do similar things\u00a0",
            "I *like* that the compiler here is optional rather than required like it is with some frameworks.",
            "if the compiler was somehow able to make it work without performance issues, why not?",
            "The compiler will skip any components of hooks that don't follow the rules of react, so quite the opposite. There's a new eslint plugin to catch it",
            "[deleted]",
            "@acemarke Any idea how the React compiler will affect Redux? Will it make reselect obsolete in some situations?\u00a0",
            "Mark, did the team mention anything about \"use\" acting as a selector when used within useMemo? I hoped that would be included with the compiler at the release of React 19, but I haven't seen any mention of it with the latest docs.",
            "Refs are literally just a plain JS object that looks like `{current: null}` that gets mutated by your app code, yes.",
            "I know that feeling, sending a virtual hug",
            "Meta sure loves Rust, their Relay compiler for GraphQL is also in Rust.",
            "Holy shit, this! Every framework/library is learning off the others, and will for all time. Just use what you can and what you want, if you can. It\u2019s all just JavaScript at the end of the day. Same shit",
            "This. You\u2019d be amazed how well they all know and admire each other both behind and in front of the scenes",
            "I use Vue at work but have been using React for nearly a decade. \n\nThe Vue subreddit is a puddle of React hate and misinformation about how it works. I finally decided to unsub because nearly every thread asking about React had highly unvoted, completely wrong explanations for why Vue was superior. And everyone *hates* JSX.\n\nI'm pretty sure most people with hate posts failed at learning React, though.",
            "Fanboys are like fleas debating amongst themselves the name of their dog host.",
            "I have added a playground link to describe the issue. Will the new eslint catch this problem?",
            "Also for me",
            "It shouldn't affect Redux either way.  Reselect would still be necessary because the store subscription process works outside of React's rendering cycle.  Both our older homegrown subscription logic (React-Redux v7 and v5), and React's current `useSyncExternalStore` hook, rely on doing a subscription and handling comparisons outside of React, and only forcing a re-render _if_ the selected value has changed.\n\nThe compiler optimizes behavior _inside_ of a component while it's rendering, and it includes all hook return values in the dependencies.  (Lauren Tan showed an example of that in her talk today.)\n\nSo, Reselect would still be useful to optimize selectors with derived references (because you need to avoid triggering unnecessary re-renders at the `useSelector` level), and then the compiler will see whatever value you return from `useSelector` and track it through how it's used in the component rendering logic.",
            "It was mentioned on Twitter as a thing that they hope to do at some point, likely in a 19.x release, but there's been no specific implementation work on it yet.",
            "Svelte seems to have the same issues, many people there not happy with svelte 5 cause its too similar to react, not even a discussion about disagreeing with the pattern or what problem it solves",
            "I had to use Vue for my job a few months back and it reminded me how much I hate templating languages",
            "Vue 3 is copying from React.\n\nSvelte 5 is copying from React.\n\nReact is copying from Svelte.\n\nCan't we all just get along?!\n\n(releases new \"standard\" framework)"
        ]
    },
    "Beginner's Thread / Easy Questions (June 2024)": {
        "title": "Beginner's Thread / Easy Questions (June 2024)",
        "score": 3,
        "url": "https://www.reddit.com/r/reactjs/comments/1d6glld/beginners_thread_easy_questions_june_2024/",
        "content": "Ask about React or anything else in its ecosystem here.    (See [the previous \"Beginner's Thread\" for earlier discussion](https://www.reddit.com/r/reactjs/comments/1cio3gs/beginners_thread_easy_questions_may_2024/).)\n\nStuck making progress on your app, need a feedback?\nThere are no dumb questions. We are all beginner at something \ud83d\ude42\n\n---\n\n## Help us to help you better\n\n1. Improve your chances of reply\n   1. Add a minimal example with [JSFiddle](https://jsfiddle.net/Luktwrdm/), [CodeSandbox](https://codesandbox.io/s/new), or [Stackblitz](https://stackblitz.com/) links\n   2. Describe what you want it to do (is it an [XY problem](https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem)?)\n   3. and things you've tried. (Don't just post big blocks of code!)\n2. **[Format code](https://www.reddit.com/r/reactjs/wiki/index#wiki_formatting_code)** for legibility.\n3. **Pay it forward** by answering questions even if there is already an answer. Other perspectives can be helpful to beginners.\n   Also, there's no quicker way to learn than [being wrong on the Internet](https://xkcd.com/386/).\n\n---\n\n## New to React?\n\nCheck out the sub's **sidebar!** \ud83d\udc49 For rules and free resources~\n\nBe sure to check out the React docs: https://react.dev\n\nJoin the Reactiflux Discord to ask more questions and chat about React: https://www.reactiflux.com\n\n**Comment here for any ideas/suggestions to improve this thread**\n\n_Thank you to all who post questions and those who answer them._\n_We're still a growing community and [helping each other](https://en.wikipedia.org/wiki/Learning_by_teaching) only [strengthens it](https://www.swyx.io/writing/learn-in-public/)!_",
        "num_comments": 60,
        "comments": [
            "I'm building out a bunch of small atom components (eg text inputs, buttons, etc).\n\nI want to be able to pass an unlimited amount of attributes (eg data attributes) to each component. I just don't know how to go about this if I don't know the attribute's names before hand.\n\nEg if I have a `<Button>` component I want to set a bunch of data attributes as such:\n\n    <Button \n        label=\"Read more\"\n        link=\"/somepage\"\n        attrs=\"data-tracker-id='abc123' data-js-trigger='js-click' id='button4567'\"\n    />\n\nBut I'm unsure how to add these props in my actual component, without also having to provide a key.\n\n      <a className=\"btn\" {attrs} href={link}>\n          {label}\n      </a>\n\nI've tried many variations of the above and failed.\n\nMy end goal would be to have something compile like this:\n\n     <a class=\"btn\" data-tracker-id='abc123' data-js-trigger='js-click' id='button4567' href=\"/somepage\">Read more</a>\n\nI suppose I could send the attributes as an object, but that seems like a bit of overhead. I'm sure React has a way to do this out-of-the-box that I just haven't found yet.\n\nWould anyone know if this is achievable?\n\nMany thanks!",
            "I have existing knowledge of html, css, and js. I know a significant portion of the basics of react as well (I know about components, props, useState, useEffect, event handlers and im in the process of learning prop drilling and class components.) \n\nHow far do you guys think I am from being able to put together a hireable portfolio? I'm really trying to get hired this summer and i plan on working on this for 95% of the days in the next two months. I also need to learn git/version control and I need better knowledge of routing and testing as well.\n\nI basically plan on finishing up learning react from Brad traversy's 2022 udemy course, then studying git and version control for a few days, then some more learning about the terminal, then cooking up a portfolio, and finally applying to jobs while networking at any irl events in my city (Chicago, IL) trying to create some contributions to some open source projects to add to my resume in hopes that it can convince someone to hire me even though I don't have professional experience or a degree. I'd really appreciate any answers to my main question above or advice/redirection on this plan if anyone thinks I'm missing something.",
            "When JSX recompiles is this done by sub/pub or a event from useState()?",
            "is there a web that cover all reactjs topics (from simple to complex) in like a blogging manner? (not documentation)",
            "what is a good portfolio website like for reactjs or frontend developer, I saw many flex their beautiful looking web, but I feel inferior because I dont know how to design at all.",
            "I am trying to fetch 2 GET requests from my back-end express.js server and display them on my front-end react.js. However,  I can fetch the first request but not the second, although I cannot see anything wrong or missing from the code I have already written.\n\nback-end server.js -\n\n    const express = require(`express`);\n    const cors = require(`cors`);\n    const app = express();\n    \n    // Define the port number for the server //\n    const PORT = process.env.PORT || 5000;\n    \n    // Enable Cross-Origin Resource Sharing //\n    app.use(cors());\n    \n    // Define the route to retrieve the message //\n    app.get(`/api/data`, (req, res) => {\n    \u00a0 const data = { message: `hello from the back end` };\n    \u00a0 res.json(data);\n    });\n    \n    // Define a 2nd route to retrieve the message //\n    app.get(`/api/message`, (req, res) => {\n    \u00a0 const message = `I am the back-end server, nice to meet you!! ;)`;\n    \u00a0 res.send(message);\n    });\n    \n    // Start the server //\n    app.listen(PORT, () => {\n    \u00a0 console.log(`server is running on port ${PORT}`);\n    });\n    \n\n    // front-end - react.js\n    // import useState, useEffect and axios //\n    import React, { useState, useEffect } from \"react\";\n    import axios from \"axios\";\n    import \"./App.css\";\n    \n    // create App component //\n    function App() {\n    \u00a0 // create data and customMessage state variables //\n    \u00a0 const [data, setData] = useState({});\n    \u00a0 const [customMessage, setCustomMessage] = useState();\n    \n    \u00a0 // fetch data every time the component loads //\n    \u00a0 useEffect(() => {\n    \u00a0 \u00a0 fetchData();\n    \u00a0 }, []);\n    \n    \u00a0 // Function to fetch data from the server //\n    \u00a0 const fetchData = async () => {\n    \u00a0 \u00a0 try {\n    \u00a0 \u00a0 \u00a0 const response = await axios.get(`/api/data`);\n    \u00a0 \u00a0 \u00a0 setData(response.data);\n    \u00a0 \u00a0 \u00a0 console.log(data);\n    \u00a0 \u00a0 } catch (error) {\n    \u00a0 \u00a0 \u00a0 console.error(`Error fetching data:`, error);\n    \u00a0 \u00a0 }\n    \u00a0 };\n    \n    \u00a0 // fetch data every time the component loads //\n    \u00a0 useEffect(() => {\n    \u00a0 \u00a0 // Function to fetch data from the server //\n    \u00a0 \u00a0 async function fetchMess() {\n    \u00a0 \u00a0 \u00a0 const response = await axios.get(`api/message`);\n    \u00a0 \u00a0 \u00a0 setCustomMessage(response.customMessage);\n    \u00a0 \u00a0 \u00a0 console.log(customMessage);\n    \u00a0 \u00a0 }\n    \u00a0 \u00a0 fetchMess();\n    \u00a0 }, []);\n    \n    \u00a0 return (\n    \u00a0 \u00a0 <div className=\"App\">\n    \u00a0 \u00a0 \u00a0 <header className=\"App-header\">\n    \u00a0 \u00a0 \u00a0 \u00a0 {/* Display the message, or 'Loading...' if data is not yet fetched*/}\n    \u00a0 \u00a0 \u00a0 \u00a0 <h1>{data.message || `loading...`}</h1>\n    \u00a0 \u00a0 \u00a0 \u00a0 <h1>{customMessage || `loading...`}</h1>\n    \u00a0 \u00a0 \u00a0 </header>\n    \u00a0 \u00a0 </div>\n    \u00a0 );\n    }\n    \n    export default App;",
            "I'm looking for a walkthrough project that has you build a React web app from start to finish.\n\nI'm currently going through Codecademy's React section, and I'm finding that there isn't anywhere near enough hands on with it. all of my coding has been in the Codecademy editor, and I want an off-platform project to see how react works from the ground up instead of always starting with half complete projects that I'm basically just debugging.\n\n  \nThanks in advance.",
            "Hey guys. I understand that setting the `value` prop of an input alone makes it uneditable, but I don't quite get the reason behind it.\n\n    <input value=\"hey\" />\n\nThe value prop is set to a primitive here, and when we, as the user, edit the text, the code does not set any state variables, so there is no reason for React to perform a re-render and cause the input element to be rendered again with \"hey\" as its value, and thus make it practically \"uneditable\". And even when the value prop is a state variable, if we don't set that state in an onChange event handler, that shouldn't trigger a re-render.\n\nSo why exactly does React re-render the input element here? What mechanism keeps the value fixed?",
            "Hey  \nWorking on this Pomodoro Chrome Extension for a while now.The functionality is all fine but when I upload as an extension on chrome,the timer works initially but when I click away , the React states all reset  \nI want the timer to keep on working and when it ends , Ive set up a notification to alert the user.\n\nI want chrome to store the state of my countdown and not set it to default when i click away from the extension.I guess chrome storage has to be used but I have no idea how to\n\nlink:\u00a0[https://github.com/SerDunk/Pomodoro-chrome-ext](https://github.com/SerDunk/Pomodoro-chrome-ext)\n\nAny help would be appreciated!",
            "Props are really hurting my brain.\n\nFor an example, let's say I want to make a component that renders someone's name.\n\nIn \"Greeting.js\":\n\n    function Greeting(props) {\n      return <h1>{props.name}</h1>\n    };\n    \n    export default Greeting;\n\nIn App:\n\n    import Greeting from './Greeting';\n    \n    function App() {\n      return (\n    <Greeting name=\"Tom\" />\n    )};\n\nIs this how that would be done? Adding the information to the component in the top-level file, and then  giving the component props and having it render that way?\n\nWhat would this look like if I wanted to work with JSON from an API?",
            "Hello, I am new to react, javascript, etc... and I am currently completing my first project. Everything was going well until I tried to create a Dropdown menu using Bootstrap. Here is my javascript file for the Dropdown menu function: \n\n    import \"./Dropdown.css\";import 'bootstrap/dist/css/bootstrap.min.css';\n    import React from 'react';\n    \n    function Dropdown() {\n        return (\n            <div className=\"dropdown\">\n                <button className=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"book-dropdown\" data-bs-toggle=\"dropdown\">\n                    Select Service\n                </button>\n                <ul className=\"dropdown-menu\" aria-labelledby=\"book-dropdown\">\n                    <li><a href=\"#\" className=\"dropdown-menu\">item 1</a></li>\n                    <li><a href=\"#\" className=\"dropdown-menu\">item 2</a></li>\n                    <li><a href=\"#\" className=\"dropdown-menu\">item 3</a></li>\n                </ul>\n            </div>\n        )\n    };\n    \n    export default Dropdown;\n\n  \n...Nothing \"drops down\" when I click on the button and I am not sure what I am doing wrong. I have installed bootstrap already and verified in my dependencies file and I know that some of the Bootstrap classes are working. For instance: \"btn-secondary\" does cause changes. I've watched so many tutorials on how to implement this and after two days I feel stuck. Thank you in advance for any help you guys are able to provide me.",
            "Let's say I have a redux selector that lets me know when a request is \"running\". Effective at the start of the request the state is \"loading\" and then at the end of the request, it is set to \"complete\".\n\nNow I have a simple condition that shows a div when it's loading but often times it's such a quick request it ends up with the div just blinking, barely showing the message in the div. \n\nIs there a simple way to ensure that the div when loading is run always shows up for at least a second? I know i can add a set timeout to the start of the loading or end but I'm hoping for a simple css class or something that I can easily apply to all my components that i find flicker too quickly.",
            "Hi\u00a0r/reactjs\n\nI've recently implemented a functionality to upload CSV files from our web application to our server. During my testing across all environments, everything worked perfectly. However, some users have reported an issue where clicking the file upload button doesn't trigger the file directory window/popup at all \u2013 the button appears to be completely unresponsive. They either have to reload or restart the browser to resolve the issue.\n\nHas anyone else experienced this issue before? I'm unsure how to approach debugging this problem.\n\nImplementation Details:\n\n* Framework: Next.js application\n* Hosting: AWS EC2 instance behind an Nginx proxy\n* Upload Method: XMLHttpRequest (XHR) \u2013 opted for XHR over Fetch to display a progress bar\n\nSimplified Code:  \n[https://gist.github.com/redt0mato/34327526949b8e3152c4cdead8da8603](https://gist.github.com/redt0mato/34327526949b8e3152c4cdead8da8603)\n\nI also posted this question in\u00a0[r/webdev](https://www.reddit.com/r/webdev/)  \n[https://www.reddit.com/r/webdev/comments/1da46a2/help\\_needed\\_file\\_upload\\_button\\_not\\_responding\\_for/](https://www.reddit.com/r/webdev/comments/1da46a2/help_needed_file_upload_button_not_responding_for/)",
            "I was implementing sign-in through Google. After the user signed in successfully and was redirected to the dashboard page, I found there is a\u00a0`#`\u00a0in the URL (http://localhost:5173/#). Is there a way to remove the\u00a0`#`? What causes this?",
            "Hi everyone, I got internship in mern stack 3 months ago. I was able to perform the tasks assigned during the internship but due to being a slow learner I wasn't selected for the job. Now I'm doubting myself if I'll be able to survive in this field because you have to continue to learn new things in this field but I'm slow at picking things up. I'm not able to grab concepts quickly. Others around me used to do things quickly by just reading documentation. I had to watch videos. Can you guys give me any advice/tips on improving my learning process. What is your approach of doing things at work? Does this improves with time or should I give up and choose some other field?",
            "hello,\n\ni learned a lot of html, css and javascript over the past year and now i'm building projects using them.\n\ni started looking at react and familiarizing myself with its features before i dive into it later.\n\ni considered learning and using tailwind in my react projects, but i actually don't think i want to because i like writing standard css.\n\nam i doing myself a disservice by not wanting to learn/use tailwind? is it okay to only want to write standard css?",
            "How can I make so this can be run twice after each other? I'm using nextjs.\n\n\u00a0 `function handleSearch(term: string, name: string) {`  \n\u00a0 \u00a0 `const params = new URLSearchParams(searchParams);`  \n\u00a0 \u00a0 `if (term) {`  \n\u00a0 \u00a0 \u00a0 `params.set(name, term);`  \n\u00a0 \u00a0 `} else {`  \n\u00a0 \u00a0 \u00a0 `params.delete(name);`  \n\u00a0 \u00a0 `}`  \n\u00a0 \u00a0 `replace(\\`${pathname}?${params.toString()}\\`);`  \n\u00a0 `};`\n\n  \nNow if I do:  \n`handleSearch(\"term1\", \"name1\");`  \n`handleSearch(\"term2\", \"name2\");`  \nIt won't work.  \n  \nBut just do it once works.  \n`handleSearch(\"term1\", \"name1\");`\n\nIt works just fine.",
            "Hey everyone,\n\nI'm hoping someone can help me with an animation I'm trying to create. I have a component that displays a count, like \"2 selected.\" I want to animate the count when it increases or decreases.\n\nHere's the animation I'm aiming for (let's say the current count is 2):\n\n* **When increasing:** The number 2 slides up and fades out, and the new number 3 slides up from the bottom and fades in.\n* **When decreasing:** The number 2 slides down and fades out, and the new number 1 slides down from the top and fades in.\n\nI have a working solution that looks like this: [Code Example](https://codefile.io/f/a8R2sYZ5Xd) and [Video Preview](https://streamable.com/1zo044?src=player-page-share).\n\nThe issue I'm running into is that the CSS `<style>` gets injected in a way that's not ideal. I want to refine this aspect.\n\nAdditionally, it would be fantastic if someone could make the animation so that when the number is 2 or 3 digits long, only the digits that are changing animate. For example, increasing from 103 to 104 should only animate the last digit and not the whole number.\n\nAny suggestions or improvements would be greatly appreciated!",
            "I'm trying to implement vite-react-ssr with react-router-dom. But I'm stuck with the error \"**Hydration failed because the initial UI does not match what was rendered on the server**\". I'm not able to post complete query here. Embedded link for the same i posted. Please help me in this. I'll be very much thankful.\n\n[https://www.reddit.com/user/Bubbly\\_Loan1277/comments/1deuwzs/vitereactssr/](https://www.reddit.com/user/Bubbly_Loan1277/comments/1deuwzs/vitereactssr/)",
            "Is it possible to modify a state array in realtime during a map iteration?\n\nWhat if you are mapping through a series of components, and each component is writing a value to a particular index of a state array (passed down from a common parent). Will you see the changed state array only after the entire map is done, or is it possible for it to change in the middle of mapping?",
            "So I will soon be having an internship at a new software company. For their software they are using React for the Frontend and backend Graph QL, Typescript. I want to prepare myself for this internship but i am a bit lost what should I start learning? I asked chatgpt and it told me: HTML, CSS, Javascript >> JavaScript ES6+ >> TypeScript >> React >> GraphQL  \nDoes this sound right? I do have some basic knowledge about HTML, CSS but everything else is pretty new to me.",
            "So when you are building with react, my first instinct is to start making a bunch of components, pretty much for everything I see.\n\nThere is a cost to this, though. There's benefits too. So if I create a component, I'm hiding the implimentation details. If you do this too much, its really annoying to have to drill down like 5 or 6 levels to get to the thing you're looking for, and you have to keep in your head the context of how these levels work together sometimes.\n\nDo you sometimes just leave things in html? What's the way you go about deciding when to create a new component out of something?\n\nOne possible idea would be: well, if I'm not going to reuse the component, then maybe I don't need it in the first place. Just leave it as HTML.\n\nexample: suppose you're showing products in a grid fashion. Super common.\n\nSo you might have a componnet for each product \"card\". And you have a container that arranges the cards in a grid.\n\nMy first instinct is, the card and the container are two different components. But really, what is the container? Its just a div with a className, that I'm not going to reuse. I don't know if that was worth separating.\n\nBut the \"card\", that's reused a whole bunch. So that makes sense to be a component, right?\n\nBut wait, I'm not **actually** reusing it **in my code**. I have a product array, and I'm doing products.map. So, in my code, the \"card\" also only shows up once.\n\nIn this case, it seems fine to just not have components for these things. These could just be divs with class names, and I do the rest in CSS.\n\nWhen do you create a new react component?",
            "Looking for Teammates to Build a React Project! \n\nHey everyone! I'm Bogdan, and I'm passionate about coding with React. I'm looking to gather a team of fellow enthusiasts to create a cool project together, improve our skills, and just have a good time.\n\n  \nIf you have basic knowledge of React and JavaScript, that's great! If you know other things like Redux or Node.js, that's even better. The main thing is the desire to learn and work together.\n\nIf you're interested, hit me up on Discord :quard8  I'd love to chat and start working together!",
            "In a react app, is it possible to open certain videos that have unsupported codecs in native players on the device? (Windows, iOS and Android)",
            "I have experience with HTML, CSS, and JavaScript (React). I'm planning to create an online curriculum website (example:[ The odin project).](https://www.theodinproject.com/paths)\n\nThis project is for fun and to practice programming. I want to easily add and edit new content, so I'm considering using a CMS.\n\nOne idea is to use markdown files for the content, which will include text, pictures, and videos.\n\nCurrently, I'm thinking of using Strapi with React. \n\nDo you have any other suggestions for creating such a website? Would it be easier to implement this with WordPress and is building it from scratch the wrong decision?\n\nIm a total beginner who wants to leave tutorial hell by creating something from scratch but I need some hints.",
            "\n\nHi. I'm a piano teacher as a side hustle and currently pay $20 a month for a music teacher platform. I only really use it now for invoicing because I've moved everyhing else across to notion. Things like lesson notes, CRM and other details.\n\nIn my day job I'm currently learning react.\n\nWhat I'd like to do is create a react app that can keep track of customer invoicing. Customers pay a monthly fee so I'd be looking for something that automatically adds their monthly sub at the start of the month. I also want to be able to add manual payments and charges too.\n\nI think I'll need a SQL db because I could probably have relationships between students, parents and finance.\n\nThere won't be a lot of read/write action as I only have approximately 20 students and don't plan to expand.\n\nOn a side note, at work I work with AWS (no databases though) and I was thinking of just using RDS as I'd imagine it would be a lot less than $20 a month for my requirements.\n\nWhat would you suggest for a database that I can use with react?",
            "Can anyone recommend a React textbook, at least somewhat recent, that they thought was a good one? I'm working through Codecademy React courses but I think I need a second introduction with more depth. I got a lot out of a JavaScript textbook recently that I read cover to cover, even after 10 years of experience in JavaScript, I think I learn better this way than from videos or reading from a screen.",
            "I have a project for a client, it was provided me with a lot of\nprop drilling and really complex components. I searched\nonline and read about techniques memo, callback,\ncontext and compound components which were relevant\nto my usecase but all these techniques comes with\ntheir disadvantages. How to go about figuring out what\napproach to take",
            "I want to implement the angle detection application I found on GitHub (written in Python) into my ReactJS project. How do I make it work in ReactJS? The Python application uses the device's camera to automatically detect the angles of a human's joints. My ReactJS project is about creating a video call application where the camera will utilize the angle detection application. I am starting from scratch, so if anyone can teach me how to implement this, it would be a great help.\n\n[https://github.com/lxaw/PoseAngleEstimation](https://github.com/lxaw/PoseAngleEstimation)",
            "what is currently the most common way to organize CSS? I've been doing the web-development thing for a long time now and really love using CSS but i've never found a way to organize it in a way that really satisfied me.",
            "I made a project in nextjs with tailwindcss which I'm converting to vite+react project with tailwindcss. but when i copy paste code. some components looks fine like that made in next according to design but some components/pages breaks. I don't understand why this is happening and how to fix it. It shouldn't be happening as both use react",
            "Maybe something like\n\n<Button attrs={{ \"data-tracker-id\": \"abc123\", \"data-js-trigger: \"js-click\" }} />\n\nin the Button component:\n\n<a className=\"btn\" href={props.link} {...props.attrs}>{label}</a>\n\nSending the data as object into the props is fine, and doesn't create a noticable overhead.\n\n\n\nAlternative is to directly pass through remaining props:\n\n<Button dataTrackerId=\"abc123\" dataJsTrigger=\"js-click\" />\n\nin Button component:\n\nconst Button = ({ link, ...remainingProps }) => <a href={link} {...remainingProps}>{label}</a>\n\nThough that has the disadvantage that it doesn't work with the minus-casing you want (i think)",
            "It's unclear exactly what you are asking, so apologies if this does not answer your question, but:\n\n[Every re-render in React starts with a state change. It's the only \u201ctrigger\u201d in React for a component to re-render.](https://www.joshwcomeau.com/react/why-react-re-renders/#the-core-react-loop-1)",
            "Design is one of those things you either have or you don\u2019t. I myself have ideas for good design here or there, but I can\u2019t pump out beautiful UIs like professional designers can. \n\nThere\u2019s a reason most of the reference websites for python, C, C++, and many other programming sites are soooo basic. There\u2019s also nothing wrong with using component libraries or prebuilt CSS themes.",
            "you're not wrapping the second fetch request in a try-catch, try logging what error it the second request is giving out.",
            "I noticed you're missing a slash on your second endpoint (/api/message). Could that be the problem?",
            "This snippet isn't enough to give you a reason for a re-render, can you post the complete code for the component?",
            "This appears to be an intentional choice. They made note of it on the [ReactDOMInput code](https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/client/ReactDOMInput.js#L59). Why did they do this? Probably to avoid ambiguity, when you set the value, did you mean to set the defaultValue or the actual value? Maybe you want a field to not be able to have the value be changed. React will throw a warning in the console saying \"You provided a \\`value\\` prop to a form field without an \\`onChange\\` handler.\" and tells you what it expects.\n\nIt might even be that the intentionally did this to cause unexpected behavior so that it forces you to go back and fix the code. They don't want you pulling form field data out of the elements individually because it doesn't hook into react lifecycles, so this means you either have to be more explicit with it being readOnly or doing somethign specific onChange.",
            "https://developer.chrome.com/docs/extensions/reference/api/storage\n\nYou want 2 things:\n\n- whenever the state values change, persist them to storage\n- whenever the extension loads, get the values from storage\n\nYou are trying to sync your react components with a system that is external to react (the storage API). [This is the exact use case for a useEffect](https://react.dev/learn/synchronizing-with-effects). You want to tell the effect to run whenever your state changes, and have it set the storage.\n\n\n\n    const [selected, setSelected] = useState(null);\n    \n    // after first render, get the stored value and set the state\n    useEffect(() => {\n      setSelected(chrome.storage.local.get('selected'))\n    }, [])\n    \n    // any time the selected state changes, set the storage value\n    useEffect(() => {\n      if (selected === null) {\n        return;\n      }\n    \n      chrome.storage.local.set({selected})\n    }, [selected])",
            "Yes. If you have a \"user\" object coming from an API, it might be worth it to pass it directly as `<Greeting user={user} />`, it simplifies things if you don't have to destructure the whole user into props to each component you pass it.",
            "This stackoverflow thread has some good suggestions: [https://stackoverflow.com/questions/59233694/react-displaying-a-loading-spinner-for-a-minimum-duration](https://stackoverflow.com/questions/59233694/react-displaying-a-loading-spinner-for-a-minimum-duration)\n\nOne thing you might want to consider is why you want to do this. If you're worried about it being jarring for content to pop in and disrupt the layout, one approach I've used is to display a \"skeleton\" component with placeholder gray boxes where the content would be, so when it loads in it doesn't disrupt the page.",
            "Probably using hashbased routing? You need to switch from hash-based routing to history-based routing. You can look up how to do that. It's just a diff lib",
            "Were you told you weren't selected because you were a slow learner, or were you simply just not selected and that's what you concluded? If the former, that sucks. There's nothing wrong with preferring video to written information, people learn best in different ways.\n\nIf you weren't given a reason you weren't brought on full time, there could be a number of reasons unrelated to learning. Maybe something got forgotten, or they didn't have budget, or they only had budget to bring on X interns. \n\nIn terms of how to learn better, I personally find that explaining things to other people or teaching them how to do things helps cement my knowledge. Even just writing up a paper or presentation that never gets shown can help, because it forces me to be able to understand something well enough to introduce it to people that don't know it at all.",
            "If you're new, doing raw CSS is fine, and may be beneficials as to help you learn what each part does. I'd recommend at least being aware of and how to use Tailwind, at least at a high level.",
            "assuming that what you get in the first case is `/path?term2=name2`, you either need a debounce or a different function. Instead of accepting a term and a name, you could do:\n\n      function handleSearch(newParams: Record<string, string | undefined>) {\n        const params = new URLSearchParams(searchParams);\n        Object.entries(newParams).forEach(([name, term]) => {\n          if (term) {\n            params.set(name, term);\n          } else {\n            params.delete(name);\n          }\n        }\n        replace(\\${pathname}?${params.toString()}`);\n      };\n    \n      handleSearch({ \"name1\": \"term1\", \"name2\": \"term2\" });\n\nIf you wanted to useset something, you'd pass undefined instead:\n\n    handleSearch({ \"deleteName\": undefined });",
            "I've also tried using separate classes that are dynamic in my project, but I'm encountering a logical error. When I increase the number, the new number slides up correctly, but for some reason the old / previous number slides down. However, when decreasing the number, the animation works as expected. Here\u2019s my code for reference:\n\n* [ActionBar.tsx](https://codefile.io/f/j4fUPO3JX0)\n* [ActionBar.module.css](https://codefile.io/f/m892cXWarj)\n\nI've made a video preview to illustrate the issue: [Video Preview](https://streamable.com/4io7ra)\n\nAny suggestions on what might be causing this issue? Thanks!",
            "The more common approach here would be to make a duplicate array and save that once you've done all the operations you need to on it. Typically you don't wan tot mutate any objects from state directly.\n\nAre you also sure that this is the best way to do this? Typically when I hear questions like this there's a better solution (see the [XY problem](https://xyproblem.info/)).",
            "imo:\n\n* learn javascript first (don't bother with specific es6+, everything current is already es6 anyway)\n* learn react, the official [react.dev](http://react.dev) quick start/learn react should suffice\n* typescript is basically javascript with types, try to get the basics (if you know js and understand typed languages, this is really fast)\n* read about graphql and read a few examples, but don't fret too much about building things\n\nin the end: don't fret too much, try to build a few example apps, but stick to the basics to build a solid foundation. typescript and graphql you can learn on the job if you know javascript and react.",
            "It's an interesting question and I think the answer, as always, is going to be \"it depends\". But I will say in my experience, I've never regretted having too many components, but I've definitely regretted having too few. \n\nThe only real downside of creating a component is that it takes an extra minute for the boilerplate.. which can be annoying, but we need to optimize for readability, not writability. And I don't feel like you're losing readability by making more components. You can always use React dev tools to look at the component tree if you want a nice overview of the application's structure. There's plenty of tooling solutions to navigate around your code, whether that's global search to find what you're looking for by some keyword, ctrl/cmd+clicking on a component to get to its declaration, etc. \n\nOn the other hand, by having too few components, you risk the component growing too bloated and taking on too many concerns.\n\nSo I'd say just because a component doesn't get reused doesn't mean there's not benefits to splitting it up. As long as it's conceptually a separate thing (like a card), then giving it its own file/directory simplifies the code by giving you a contextual reset, so to speak. Now you don't have all this other code in the scope: you are only dealing with the imports, hooks, state, styles, props, that are related to that card.\n\nI'd say the \"container\" in your example is kind of borderline, I'd be fine either way. If it's just mapping over your array, I wouldn't mind leaving it without its own component. But I'd have the mindset that as soon as it gets some extra complexity, I'd be ready to refactor it into a component.",
            "If a component is too complex, break it down into smaller components.\n\nIf there is too much prop drilling, you could use Context instead (though it has its own downsides)\n\nMemoization is for performance. Note that React 19's compiler should handle memoization automatically.",
            "> some components/pages breaks\n\nbreak how? The page doesn't load? The styles are wrong? You get an error? There's not enough information to give any useful advice.",
            "Thanks! Appreciated!",
            "Thanks, much appreciated\ud83d\udc4d\ud83d\ude4f",
            "That's interesting, I have the opposite view.\n\nI can always just make a new component and stick some stuff in there. So having too few components is easy to fix.\n\nWhereas, if I have too many components, its just annoying sometimes. Like if I have a component that has another component that has a little logic and 2 components, and those have each their own branching components and so on\n\nSometimes you can separate things that now, you have to keep them in your head because they're in other files / components. Its a mental cost. Splitting stuff between components sometimes makes it harder to parse what's going on fully.",
            "Ui was breaking but found solution",
            "Have you worked much with large codebases?\n\nI don't think it's feasible, at a certain point, to keep a mental model of the entire application at the same time. For smaller projects, maybe, but eventually there's so much code that you learn to just focus on what you need in that moment, and the rest is a blur. Also helps to have that mindset when onboarding to projects you haven't worked on before. Say I need to add a feature to a specific part of the application, I would, at that point, look into what component that part of the application lives in, and I'd start making changes there, gradually \"zooming out\" to parent components if necessary. Typescript helps a lot too, and as I mentioned, the React devtools tree structure.\n\n>I can always just make a new component and stick some stuff in there. So having too few components is easy to fix.\n\nI do like this mentality though. Too many people treat codebases as write-only. Re-evaluating existing solutions when requirements change and refactoring to better fit the new requirements is very helpful. And there's definitely a balance between these two viewpoints, following either one too dogmatically can lead to some really rigid code. Which is why I might also not make that grid container into a separate component if I was doing it."
        ]
    },
    "I made an app to calculate EVERYTHING you need to make sourdough Bread\n": {
        "title": "I made an app to calculate EVERYTHING you need to make sourdough Bread\n",
        "score": 11,
        "url": "https://www.reddit.com/r/reactjs/comments/1dlptl5/i_made_an_app_to_calculate_everything_you_need_to/",
        "content": "Since I am both a chef, a bread enthusiast and a software developer, I decided to combine these things and I made [this](https://bread-dough-calculator.vercel.app/).\n\nTo make it I used vite, React 18.2 and Ant Design.  \nI did not use Typescript because I was lazy and I regret it lol  \nWould love to know what you think.",
        "num_comments": 8,
        "comments": [
            "Cool stuff! Any plans to introduce recipe suggestions or something like that?",
            "Nice. Some suggestions: think about international settings for flour, because as a German your english centric flour names don't make really much sense to me.\n\nAlso, all the fields which only accept numbers should be defined as type=\"number\" do that when my mobile keyboard pops up I only get numbers",
            "This is great, I\u2019ve recently moved to central Europe and it\u2019s impossible to buy the strong white flour I\u2019m used to using for making starter and sourdough in the uk. Do you have any advice on what type of flour to buy here to make nice sourdough?",
            "thanks! Adding recipes suggestions seems like a lot of work ahah but that's a good idea! Like a button that says \"show me an example\" and automatically fills the flour mix. Or you could just select a recipe from a list.",
            "My advice is to absolutely buy pure wheat gluten from the web and add it to your dough! Usually 5-10% pure gluten does the trick. With my app, you can still put it like it's a normal flour. Just add a protein content around 70%.",
            "Yes, exactly that! Not as in full-blown recipes but a baseline that you can tweak afterwards. Asking as a non-chef \ud83d\ude05",
            "Ok! I\u2019ll try this thanks!",
            "that's actually a great idea! I will work on that :)"
        ]
    },
    "What's your preferred method to transform ISO timestamps from backend into local user date?": {
        "title": "What's your preferred method to transform ISO timestamps from backend into local user date?",
        "score": 24,
        "url": "https://www.reddit.com/r/reactjs/comments/1dlhhnt/whats_your_preferred_method_to_transform_iso/",
        "content": "We receive dates from our backend in iso format, for example:\n\n    2024-06-20T22:51:20.801454-07:00\n\nThere are several packages that can help with this process like `date-fns` or `moment.js` or you can use some sort of function similar to pythons strftime().\n\nWhich is your preferred method to display time in user's local time?",
        "num_comments": 30,
        "comments": [
            "If you're just wanting the localised time, native formatters do a decent job without needing a library.\n\n\n```\nconst d = new Date('2024-06-20T22:51:20.801454-07:00');\nconsole.log(new Intl.DateTimeFormat(undefined, { timeStyle: 'long'}).format(d));\n\n\n```",
            "Date-fns gets used in every project I work on",
            "Date.parse(someISOString) \n\nmyDate.toLocaleString()",
            "If printing local time for the user, just new Date(yourApiString) is fine -- the default string representation of the Date object will display the date and time in user's locale anyway\n\ndatefns and dayjs are both good for formatting the Date obj for display",
            "I use dayjs and call it a day",
            "You are missing TimeZone. \n\nJust with the -07:00 is not enough to calculate properly the Hour in a country,\n\nWhy not? DST?\nDST? Daylight Saving Time.\n\nTwo countries can have same OFFSET (-07:00) but one decided to not move one hour forward/backward during summer/winter, while the other does. \nSo basically \u201cthe hour\u201d of a country is nowadays a Political thing. Tomorrow your country can decide to move 3 hours in Summer and 3 in winter (why not?), so Political. But the \u201c07:00\u201d is just a geographical thing. \n\nIE, in Arizona (same OFFSET) one part follows DST strategy, the other part does not. Hence several months at year their hours are not the same. This reveals the need of applying the \u201cpolitical\u201d bit which is the TZ (timezone) \n\nSo you need the Timezone (\u201cEurope/Madrid\u201d or \u201cAtlantic/Canary\u201d, etc\u2026) string to know the Politics strategy of the area and calculate the hour properly. \n\nJust a tip, because i didnt see it in your question. And it is the most important bit, otherwise it will just work in your area.",
            "date fns\u00a0",
            "Dayjs",
            "Just use dayjs, mate.",
            "Unix",
            "Date fns no questions lock the thread.",
            "I use dayjs but the date object isnt bad",
            "umm i just passed the ISO date into getfullyear() etc, i assume the browser will just do the localization itself..",
            "The native date object. But there was time when I need granular formatting I use date-fns. But you do get a lot of mileage with native Date()",
            "When temporal finally goes live, we should be able to use that.",
            "Have your API client deserialize the JSON with a date time reviver. Then you get native dates in all your dates.",
            "Dayjs",
            "I like creating a helper js to parse, haven\u2019t bothered with any packages since that\u2019s how I learned and it works.",
            "unless you're going to use many of the functions of date-fns, I'd write your only function instead of adding the 22mb package",
            "Use your backend to send the date then just display on UI. Use UI for interactivity not processing",
            "I always use moment.js. \nI used to use day.js but since it's getting deprecated, i moved to moment.js",
            "OP: If you plan to support multiple locales / languages in the future, do yourself a favor and use Intl for formatting dates and numbers. It'll save you a huge amount of time when it comes time to internationalize your app.",
            "No you can\u2019t do that you need a 50kb package with a dozen extensions",
            "He don't need any timezone to display the local user time. The -07:00 indicate a point in time. Using the JS Date object will parse the correct time in the user timezone including calculation for DST.",
            "Where are you getting 22mb from?",
            "How would the backend know the time zone of the user?",
            "Moment has been deprecated for almost 5 years lol",
            "Who told you it's getting deprecated? If anything you have it backwards as moment.js's repo literally says it's a legacy project at this point",
            "Which browser and language and timezone settings from browser are sent to server you can also use CloudFlare for that",
            "Ohh lol yes. I think i said the opposite."
        ]
    },
    "Nested children needs to hear from same websocket": {
        "title": "Nested children needs to hear from same websocket",
        "score": 2,
        "url": "https://www.reddit.com/r/reactjs/comments/1dlsd9g/nested_children_needs_to_hear_from_same_websocket/",
        "content": "I have a parent component that opens the socket connection. Inside the parent component I have 4 children components that needs to update values based on message received from socket. When I tried to update state in the parent component and pass it to the childrens as prop, react bundles the state change and only few data gets updated.\n\nTo solve that I passed the socket ref to each children and defined the socket.onmessage function inside the children. The issue with this method is that socket ref can only exist with any one of the children and the onmessage function works only in the last children component. \n\nPlease suggest the best industry standard to use websocket and update value in all of the children component.",
        "num_comments": 5,
        "comments": [
            "Please share your code, I will try to solve it",
            "In context and pass the value to the parent and each child?",
            "1. Move the wss to a shared worker\n\n2. In the shared worker, update a kv store in indexeddb or just load it up in a key in local storage\n\n3. Let each of your children watch the local storage for changes (you can use signals or any messaging too)\n\n4. Update values accordingly\n\n  \nThis approach minimizes overhead in all aspects leveraging glorious web API's from Mozilla foundation. Keeping context isolation for network I/O and your browser implementation will go a long way.",
            "Use Redux or Context API to share socket state across all children components",
            "The smallest fix: replace onmessage with addEventListener('message', fn)"
        ]
    }
}