{
    "Come discuss your side projects! [June 2024]": {
        "title": "Come discuss your side projects! [June 2024]",
        "score": 12,
        "url": "https://www.reddit.com/r/csharp/comments/1d5ec4e/come_discuss_your_side_projects_june_2024/",
        "content": "Hello everyone! \n\nThis is the monthly thread for sharing and discussing side-projects created by /r/csharp's community. \n\nFeel free to create standalone threads for your side-projects if you so desire. This thread's goal is simply to spark discussion within our community that otherwise would not exist. \n\n# Please do check out newer posts and comment on others' projects.\n\n***\n\n[Previous threads here.](/r/csharp/search?q=title%3A%28\"Come+discuss+your+side+projects!\"+OR+\"Come+share+your+side+projects!\"%29+author%3A%28ItzWarty+OR+AutoModerator%29&restrict_sr=on&sort=new&t=all)",
        "num_comments": 29,
        "comments": [
            "I noticed a few years ago that FileSystemWatcher does not trigger events when running inside a container with an external volume mounted. I checked it again with .net 8.0 and it is still not raising events. So I built my own nuget package. It's very early, but seems to work great for my needs.\n\n[ContainerFileSystemWatcher](https://github.com/EldieTurner/ContainerFileSystemWatcher)\n\nalso working on using it to get IOptionsMonitor to work within containers.",
            "I've been writing a little social media clone project as an ASP.NET web API and learning a TON. I'm probably also doing a ton wrong, but I'm having a lot of fun and gaining a lot of skills by just figuring tons of stuff out.",
            "I shared it a couple of weeks ago in its own thread, but I wanted to teach myself about incremental source generators. I\u2019ve worked a bunch of enterprise jobs where services would be registered with the container using some gnarly reflection code.\n\nI wrote Saucy to solve both problems.\n\nhttps://github.com/aspeckt-112/SaucyRegistrations\n\nThe advantage it has over reflection is that the registration code is readable, references to classes / interfaces are shown by the IDE, and there\u2019s no runtime cost for your end user. Because it\u2019s an incremental generator, the IDE runs it as the codebase changes, meaning the impact on your compile time is minimal.\n\nI don\u2019t care if people don\u2019t really use it, or prefer to register manually. But I saw basically the same code, at multiple jobs, and I wanted to learn more about Roslyn in general. It was worth it!",
            "Kusto-Loco [https://github.com/NeilMacMullen/kusto-loco](https://github.com/NeilMacMullen/kusto-loco) is a set of libraries and applications based around the idea of supporting 'local'  usage of KQL.   You might be familiar with KQL as the query language used by Application Insights or Azure Data Explorer.  Kusto-loco allows you to embed a KQL engine in your own application and run queries against in-memory data rather than having to import it into an ADX cluster.\n\nThere are a number of sample applications showing how it can be hosted in a CLI, WPF or Blazor app as well a light-weight ready-made data explorer if you just want to play around with querying CSV files.\n\nI wrote an introductory article which gives a fuller introduction:  [https://neilmacmullen.github.io/kusto/2024/05/04/kustoloco.html](https://neilmacmullen.github.io/kusto/2024/05/04/kustoloco.html)  \n\nAlso, given that I quite often see posts here from people asking how they can get started in OSS development it's worth mentioning that I would be very happy to to work with contributors; there's a whole range of improvements to  be made ranging in difficulty from \"easy\" (improve documentation) to \"advanced\" (extend the underlying engine).",
            "(Student) Developing Web API for a project with ASP. NET Core  . The project in short is \"Planning our day and completing it to gain streaks\". New to C# and .NET environment (even programming) ...Loving it Hoping to learn more .",
            "Working on two major (at least for me they are major) projects right now.\n\n**Steam Superheater** https://github.com/fgsfds/Steam-Superheater is an app that can download and install patches and fixes for Steam games. I already posted about it on this sub a while ago.\n\n**BuildLauncher** https://github.com/fgsfds/BuildLauncher is a universal launcher and user addons downloader for Build Engine games (Duke Nukem 3D, Blood, Shadow Warrior etc).\n\nBoth projects use ASP.NET for backend and API, Entity Framework for Postgres database, and Avalonia for Desktop UI.",
            "Recently, Spotify's song recommendation algorithm has started working poorly, so I switched to YouTube Music. As a side project, I'm working on a project that will transfer my Spotify playlists to YouTube Music.",
            "Hi, i'm working on a price alert tracker to follow prices in the stock market. The idea is to do an incremental development adding different things with the end goal of learning more in depth different technologies",
            "I've developed a dotnet messaging library to simplify creating reliable event driven architectures.\n\n[check it out](https://github.com/Timmoth/AsyncMonolith) if you're interested or want to collaborate!",
            "ArduinoCloudConnector a library for connecting to the Arduino IoT cloud. This is my first .NET library, and I'd love to get some feedback! Finding some people for contribution or working together on other projects would be great!\n\nCurrently supporting:\n\n* Fetch and display properties of a Thing from the Arduino IoT Cloud.\n* Handle authentication and access token retrieval automatically.\n* Error handling and retry mechanism for robust API communication.\n\nI'm also looking for contributors or people interested in collaborating on other projects. Check it out on GitHub: [ArduinoCloudConnector](https://github.com/soerenlemke/ArduinoCloudConnector)",
            "Valtuutus is a Google Zanzibar inspired authorization library in .NET.\nhttps://github.com/valtuutus/valtuutus",
            "[PureBlazor UI Components.](https://github.com/pureblazor/components)\n\nStill a work in progress but we are actively using them in the products we are building. Focus is keeping them performant (size and speed) and accessible (very hard!)",
            "I maintain [slskd](https://github.com/slskd/slskd), a client for the Soulseek file sharing network.  Development has slowed down a bit due to work commitments but I released a [new version](https://github.com/slskd/slskd/releases/tag/0.21.0) a few days ago with some features users had been asking for.\n\nThere's still a lot of work to do; if you're looking for something to contribute to have a look!\n\n(just please don't ask about the Lidarr integration \ud83d\ude05)",
            "Writing a ToDo list application. It\u2019s mainly to help get a feel for xaml and Maui and have been enjoying it. Although haven\u2019t uploaded to GitHub yet so no link reason-I\u2019m lazy.\n\nThis is also helping me get a feel for mvvm architecture",
            "A few years ago I struggled to use the Google Sheets API library to read and write to a Google Sheets spreadsheet in C#.  After I finally figured out how to work with it, I built my own abstraction layer on top in a way I would want to use the Google Sheets API.  I decided to publish that package to Nuget to give back to the community.\n\nFast forward a few years and its now been downloaded over 80,000 times which is really cool to see.  It's been a fun way to put something out there, see other folks find it helpful, see other folks contribute back, and also give me a way to keep my coding skills up on GitHub Actions, CI/CD pipelines, etc.\n\n  \nIf you want to check out the project, or contribute to it, please feel free to check it out below,\n\n[SteveWinward/GoogleSheetsWrapper: Google Sheets API .NET Wrapper Library (github.com)](https://github.com/SteveWinward/GoogleSheetsWrapper)",
            "I was planning to code PacMan on wpf and c#. Just for training.\n\nI started study computer science about 9 months ago and already made many ERP projects. Now trying something different on summer break.",
            "Building a Social Listening tool with [ASP.Net](http://ASP.Net) Core and Cassandra",
            "currently writing a tool for editing 3D Printing gcode files with ease, and in a custom way that fits me and my printer\n\nCurrently it can insert pauses for color change inbetween specified layers, retract the filament and push it back via feed stepper (E) in again without hassle.\n\ni also plan on making it so it can also remove parts of the print before a specified layers to make it easier to recover failed prints.\n\nafter that, i might work on multi color printing across multiple layers with only a single nozzle, so it would be able to print like 10-20 layers in one color, then change color and move back down to print 10-20 layers in the other color. only works in some cases, but i think signs and writings and such would be a feasable use case.\n\n....maybie noone will read this entire thing, but maybie someone will. either way, stay creating people, softwarewise and hardware wise! :)",
            "I always wanted to write a short novel, as a result I tried other free writing software packages. Some are great but don't really tick the itch for me, so I started writing ebook authoring software designed more for novels not graphic novels etc.. he software is very very young and only private at the moment as it has a very long way to go, but the backend will be able to use SSH, FTP, SFTP, database or a locally hosted web api to manage the book data. I have a lot of dreams for it but a lack of time to make it happen.\n\nOh yeah, am writing it in .net 8.0 Maui",
            "I made another Clean Architecture for .NET, I know there are many but this one makes it easier to manage many things using base classes and OData  \n[advanced-software-solutions/.net-clean-archticture: An open-source architecture for ASP.NET 6 and Blazor where you have things done easily for you. (github.com)](https://github.com/advanced-software-solutions/.net-clean-archticture)",
            "I am trying to write/finish a stock analyser using the Phil Town methodology. Architecture - SQL Server and Blazor. I have been at it for a few years. I seem to find some inspiration and work on it for a while and then lose interest...I hope to finish it one day. I currently employ the strategy but manually in spreadsheets which is annoying and hence the reason for initiating the project. The solution fetches the fundamental data from the SEC and does all the heavy lifting for you so I really need to get it done...maybe writing this will inspire me. It's a private repo at this point. :o)",
            "I love MVC and personally have avoided Blazor for my own opinionated reasons.  However, I have wanted to implement more UI logic client-side in C# rather than JavaScript.  To that end, I've spent the last couple years exploring different approaches using platform agnostic approaches to WASM. That is to say, running C# in the browser client side without any dependency on the Blazor nor Uno UI Platform (but these approaches work with either as well).   If you don't know, there's a handful of different ways to run C# client-side without needing Blazor.  This is ideal for implementing some client-side logic in a traditional web application.\n\nI have an extensive guide I've refined and recently reworked to align with the most current .NET features and project templates, and some tools I've used to facilitate my own development in this space.  I go through iterations of reworking either a sample project, documentation, or working on one of my unpublished apps that leverage these approaches.\n\n* C# WASM Recipes - [https://github.com/SerratedSharp/CSharpWasmRecipes](https://github.com/SerratedSharp/CSharpWasmRecipes) - I've been compiling and rehashing examples related to platform agnostic C#/JS interop using .NET 7+ capabilities.  Most of this code is usable with or without Blazor or Uno UI.\n* SerratedJQ - [https://github.com/SerratedSharp/SerratedJQ](https://github.com/SerratedSharp/SerratedJQ) - A wrapper for JQuery that exposes a .NET interface for manipulating the HTML DOM from client-side C# WASM code.  I chose JQuery because its API has some design choices that make it easier to handle through interop and the monadic like design allows more to be accomplished with fewer interop objects/calls, and fewer type mappings/wrappers.\n* SerratedSharp.JSInteropHelpers - [https://github.com/SerratedSharp/SerratedJQ/tree/main/SerratedJQLibrary/JSInteropHelpers](https://github.com/SerratedSharp/SerratedJQ/tree/main/SerratedJQLibrary/JSInteropHelpers) - A very rough around the edges class library that allowed me to implement wrappers for JS instances with alot less JS and C# boilerplate code.  I call these \"Proxyless Wrappers\" in that you don't hand code the \\`JSImport\\` proxies nor JS they wrap (https://github.com/SerratedSharp/CSharpWasmRecipes?tab=readme-ov-file#proxyless-instance-wrappers)\n\nI have a few sample projects as well, but they are in various states of being reworked.",
            "Microsoft accepts tickets for these kind of break/fix issues through Visual Studio benefits / support entitlement.",
            "It would be interesting to understand more about your path! I think that would be a great way for me to learn too. I've done Express/Django projects, but I'm curious about C#. \ud83d\ude42",
            "I\u2019ve seen Zanzibar mentioned more and more lately. Are you using this for something specific?",
            "Looks cool!",
            "judging from your comment you might be interested in HTMX. it works very well with mvc and will help avoid lots of js\u00a0",
            "I have started learning to code 6 years or so ago, worked professionally as a Python developer writing APIs, so I was taking a lot of lessons from that and adapting it to ASP.NET stuff. \n\nI started learning C# late last year or early this year",
            "So the reason we made this was to replace an inhouse permission implementation we use in our job that was giving us trouble in maintenance. We investigated some open-source alternatives and almost all of them require extra infrastructure (e.g they offer an api or are cloud services). Our goal was to make it a library, and in doing so, reduce the http overhead."
        ]
    },
    "C# Job Fair! [June 2024]": {
        "title": "C# Job Fair! [June 2024]",
        "score": 9,
        "url": "https://www.reddit.com/r/csharp/comments/1d5f9t1/c_job_fair_june_2024/",
        "content": "Hello everyone! \n\nThis is a monthly thread for posting jobs, internships, freelancing, or your own qualifications looking for a job! Basically it's a \"Hiring\" and \"For Hire\" thread.\n\nIf you're looking for other hiring resources, check out /r/forhire and the information available on their sidebar.\n\n * **Rule 1 is not enforced in this thread.**\n\n * **Do not any post personally identifying information; don't accidentally dox yourself!**\n\n * **Under no circumstances are there to be solicitations for anything that might fall under Rule 2: no malicious software, piracy-related, or generally harmful development.**",
        "num_comments": 2,
        "comments": [
            "Enumerix is looking for a lead software engineer to develop a suite of tools to interface the hardware and computational imaging tools. \n\nApplicants must be proficient in C#. Pay range between 170k-210k.  \n\nSerial entrepreneur CEO, taken companies exit thru acquisition and IPO (value >$1B).\n\nHere\u2019s the job listing: \nhttps://enumerix.breezy.hr/p/afcfa49305dc-lead-software-engineer-staff-sr-staff-principal\n\nHere\u2019s the preprint for the UltraPCR technology they developed: \nhttps://www.biorxiv.org/content/10.1101/2023.10.09.561546v1",
            "Panoptyc is hiring a full-stack developer. [https://www.linkedin.com/jobs/view/3938837807/?eBP=NON\\_CHARGEABLE\\_CHANNEL&refId=H9NxPQ%2FfGUTypHo0RjHhlA%3D%3D&trackingId=eSFP0A1HiSO8kZJUyk1JvA%3D%3D&trk=flagship3\\_search\\_srp\\_jobsfull-stack](https://www.linkedin.com/jobs/view/3938837807/?eBP=NON_CHARGEABLE_CHANNEL&refId=H9NxPQ%2FfGUTypHo0RjHhlA%3D%3D&trackingId=eSFP0A1HiSO8kZJUyk1JvA%3D%3D&trk=flagship3_search_srp_jobsfull-stack)\n\nPlease take this assessment: [https://coderbyte.com/sl-candidate?promo=panoptyc-4xvg0:c-sharp-developer-5rl5j2qyya&invb=user76zecsmu8](https://coderbyte.com/sl-candidate?promo=panoptyc-4xvg0:c-sharp-developer-5rl5j2qyya&invb=user76zecsmu8)"
        ]
    },
    "Help please I can't fix this": {
        "title": "Help please I can't fix this",
        "score": 0,
        "url": "https://www.reddit.com/r/csharp/comments/1dluksq/help_please_i_cant_fix_this/",
        "content": "https://preview.redd.it/bje7w3zh948d1.png?width=1366&format=png&auto=webp&s=7ad9b7baecf15f271cbb454df65a2a7f176bf277\n\nhttps://preview.redd.it/ne7n2ais948d1.png?width=1366&format=png&auto=webp&s=65e191f5b99bc215ab895a8865ee061c8bffa82d\n\nPlease help me I can't fix it and I don't understand why there is a problem in the first place",
        "num_comments": 11,
        "comments": [
            "You have a block separator statement on line 73 that scopes the \"gru\" variable into a different scope block. Either elevate that variable declaration to a higher scope or put your block terminator on a lower line that is more accurate.",
            "There's a closing bracket on line 73, and as variables are scoped your 'gru' variable on line 72 is not available anymore after that bracket scope is closed.",
            "This variable in different block.",
            "I can't see the all of the code but I assume that  \n  \nstring gru = Console.Readline();  \n\n\nis inside of something? You should introduce string gru at the beginning and use it.",
            "Easier if you show all of the code.\n\nIt looks like gru is declared at the bottom of a block which ends with the \"}\" on line 73. Variables declared in a block are not accessible outside of the block.",
            "https://i.imgur.com/t3CQuVf.png",
            "Is there even an opening bracket for your class? I would suggest you not copy and paste code (even your own) to avoid these types of errors.",
            "Would it be bad practice to put the word \"public\" before declaring the string?",
            "The compiler is telling you exactly whats wrong.. Its out of scope due to the closing brace. You defined the var in the context of the previous block.",
            "Delete line 73",
            "There's a missing opening brace `{` for the class and a missing opening brace `{` for the method `Combat`. And as others have said, the brace `}` on line 73 shouldn't be there."
        ]
    },
    "Struggling with loops?": {
        "title": "Struggling with loops?",
        "score": 0,
        "url": "https://www.reddit.com/r/csharp/comments/1dlujk4/struggling_with_loops/",
        "content": "Trying to learn C# (on Sololearn) and loops of any kind just melt my brain.\n\n  \nMy brain freezes and I have no clue what to do even if I've just done that exercise a lesson or two ago.\n\n  \nAre loops supposed to be a bit more difficult to understand/read for beginners or am I just slow?\n\n  \nI plan on finishing this beginner course this weekend and then start Tim Corey C# Mastercourse and then the C# Player's Guide. Hopefully it'll stick more.\n\n  \nHow have you approached learning C#?",
        "num_comments": 16,
        "comments": [
            "If you are struggling with loops it's not a C# thing, it's a programming thing. I remember having some difficulty with it when I was learning C but it's so natural to me now that I can't even tell exactly what I struggled with.\n\nBut I would say don't bother progressing further down the courses until you get a strong grasp on loops as it's one of the most fundamental building blocks of any programming language really.",
            "As with any subject, you\u2019ll need to find your own way to form an intuitive way of thinking about a concept.\n\nYou\u2019ve done the same already for all the other concepts up to this point.\n\nMy guess is the idea of loops itself aren\u2019t what are causing your problem. \n\nLoops are just a way to repeat something right? That part is pretty straightforward. What is complex is the action being repeated, tracking the iteration (can be thought of like a snapshot of the loop at a given point), and reacting to the state at a given iteration in some cases.\n\nThere are always ways to break down a complex topic, and it\u2019s more learning how to learn than actually learning programming.",
            "There are a few basic building blocks of code. This isn't just a c# thing, it's pretty broad across languages. They are often called \"sequence, selection, and iteration\". google it.\n\nThe first is that statements happen in top-to-bottom order. e.g. if you have\n\n```\nvar x = 30;\nvar y = x + 12;\nConsole.WriteLine(y);\n```\n\nThen the value `42` is what we see, because these lines are executed one at a time in top-to-tottom order.\n\nThe second is selection, `if` statements and related constructs. i.e. do something _conditionally_ instead of doing always.\n\n```\nif (y > 100)\n{\n  Console.WriteLine(\"Large number detected\");\n}\n```\n\nThe third is _iteration_  and that means looping. Repetition. It's there to do the same thing multiple times over.\n\ne.g.\n```\nConsole.WriteLine(\"The numbers are\");\nfor (var i = 1; i <= 100; i++)\n{\n  Console.WriteLine(i);\n}\n```\n\nSo this outputs 100 lines of numbers.\n\nCode just combines these three kinds of steps.\n\nAfter that, I would add \"chunking\" - many constructs such as methods, classes, etc. are there to \"group\" steps into one larger operation.  And then parametrise it so that different values can be fed in.",
            "You are just a bit slow IMO (no insult intended). Didn't experience much issue with them even at the beginning. I agree that progressing without feeling comfortable with core programming concepts like loops is premature. You will just start stacking half-grasped material on top of half-grasped material and will feel lost all the time. Doing more practical exercises should help.",
            "What is it about loops that you are struggling with?",
            "Round and round it goes, where it stops .. is a break condition.\u00a0",
            "Maybe try finding different tutorials, exercises or videos on loops. Perhaps you need to have it explained to you a different way. \n\nTry adding more console outputs to keep track if what's happening in the loop. Or playing it through on paper. Then try to think of a loop and what you want to happen and see if you can put it into code. And then change the scenario and make that happen, too.\n\n\nThey're a basic building block of programming and until you understand what's going on there, there's little sense in moving on to other topics.",
            "For me its recursion and I feel like its an advanced form of loop calls. Only way to get clarity is PRACTICE PRACTICE PRACTICE",
            "So funny when I asked the same questions all I got are insults saying I should study instead of asking stupid questions in this subreddit.\n\n I think the moderators should make it clear what are the rules and policies regarding asking questions.\n\nEdit: Im definitely still hurt with what happen considering I just want learn from you guys knowing you got experience.",
            "Thank you. \n\nWhat you said makes sense. Not understanding the way something works and just trying to guess it is frustrating, especially because this is beginner level stuff.\n\nI will focus more on loops before I go on to learning other things.",
            "Understanding and writing the code. \n\nWhen I look at a for or while loop, I'm struggling to understand what's the expected output of it. Same with writing it. \n\nI have a task, to add all the numbers together, from 0 to the user-given input. Unless I look at previous lessons, I have no idea how to write that so that it makes sense.",
            "It's very hit-or-miss whether you'll get a nice comment section or not.",
            "Ever gone to eat at a restaurant with friends?  Your waiter executes a loop while taking orders. \n\nFor each person at the table {\n  Take Order (person)\n}\n\nEssentially repeating the same thing over and over until a condition is met.  Being in a loop, it doesn't matter if it's a party of 10 or just a solo diner, everyone's order is taken. \n\nThink of everyday things in your life that are a loop.  Maybe that will help you think in loops when you are coding.",
            "I can understand that in the beginning certain structures in coding can be overwhelming. \n\nI feel like you maybe need to figure out how you learn best. Do you need to use it practically yourself, do you need to read something where it is explained what a loop is at a fundamental level or do you need a video where somebody is explaining it and you just listen?\n\nFor me it always helps to understand what is happening beneath. \n\nAlso, maybe this helps, you always can write a loop sequentially. Imagine it like a for loop from 0 to <2 can be also written by copying it's body/statement twice in a row. You can also do this for a while loop.",
            "So this is a pretty fundamental concept of programming, as others have stated. The idea is that you iterate (i.e. loop) through something a bunch of times to achieve a specific outcome. For example, say I want to search through a list of string values for some specific text and then return a boolean (true or false) if that text is found in the list. The 'idea' would be like so:\n    \n* Declare a list of strings at the class level, maybe people's first names\n* Create a method called 'DoesFirstNameExistInList' that takes in a string\n* Take in a string input (your first name for example) and pass that to the 'DoesFirstNameExistInList' method\n* Loop through the list of strings of people's first names that you had previously declared\n* If the text that you passed it is found in that list, exit the loop because you've already achieved your goal so there's no point in checking against the other values in the list. You can exit the loop by either using 'break' (which literally breaks out of the loop and allows the other code in your method to execute) or you can use 'return' to return a value from your 'DoesFirstNameExistInList'\n    \nI'm writing this in Reddit's text field only so apologies if this looks shit. I've also left out proper validation and string comparisons but in essence code this would look something like:\n    \n     public class TestClass\n    {\n      private readonly List<string> _firstNames = new List<string> { \"John\", \"Dave\", \"Peter\" };\n    \n    public bool DoesFirstNameExistInList(string input)\n    {\n    // Here you are looping through the list of first names declared at the class level\n    foreach (var firstName in _firstNames)\n    {\n      // Here you are comparing each first name in the list against the string input you've received\n      if (firstName == input)\n    {\n    // Here you are returning true because your method has found what it's looking for\n      return true;\n    }\n    \n    // By default you will just return false. This statement will get reached if nothing is found as part of your foreach loop.\n    return false;\n    }\n    }\n    }\n\n\nLet me know if anything here is still unclear.",
            "> When I look at a for or while loop, I'm struggling to understand what's the expected output of it. Same with writing it.\n\nIt could help you to use the debugger to step through it one statement at a time. While looking at how the variables change."
        ]
    },
    "Why are all .NET Blazor UI components so ugly? There are so many beautiful for React and Vue, but not for .NET Blazor": {
        "title": "Why are all .NET Blazor UI components so ugly? There are so many beautiful for React and Vue, but not for .NET Blazor",
        "score": 34,
        "url": "https://www.reddit.com/r/csharp/comments/1dl97ws/why_are_all_net_blazor_ui_components_so_ugly/",
        "content": "",
        "num_comments": 95,
        "comments": [
            ".net is mostly used by backend folks, and we can't really tell.",
            "Whats wrong with MudBlazor and Blazorise?",
            "I make all my own components. I guess that's why they're all ugly? lol",
            "Probably unpopular to say here but... front end and back end both require two entirely different mind sets and people. The back end people Ive met throughout many companies and otherwise have barely ever had a good eye for design nor do they truly care about it.\n\nFront end people often are more artistically inclined than back end people and usually put more empathy into their work.\n\nOne could argue that with a proper design made by a UX and UI designer would alleviate this problem. However, in my experience that's not the case. The back end first developers who worked on our front ends usually said \"this is good enough\" when the core functionality works as designed. The front end first developers went the extra mile and added details that cant be found through designs.\n\nBlazor mostly attracts back end first devs while React and Vue attract front end first devs. Which is noticeable in libraries like Mudblazor and alike. Thats not to say the same doesnt happen in React and/or Vue, my anecdotal examples were all in React for example. But I see the same happen currently within my current company where we use Blazor.",
            "Fluent UI looks nice. \n\nhttps://www.fluentui-blazor.net/",
            "Because Microsoft doesn't use Blazor",
            "How about building your own with my framework Ignis (blazor port of headless UI) and Tailwind CSS?\nhttps://ignis.dvolper.dev",
            "Check https://mudblazor.com/\nIt has a lot of good components. You can change the CSS style as you want.",
            "I know this post is about blazor and I\u2019m a c# developer. But for now the best choice for me and that I use it c# as backend and react a fronted (NextJs), best of both world. And this for the same reason as the op claims: there\u2019s not enough component libraries for blazor and I don\u2019t want to spend too much time creating my own components and ALSO I don\u2019t want every single of my projects to look like material Ui through mudblazor ou materialise (sick of it)",
            "Idk about you, but you can make your own components, use CSS to make it look good, unless you only depend on others work, well yeah thats a problem",
            "our components are prerelease, but we are working hard on an alternative. note: mobile UI has a buggy nav, fix coming soon. https://pureblazor.com/components/cards",
            "I mean, all components are ugly until you style them. I've seen plenty of dull functional apps built with React and bootstrap\n\n\nA better question is why do apps made with React often get styled more aesthetically? (If that is actually the case) \n\n\nProbably because of the kinds of sites built with either where style is a higher priority with the kinds of sites built with React",
            "All of those are rendered to html and css. The difference is Blazor is usually used by backend-minded ppl who don\u2019t have an eye for UI design.",
            "Ant design works too, actually it's not that hard to use anything you want even from scratch for most components when you have a good team.",
            "We've been using Radzen and are quite happy. They offer several free themes (which just change the appearance).",
            "Take a look at Radzen",
            "So real",
            "None of this will matter when UIs are completely based on vibrations using haptic feedback.  It is how we will see, hear, touch, taste, and smell the Internet and beyond.  Blind and deaf people will be the experts.  They will rule the FPS games too.",
            "I'm building mine components,  hopefully soon",
            "Because it's not meant to be. It's meant to be functional. It's like HTMX.\n\nOftentimes a backend engineer needs a GUI tool, to view performance graphs or start processes or in other words administer things. Blazor provides a quick and functional way to accomplish this.\n\nThe tool is not meant for external consumption. It is a tool, not a product.",
            "- It is way easier to judge if a UI component is pleasant or ugly, than it is to actually make something pleasant on your own.\n- A lot of us use Blazor because traditional frontend webdev is scary. We're primarily backend devs, so even with something like Bootstrap or Tailwind, it's hard to actually design UI components that go beyond \"*mediocre but functional*\".\n\nEven when I slap together a moodboard of some good looking UI designs, that all generally follow the same design trends, I find it very hard to make something that actually looks as good as the inspiration material. I'll usually end up with something acceptable that works, and then tell myself I'll make it look proper good later (aka. never).",
            "I'd have a wild guess and say blazor ain't around long enough, there are nice components for it but most cost good money.",
            "Blazor is really great so you don\u2019t have to deal with js to handle component logic. You can create components yourself. Just use tailwind to make it nice. Best of both worlds.",
            "Blazor has two things working against it.\n\n1. .net as a whole is so married to enterprise users and developers. It just has extra inertia to overcome whenever microsoft or developers want to do something different with it.\n\n2. .net's ecosystem keeps reinventing itself. The change from .net framework and mvc to .net core to .net modern and minimal apis and system.text.json and blazor and everything else has all happened so fast that there's a real lack of maturity now. Before blazor server or wasm even really found their feet, we got the unified hybrid model that had its own set of functionality and quirks and syntax.\n\nPeople complained similarly when vue 3 happened. Almost none of the styled component libraries were ready (to say nothing of the myriad other functional libraries that were behind). It took a long time to bring vue 3's ecosystem back up to parity with vue 2. A lot of people gave up waiting and switched to more basic or renderless libraries to avoid that dependency pain in the future.",
            "Because Microsoft and Telerik are besties.",
            "Because Blazor is the technology no one wanted to make sitting on a technology no one wants to use.\n\nWASM has failed to launch, it's been around long enough that if it was going to make a difference it would have, but it's still a niche product that only makes any kind of sense if you don't have to interact with the DOM.\n\nThe amount of effort it takes to make a high quality component library is huge and no one wants to do it for an also ran technology.",
            "Because Web developers are pretty much idiots in disguise, not being able to handle a Chad language that actually offers relyable security. They have attempted to create their own Chad language, but ended up at something not even they really enjoy.\n\nJokes aside: creating a framework to do things is easy and there are numerous beautiful components already out there. But doing the mobile and desktop compatibility for something that usually is used to create single page applications, is a work one has to put effort in. That is not really different from other web frameworks, the only thing the others do better, is the nitty gritty details, because more frontend developers look on the same problem.\n\nThe larger user base then spawns more frameworks and Yada Yada.\n\nLong story short: it is sufficient enough, built beautiful SPAs wich work on mobile and desktop and will continue to do the minor CSS tweaks required (in fact: my mobile UI tends to be different from the desktop ui due to the simple fact that mobile has different requirements already anyways)\nAnd if one thinks he may do better, I will gladly use a different component library with more diverse components.\n\n----\n\nRecommending right now: fluentui, mudblazor\nThe latter, noteworthy, has MudText, which is a very nice thing to work with and makes one wonder why not more framework adapt such a thing.",
            "Because Microsoft is not like a giant company which can afford good designers.\n\nSo they let programmers make the UI.",
            "Bc nobody uses blazor",
            "I\u2019m a backend engineer, I used c#, and I can tell.",
            "Try using this on mobile,\n[from the official blazorise doc demos](https://bootstrap5demo.blazorise.com/). Some people can't even get it to load, but then when it does the spacing is all over the place, the page literally moves as you click, the word wrap is horrible. Even ignoring the fact that it is slow.\n\nEdit: [this](https://imgur.com/Wi7f6IG) is on the main page. Browsing through the components makes it even worse. At least it doesn't have the connection reload issues that force a loss of context (since I think it's WASM)",
            "I'm a purely backend dev and couldn't agree more. It's super easy to knock together a simple frontend on blazor and it integrates really well with backend work, whereas all these other js frameworks I genuinely wouldn't know where to start, nor do I have any desire to find out.",
            "The idea that backend engineers can\u2019t tell the difference in visual design is absurd to me. I am a backend and infrastructure engineer and I have no problem telling what is beautiful and what is ugly. More importantly, software is to be used by normal people, and most people are not engineers at all. And yet I believe most people can see what ui looks good and what looks bad. I don\u2019t believe that people just suddenly lose their sense of art when they become backend engineers. More likely, they say they don\u2019t care as an excuse for not having the expertise to implement good design. It is a skill issue not a taste issue.",
            "Totally agree. And it\u2019s mean that good UIKit is even more important for Blazor because backend devs have lower UI/UX skills than FronEnd devs and need this support. Otherwise most Blazor sites will look like they were built by backend devs",
            "Also if you're staring at Windows all day I imagine your standards are lower.",
            "It does. On the phone, howewer, it is not. :(\nhttps://i.imgur.com/9DTOYOD.png",
            "This looks pretty cool",
            "Yes, this confuses me too",
            "Yes, headless UI is a right direction",
            "how do you get started with NextJs?\n\nTrying to build an app but also don't want to user MudBlazor, saw an app  using NextJs and it looked much better\n\nDo you use a Rest api to communicate with the backend?",
            "Isn't NextJS for the backend?",
            "By Blazor weakness I meant not the option that you can do it, but the fact that it doesn\u2019t exist out of the box",
            "[deleted]",
            "That exactly the point, you have to style them instead of getting a solid and modern UIKit that you can just use, like tailwindui or something like this",
            "I use it, but for most cases for internal tools. I\u2019m a C# dev and don\u2019t like JS, but for public projects it\u2019s so hard to make decision to move forward with Radzen or any other existing Blazor ui lib",
            "I agree with that, but question is about Blazor UI components that are present at the market, but not about Blazor as a technology. Tailwind is just a css framework, but UiKits includes js part also (for menus, color pickers, popups, etc.) Its not hard to modify it for Blazor but it\u2019s annoying",
            "This guy doesn\u2019t know about programming, just a react Andy trying to stir stuff up. He believes tailwind is exclusive to react and comes \u201cout of the box\u201d",
            "Microsoft is so long in web dev and constantly repeating the same mistakes so the future in the frontend could be the same as with mobiles, when they were pioneers but lost the market for iOS and Android",
            "Tbf the team behind wasm never intended for stuff like blazor to exist. They wanted a more performant runtime next to js. I doubt it will ever truly take off for UI dev.",
            "Yes, I can\u2019t believe that Microsoft doesn\u2019t understand of how sexy UI important for front end. Or they don\u2019t see anything except enterprise segment?",
            "Clearly aren\u2019t a 10X backend engineer.",
            "That component looks awful dang, what a way to show off Blazorise lol. MudBlazor looks fine on my phone though",
            "You don't need to be on mobile either. Just use the mobile simulator built into your browser's dev tools. This is literally unusable.",
            "Css issue",
            "I never said they\u2019re incapable of telling what is beautiful or not. \n\nI can tell that certain art is beautiful as well yet I cannot recreate it.",
            "It was a hobby project from the manager of ASP.NET CORE so it got \"adopted\" into the official framework",
            "No. It\u2019s a SSR framework for react. You CAN use it as a backend as well though I would only use it for very simple backends. In the real world I often see NextJs combined with other tech like .net for the backend.",
            "Blazor \"out of the box\" is just an html renderer, as much as React or Angular.\n\nYou want to use something like MudBlazor or FluentUI to look \"nice\".",
            "Other frameworks don\u2019t provide it \u201cout of the box\u201d you have to add an NPM package just like in blazor you have to add a nuget package.",
            "React does not provide anything out of the box, you have to add it also yourself like Tailwind, Bootstrap etc. which you also do in Blazor. By the sounds of it, youre just too lazy to integrate it",
            "Nothing stopping you from using tailwind with blazor\u2026",
            "Think of blazor as what it is. A framework. You can extend html to make it work better in the app. I use js for many things ui related, but c# and blazor is always the \u201cboss\u201d. Or the orchestrator of things. Works great.",
            "Probably you don\u2019t know that tailwind and tailwindui are the different things. Tailwind - is just a css framework, but tailwindui - is a set of ui components which are provided with React support for client interactivity",
            "Judging by the votes, people don\u2019t seem to get either how important a good attractive modern UI is for the default look and feel of UI libraries and frameworks.",
            "Agreed. I think that's one of the reasons why blazor is just not something I'd use; most people use it for their internal tooling and the few public demonstrations leave a lot to desire. Does mudblazor have public demos?",
            "It's a small typo in the demo. Instead of defining the OnMobile we defined OnTablet media breakpoint. I have fixed it and now I'm unable to publish it as dotnet is giving me some dumb errors \ud83e\udd26",
            "It actually looks alright within the range of 576 and 786px, they have a specific media query for min-width 576px which makes it look normal.",
            "Yeah, but there are issues with Mudblazor and .NET 8, particularly with WASM. Last I checked at least.",
            "Nope, that's just one of the issues that I found. The complete lag when clicking on sub elements isn't CSS, same goes for the fact that clicking on elements from the menus don't make them react and go away, they just stay there. And I wasn't blaming blazor lol, just that it's one of the most popular component libs, and it still has massive visuals issues which proves OPs point",
            "Is this true or are you just memeing?",
            "It has a lot in common with a lot of the other frameworks out there things like server-side rendering.. Dom shifting.. I wouldn't call it a hobby as much as it is the evolution of the web framework for .net.",
            "I need know more.",
            "Thanks, as you can see I'm not a frontend guy \\^\\^",
            "Of course, it's a matter of taste, but MudBlazor and FluentUI triggered the question of why everything is so much better with UIKit in the React ecosystem :)",
            "Sorry for the confusion, by out of the box I meant not technically to be a part of a package, but about available options at the market. I understand that Blazor is much younger than React, but without investing in UiKits it will never reach a similar level of popularity as React which means that React UiKits will continue to be several steps ahead. Something similar we have seen in mobiles, when Microsoft wanted to catch up with iOS and Android but Windows Phone market was too small and not interested for app developers",
            "Or achieving the same result with Blazor native components",
            "Tailwind is just a CSS framework. If you talk about tailwindui components - it also includes the js part. It\u2019s not very hard to adapt it for Blazor but it\u2019s not like full out-of-the-box support which is available for React",
            "I use tailwind and chatgpt to create my components. Also I bought the tailwindui templates - my best investment so far, it made me literally 50X back already. There are also free tailwind libraries out there. From then on you can make it a blazor component by customizing it.",
            "Css issue can't be blamed on blazor",
            "Yeah I wouldnt use Blazor for anything other than in house projects, Its just not ready.",
            "I believe it was Steve Sanderson who created blazor as an experiment but later got added to asp.net.\n\nI\u2019m not sure why that\u2019s a bad thing though.",
            "Maybe just because Blazor is younger?",
            "Are you talking about this: https://getuikit.com/ or this:  https://www.npmjs.com/package/uikit-react? It does seem to offer anything over the components I\u2019m using with Blazor. Genuinely curious in case I\u2019m missing something?",
            "Then go make it? If you want tailwind components in blazor so badly, and not just use the CSS library. I doubt it was meta that made the tailwindui components. So why would we expect Microsoft to?",
            "we are working on it for our blazor components (prerelease). note: our mobile UI on our docs page has a bug on the menu. https://pureblazor.com/components/cards",
            "Yes, but unfortunately, as seen from the thread, many do not understand that there is a problem. I hope Microsoft understands",
            "We have a major customer facing (100k+ users per month) portal developed using blazor working fine on all browsers, both pc and mobile",
            "Steve Ballmer probably used the same logic regarding Windows Mobile. The market is reluctant to invest in a platform with a market share at the level of a statistical error. We see the result. React has a huge audience, and commercial companies create components for it. You can assess the quality and quantity of components for Blazor by opening their demo on a mobile phone",
            "Hows the loading time?",
            "Did you use blazorise?",
            "By this logic I guess HTMX has terrible quality too, since its creator isn\u2019t backing any component libraries either. You\u2019re conflating a quality of a framework with its available component libraries, you\u2019re also coming to it with some preconceived notion that react is somehow better because it has a larger ecosystem.\n\nJquery had a huge ecosystem, I don\u2019t see anyone actively using that for new projects anymore. \n\nBackbone also had a huge following with a not insignificant ecosystem.\n\nThere is nothing wrong with using react, if it fits the bill for your project, or angular or vue or tmpl or htmx or whatever, they are all good. If you don\u2019t want to use blazor, don\u2019t.",
            "Country median download speed is 100+ Mbps, users don't notice the loading.\nLoading page displays like a splash page (the one you see when desktop apps load)",
            "No.",
            "The difference is quite obvious don't you think? Microsoft is a tech giant that has a lot of teams that would like to use styled components if they actually used blazor (and none of them do, which is part of the issue OP is talking about). They also have all the resources in the world to make them, hell they even open sourced components for react and js. Htmx is a community effort, created by a single person. \n\nDogfooding is important, especially when it's a big tech corporation releasing a platform (dotnet in this case) specific framework.\n\n If they don't use it, odds are the project gets neglected and issues don't get solved like they would if it was used internally. This is apparent by the lack of tooling and components from MSFT since they don't actually use blazor. The same isn't really true for a passion project like htmx. \n\n\nPlus it's been years and almost all the available blazor components libraries have major issues. That's pretty odd and unique by itself, assuming the issues aren't inherent to the technology. The entire point if blazor is to streamline development for teams who aren't actually front end dev teams. But if the available components are subpar, that basically means  building your own, with all the expertise that is required to do that and you'll almost be back to needing front end devs again.",
            "If they can see the splash page then they notice the loading. Whether or not you get feedback about it is irrelevant. Most business users don\u2019t care that much about loading unless it\u2019s extreme though.",
            "That last part is what happened in my company. Another team didn\u2019t have front end devs and decided to use blazor for their front end. Later they realized blazor doesn\u2019t really make front end easier. It makes it harder because they now needed to create their own components when mudblazor or alike was lacking. They didn\u2019t know how. \n\nEventually they decided to do a rewrite to something else and they pulled some (me included) front end developers to their team to do said rewrite. We went with react as our entire company uses react for the front end."
        ]
    }
}